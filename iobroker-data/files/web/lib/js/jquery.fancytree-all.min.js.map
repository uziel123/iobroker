{"version":3,"sources":["jquery.fancytree-all.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","_assert","cond","msg","error","consoleApply","method","args","i","s","fn","window","console","apply","e","length","_makeVirtualFunction","methodName","tree","base","extension","extName","prevFunc","baseFunc","_local","ext","_super","arguments","_superApply","prevLocal","prevSuper","prevSuperApply","_subclassObject","attrName","charAt","_getResolvedPromise","context","argArray","undefined","Deferred","this","resolve","promise","resolveWith","_getRejectedPromise","reject","rejectWith","_makeResolveFunc","deferred","_getElementDataAsDict","$el","d","extend","data","json","fancytree","uiFancytree","_escapeTooltip","replace","REX_TOOLTIP","ENTITY_MAP","_makeNodeTitleMatcher","toLowerCase","node","title","indexOf","FancytreeNode","parent","obj","l","name","cl","ul","li","statusNodeType","_isLoading","_error","NODE_ATTRS","unselectableIgnore","unselectableStatus","unselectable","hideCheckbox","NODE_ATTR_MAP","isFunction","NONE_NODE_DATA_MAP","key","options","defaultKey","FT","_nextNodeKey","active","activeNode","selected","lastSelectedNode","children","_setChildren","lazy","_callHook","Fancytree","widget","$div","element","lazyload","lazyLoad","warn","loaderror","fx","removeNode","types","columns","_id","ui","_nextId","_ns","focusNode","_hasFocus","_tempCache","_lastMousedownNode","_enableUpdate","systemFocusElement","lastQuicksearchTerm","lastQuicksearchTime","statusClassPropName","ariaPropName","nodeContainerAttrName","find","remove","$ul","fakeParent","rootNode","expanded","class","appendTo","$container","debugLevel","attr","TEST_IMG","RegExp","REX_HTML","RECURSIVE_REQUEST_ERROR","&","<",">","\"","'","/","IGNORE_KEYCODES","16","17","18","SPECIAL_KEYCODES","8","9","10","13","19","20","27","32","33","34","35","36","37","38","39","40","45","46","59","61","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","173","186","187","188","189","190","191","192","219","220","221","222","MOUSE_BUTTONS","0","1","2","3","CLASS_ATTRS","split","CLASS_ATTR_MAP","TREE_ATTRS","NODE_ATTR_LOWERCASE_MAP","focus","prototype","_findDirectChild","ptr","push","addChildren","insertBefore","pos","origFirstChild","getFirstChild","origLastChild","getLastChild","firstNode","nodeList","isPlainObject","concat","inArray","splice","render","renderStatus","tr","selectMode","fixSelection3FromEndNodes","triggerModifyChild","addClass","className","toggleClass","addNode","mode","getParent","getNextSibling","addPagingNode","n","strings","moreData","icon","partload","removeChild","appendSibling","applyPatch","patch","v","IGNORE_MAP","hasOwnProperty","removeChildren","isVisible","renderTitle","setExpanded","collapseSiblings","copyTo","map","toDict","countChildren","deep","debug","Array","unshift","call","toString","discard","resetLazy","discardMarkup","includeSelf","findAll","match","res","visit","findFirst","_changeSelectStatusAttrs","state","changed","opts","evalOption","partsel","fixSelection3AfterClick","callOpts","flag","isSelected","_walk","child","allSelected","someSelected","unselState","visitParents","fromDict","dict","getChildren","hasChildren","getIndex","getIndexHier","separator","digits","each","getParentList","o","substr","join","getKeyPath","excludeSelf","path","sep","keyPathSeparator","getLevel","level","dtn","ac","includeRoot","getPrevSibling","getSelectedNodes","stopOnParents","isStatusNode","hasFocus","info","isActive","isChildOf","otherNode","isDescendantOf","p","isExpanded","isFirstSibling","isFolder","folder","isLastSibling","isLazy","isLoaded","isLoading","isRoot","isRootNode","isPartsel","isPartload","isPagingNode","isTopLevel","isUndefined","parents","load","forceReload","source","that","wasExpanded","_triggerNodeEvent","always","makeVisible","deferreds","dfd","len","effects","noAnimation","scroll","scrollIntoView","when","done","moveTo","targetNode","prevParent","targetParent","navigate","where","activate","_goto","span","is","setFocus","setActive","KC","keyCode","sib","BACKSPACE","HOME","END","LEFT","RIGHT","UP","DOWN","childNode","removeClass","force","replaceWith","fail","scheduleAction","ms","timer","clearTimeout","self","setTimeout","x","_isNode","topNode","topNodeY","nodeY","containerOffsetTop","duration","queue","scrollOfs","scrollParent","nodeHeight","height","topOfs","top","bottomOfs","bottom","containerHeight","scrollTop","$animateTarget","isParentWindow","newScrollTop","offset","document","body","Math","max","innerHeight","clientHeight","complete","stop","animate","setSelected","setStatus","status","message","details","setTitle","triggerModify","sortChildren","cmp","a","b","y","sort","recursive","callback","isEmptyObject","value","hasClass","classNames","wasAdded","statusElem","curClasses","extraClasses","trim","toggleExpanded","toggleSelected","operation","extra","modifyChild","type","visitAndLoad","_recursion","loaders","then","visitSiblings","_makeHookContext","originalEvent","ctx","typeInfo","funcName","contextObject","_extraArgs","slice","_setExpiringValue","expire","Date","now","_getExpiringValue","entry","_requireExtension","required","before","thisName","extList","extensions","isBefore","isMissing","badOrder","activateKey","getNodeByKey","patchList","p2","patchCount","deferredList","clear","count","enableUpdate","findNextNode","startNode","visibleOnly","reMatch","test","_makeNodeTitleStartMatcher","stopNode","parentChildren","matchingNode","walkVisible","idx","grandParent","siblingCount","generateFormElements","_appender","$result","append","selectedName","checked","activeName","id","empty","hide","insertAfter","filter","getActiveNode","getFocusNode","searchRoot","el","getElementById","idPrefix","ftnode","getRootNode","loadKeyPath","keyPathList","optsOrCallback","pathSegList","notifyWith","matchKey","isArray","_loadKeyPathImpl","__findChild","__lazyload","errMsg","remainMap","tmpParent","segList","subDfd","shift","nodeKey","remain","reactivate","noFocus","reload","_trigger","result","_triggerTreeEvent","nodeClick","expand","targetType","focusOnSelect","clickFolderMode","nodeSetFocus","nodeCollapseSiblings","nodeDblclick","preventDefault","nodeKeydown","matchNode","stamp","event","which","whichChar","String","fromCharCode","clean","altKey","ctrlKey","metaKey","shiftKey","$target","target","handled","autoActivate","quicksearch","getTime","eventToString","nodeSetExpanded","nodeToggleSelected","nodeSetActive","nodeLoadChildren","ajax","delay","requestId","url","_requestId","debugDelay","random","round","textStatus","jqXHR","errorObj","dataType","postProcess","response","enableAspx","parseJSON","errorThrown","reason","nodeSetStatus","ctxErr","metaData","nodeLoadKeyPath","nodeRemoveChild","subCtx","nodeRemoveChildren","nodeRemoveMarkup","nodeRemoveChildMarkup","nodeRenderStatus","nodeRender","collapsed","_recursive","childLI","childNode1","childNode2","next","aria","firstTime","successorLi","parentNode","nextSibling","createElement","generateIds","appendChild","nodeRenderTitle","createNode","renderNode","style","display","firstChild","checkbox","nodeTitle","role","tooltip","iconTooltip","ares","minExpandLevel","radiogroup","iconClass","imagePath","text","titlesTabbable","escapeTitles","escapeHtml","innerHTML","enhanceTitle","$title","$ariaElem","isLastSib","cn","_classNames","cnList","focused","Boolean","removeAttr","lastsib","loading","statusNodePrefix","combinedExpanderPrefix","combinedIconPrefix","noEvents","activeVisible","_afterLoad","prevAC","autoCollapse","lastChild","autoScroll","effect","toggleEffect","animating","toggle","ctx2","isInput","calledByNode","activeElement","closest","uniqueId","nodeSetSelected","_lastSelectIntent","_setStatusNode","_clearStatusNode","loadError","noData","nodeToggleExpanded","treeClear","treeCreate","treeDestroy","$source","treeInit","tabindex","rtl","treeLoad","rootCtx","parseHtml","contents","nodeType","treeRegisterNode","add","treeSetFocus","treeSetOption","callDefault","callCreate","callRender","Widget","_setOption","cache","disabled","direction","scale","keyboard","radio","_create","_extensions","icons","tabbable","_init","_bind","destroy","_unbind","ns","off","on","getNode","tbody","prevPhase","phase","et","getEventTarget","getTree","version","buildType","_FancytreeClass","_FancytreeNodeClass","jquerySupports","positionMyOfs","dottedVersion","major","minor","t","verParts","parseInt","testParts","isVersionAtLeast","assert","createTree","debounce","timeout","invokeAsap","fixPositionOptions","my","at","myParts","exec","atParts","dx","dy","tcn","getEventTargetType","eq","selector","optionName","nodeObject","treeOptions","defaultValue","treeOpt","nodeOpt","setSpanIcon","baseClass","$span","button","keyEventToString","overrideMethod","instance","handler","noop","classes","iPos","tmp","tmp2","allData","lowerCaseAttr","$li","$liSpan","$liA","html","href","search","substring","registerExtension","definition","unescapeHtml","childNodes","nodeValue","countSelected","topOnly","updateCounters","$badge","extOpts","childcounter","childCounter","hideZeros","hideExpanded","widgetMethod1","arg1","foo","_appendCounter","bar","getCloneList","refList","refMap","refKey","keyMap","val","isClone","reRegister","prevKey","prevRefKey","modified","setRefKey","getNodesByRef","changeRefKey","oldRefKey","newRefKey","highlightActiveClones","highlightClones","asString","seed","h1b","k1","remainder","bytes","h1","c1","charCodeAt","hashMurmur3","calcUniqueKey","clones","arr","elem","_removeArrayMember","scpn","_initDragAndDrop","dnd","glyph","didRegisterDnd","plugin","start","draggable","sourceNode","helper","click","left","_onDragEvent","drag","prevTargetNode","dndOpts","updateHelper","dropMarker","dragDrop","dropped","dragStart","addClasses","containment","distance","revert","scrollSpeed","scrollSensitivity","connectToFancytree","$helper","$nodeTag","css","zIndex","position","clone","_addClass","dragHelper","initHelper","droppable","tolerance","greedy","classDropAccept","classDropAfter","classDropBefore","classDropReject","autoExpandMS","focusOnClick","preventVoidMoves","preventRecursiveMoves","smartRevert","dropMarkerOffsetX","dropMarkerInsertOffsetX","dragStop","dragEnter","dragOver","dragExpand","dragLeave","_setDndStatus","hitMode","accept","markerOffsetX","markerAt","instData","dndOpt","glyphOpt","$targetTitle","$dropMarker","z-index","prependTo","show","offsetString","of","eventName","nodeOfs","parentRect","rect","relPos","relPos2","enterResponse","r","trigger","getBoundingClientRect","originalPosition","ESCAPE","_cancelDrag","over","after","pageX","pageY","width","dd","ddmanager","current","cancel","handleDragOver","dnd5","spOfs","sp","$scrollParent","sensitivity","speed","scrolled","tagName","offsetHeight","scrollHeight","LAST_HIT_MODE","relPosY","DRAG_ENTER_RESPONSE","classDropOver","classDropTarget","classDragSource","classDragRemove","nodeMimeType","SOURCE_NODE","setTextTypeJson","preventForeignNodes","preventNonNodes","dragDrag","dragEnd","$temp","pointer-events","dataTransfer","isMove","dropEffect","isCancelled","JSON","stringify","setData","ex","effectAllowed","setDragImage","nodeData","allowDrop","otherNodeData","Object","keys","normalizeDragEnterResponse","getData","parse","isMac","navigator","platform","editStart","$input","local","edit","instOpts","eventData","isNew","orgTitle","input","dirty","beforeEdit","currentNode","editEnd","adjustWidthOfs","inputCss","change","keydown","ENTER","stopPropagation","blur","applyChanges","_event","newVal","save","beforeClose","relatedNode","close","editCreateNode","init","newNode","isEditing","allowEmpty","minWidth","triggerStart","_escapeRegex","str","KeyNoData","_applyFilterImpl","branchMode","_opts","statusNode","re","reHighlight","temp","treeOpts","prevAutoCollapse","hideMode","leavesOnly","clearFilter","fuzzy","reduce","extractHtmlText","highlight","titleWithHighlight","enableFilter","lastFilterArgs","hideExpanders","subMatchCount","matchedByBranch","c","autoExpand","_filterAutoExpanded","nodata","filterNodes","applyFilter","filterBranches","$subMatchBadge","isFilterActive","isMatched","autoApply","counter","hideExpandedCounter","setIcon","setClass","PRESETS","awesome3","checkboxSelected","checkboxUnknown","expanderClosed","expanderLazy","expanderOpen","noExpander","radioSelected","doc","docOpen","folderOpen","awesome4","bootstrap3","material","preset","get","findTdAtColIdx","$tr","colIdx","colspan","prop","findNeighbourTd","$td","$tdNext","prev","td","getColIdx","NAV_KEYS","link","radiobutton","select-one","select-multiple","autofocusInput","handleCursorKeys","gridnav","triggeredByInput","inputType","handleKeys","_loadLazyNodes","keyList","foundOne","expandOpts","persist","missingKeyList","_appendKey","EXPANDED","cookieStore","localStorageStore","localStorage","getItem","set","setItem","removeItem","sessionStorageStore","sessionStorage","ACTIVE","SELECTED","Cookies","cookie","removeCookie","clearData","prefix","cookiePrefix","_data","clearCookies","getPersistData","delim","cookieDelimiter","raw","expires","domain","secure","expandLazy","fireActivate","overrideSource","store","cookieName","storeActive","storeExpanded","storeSelected","storeFocus","prevFocus","selNodes","setChildRowVisibility","checkboxColumnIdx","indentation","nodeColumnIdx","columnCount","$row","$tbody","tableOpts","table","$table","customStatus","renderStatusColumns","renderColumns","rowFragment","createDocumentFragment","firstTr","newRow","prevNode","prevTr","hasCollapsedParents","cloneNode","last","siblings","findPrevRowNode","referenceNode","insertSiblingAfter","insertFirstChild","previousSibling","nextTr","$cb","indent","paddingLeft","_afterExpand","ok","subOpts","activeClass","focusClass","hoverClass","selectedClass","themeroller","nodeName","delegate","defineHeadStyleElement","cssText","$headStyle","styleSheet","renderLevelCss","containerId","depth","levelOfs","lineOfs","labelOfs","measureUnit","rules","reNumUnit","iconWidth","iconSpacing","labelSpacing","iconSpacingUnit","labelSpacingUnit","iconWidthUnit","levelOfsUnit","wide","$dummyLI","$dummyIcon","$dummyUL","parseFloat","maxDepth"],"mappings":"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","file":"jquery.fancytree-all.min.js","sourcesContent":["/*!\n * jquery.fancytree.js\n * Tree view control with support for lazy loading and much more.\n * https://github.com/mar10/fancytree/\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n/** Core Fancytree module.\n */\n\n// UMD wrapper for the Fancytree core module\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree.ui-deps\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree.ui-deps\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n// prevent duplicate loading\nif ( $.ui && $.ui.fancytree ) {\n\t$.ui.fancytree.warn(\"Fancytree: ignored duplicate include\");\n\treturn;\n}\n\n\n/* *****************************************************************************\n * Private functions and variables\n */\n\nvar i, attr,\n\tFT = null, // initialized below\n\tTEST_IMG = new RegExp(/\\.|\\//),  // strings are considered image urls if they contain '.' or '/'\n\tREX_HTML = /[&<>\"'\\/]/g,  // Escape those characters\n\tREX_TOOLTIP = /[<>\"'\\/]/g,  // Don't escape `&` in tooltips\n\tRECURSIVE_REQUEST_ERROR = \"$recursive_request\",\n\tENTITY_MAP = {\"&\": \"&amp;\", \"<\": \"&lt;\", \">\": \"&gt;\", \"\\\"\": \"&quot;\", \"'\": \"&#39;\", \"/\": \"&#x2F;\"},\n\tIGNORE_KEYCODES = { 16: true, 17: true, 18: true },\n\tSPECIAL_KEYCODES = {\n\t\t8: \"backspace\", 9: \"tab\", 10: \"return\", 13: \"return\",\n\t\t// 16: null, 17: null, 18: null, // ignore shift, ctrl, alt\n\t\t19: \"pause\", 20: \"capslock\", 27: \"esc\", 32: \"space\", 33: \"pageup\",\n\t\t34: \"pagedown\", 35: \"end\", 36: \"home\", 37: \"left\", 38: \"up\",\n\t\t39: \"right\", 40: \"down\", 45: \"insert\", 46: \"del\", 59: \";\", 61: \"=\",\n\t\t96: \"0\", 97: \"1\", 98: \"2\", 99: \"3\", 100: \"4\", 101: \"5\", 102: \"6\",\n\t\t103: \"7\", 104: \"8\", 105: \"9\", 106: \"*\", 107: \"+\", 109: \"-\", 110: \".\",\n\t\t111: \"/\", 112: \"f1\", 113: \"f2\", 114: \"f3\", 115: \"f4\", 116: \"f5\",\n\t\t117: \"f6\", 118: \"f7\", 119: \"f8\", 120: \"f9\", 121: \"f10\", 122: \"f11\",\n\t\t123: \"f12\", 144: \"numlock\", 145: \"scroll\", 173: \"-\", 186: \";\", 187: \"=\",\n\t\t188: \",\", 189: \"-\", 190: \".\", 191: \"/\", 192: \"`\", 219: \"[\", 220: \"\\\\\",\n\t\t221: \"]\", 222: \"'\"},\n\tMOUSE_BUTTONS = { 0: \"\", 1: \"left\", 2: \"middle\", 3: \"right\" },\n\t// Boolean attributes that can be set with equivalent class names in the LI tags\n\t// Note: v2.23: checkbox and hideCheckbox are *not* in this list\n\tCLASS_ATTRS = \"active expanded focus folder lazy radiogroup selected unselectable unselectableIgnore\".split(\" \"),\n\tCLASS_ATTR_MAP = {},\n\t// Top-level Fancytree attributes, that can be set by dict\n\tTREE_ATTRS = \"columns types\".split(\" \"),\n\t// TREE_ATTR_MAP = {},\n\t// Top-level FancytreeNode attributes, that can be set by dict\n\tNODE_ATTRS = \"checkbox expanded extraClasses folder icon iconTooltip key lazy radiogroup refKey selected statusNodeType title tooltip type unselectable unselectableIgnore unselectableStatus\".split(\" \"),\n\tNODE_ATTR_MAP = {},\n\t// Mapping of lowercase -> real name (because HTML5 data-... attribute only supports lowercase)\n\tNODE_ATTR_LOWERCASE_MAP = {},\n\t// Attribute names that should NOT be added to node.data\n\tNONE_NODE_DATA_MAP = {\"active\": true, \"children\": true, \"data\": true, \"focus\": true};\n\nfor(i=0; i<CLASS_ATTRS.length; i++){ CLASS_ATTR_MAP[CLASS_ATTRS[i]] = true; }\nfor(i=0; i<NODE_ATTRS.length; i++) {\n\tattr = NODE_ATTRS[i];\n\tNODE_ATTR_MAP[attr] = true;\n\tif( attr !== attr.toLowerCase() ) {\n\t\tNODE_ATTR_LOWERCASE_MAP[attr.toLowerCase()] = attr;\n\t}\n}\n// for(i=0; i<TREE_ATTRS.length; i++) {\n// \tTREE_ATTR_MAP[TREE_ATTRS[i]] = true;\n// }\n\n\nfunction _assert(cond, msg){\n\t// TODO: see qunit.js extractStacktrace()\n\tif(!cond){\n\t\tmsg = msg ? \": \" + msg : \"\";\n\t\t// consoleApply(\"assert\", [!!cond, msg]);\n\t\t$.error(\"Fancytree assertion failed\" + msg);\n\t}\n}\n\n_assert($.ui, \"Fancytree requires jQuery UI (http://jqueryui.com)\");\n\nfunction consoleApply(method, args){\n\tvar i, s,\n\t\tfn = window.console ? window.console[method] : null;\n\n\tif(fn){\n\t\ttry{\n\t\t\tfn.apply(window.console, args);\n\t\t} catch(e) {\n\t\t\t// IE 8?\n\t\t\ts = \"\";\n\t\t\tfor( i=0; i<args.length; i++ ) {\n\t\t\t\ts += args[i];\n\t\t\t}\n\t\t\tfn(s);\n\t\t}\n\t}\n}\n\n/*Return true if x is a FancytreeNode.*/\nfunction _isNode(x){\n\treturn !!(x.tree && x.statusNodeType !== undefined);\n}\n\n/** Return true if dotted version string is equal or higher than requested version.\n *\n * See http://jsfiddle.net/mar10/FjSAN/\n */\nfunction isVersionAtLeast(dottedVersion, major, minor, patch){\n\tvar i, v, t,\n\t\tverParts = $.map($.trim(dottedVersion).split(\".\"), function(e){ return parseInt(e, 10); }),\n\t\ttestParts = $.map(Array.prototype.slice.call(arguments, 1), function(e){ return parseInt(e, 10); });\n\n\tfor( i = 0; i < testParts.length; i++ ){\n\t\tv = verParts[i] || 0;\n\t\tt = testParts[i] || 0;\n\t\tif( v !== t ){\n\t\t\treturn ( v > t );\n\t\t}\n\t}\n\treturn true;\n}\n\n/** Return a wrapper that calls sub.methodName() and exposes\n *  this             : tree\n *  this._local      : tree.ext.EXTNAME\n *  this._super      : base.methodName.call()\n *  this._superApply : base.methodName.apply()\n */\nfunction _makeVirtualFunction(methodName, tree, base, extension, extName){\n\t// $.ui.fancytree.debug(\"_makeVirtualFunction\", methodName, tree, base, extension, extName);\n\t// if(rexTestSuper && !rexTestSuper.test(func)){\n\t//     // extension.methodName() doesn't call _super(), so no wrapper required\n\t//     return func;\n\t// }\n\t// Use an immediate function as closure\n\tvar proxy = (function(){\n\t\tvar prevFunc = tree[methodName],      // org. tree method or prev. proxy\n\t\t\tbaseFunc = extension[methodName], //\n\t\t\t_local = tree.ext[extName],\n\t\t\t_super = function(){\n\t\t\t\treturn prevFunc.apply(tree, arguments);\n\t\t\t},\n\t\t\t_superApply = function(args){\n\t\t\t\treturn prevFunc.apply(tree, args);\n\t\t\t};\n\n\t\t// Return the wrapper function\n\t\treturn function(){\n\t\t\tvar prevLocal = tree._local,\n\t\t\t\tprevSuper = tree._super,\n\t\t\t\tprevSuperApply = tree._superApply;\n\n\t\t\ttry{\n\t\t\t\ttree._local = _local;\n\t\t\t\ttree._super = _super;\n\t\t\t\ttree._superApply = _superApply;\n\t\t\t\treturn  baseFunc.apply(tree, arguments);\n\t\t\t}finally{\n\t\t\t\ttree._local = prevLocal;\n\t\t\t\ttree._super = prevSuper;\n\t\t\t\ttree._superApply = prevSuperApply;\n\t\t\t}\n\t\t};\n\t})(); // end of Immediate Function\n\treturn proxy;\n}\n\n/**\n * Subclass `base` by creating proxy functions\n */\nfunction _subclassObject(tree, base, extension, extName){\n\t// $.ui.fancytree.debug(\"_subclassObject\", tree, base, extension, extName);\n\tfor(var attrName in extension){\n\t\tif(typeof extension[attrName] === \"function\"){\n\t\t\tif(typeof tree[attrName] === \"function\"){\n\t\t\t\t// override existing method\n\t\t\t\ttree[attrName] = _makeVirtualFunction(attrName, tree, base, extension, extName);\n\t\t\t}else if(attrName.charAt(0) === \"_\"){\n\t\t\t\t// Create private methods in tree.ext.EXTENSION namespace\n\t\t\t\ttree.ext[extName][attrName] = _makeVirtualFunction(attrName, tree, base, extension, extName);\n\t\t\t}else{\n\t\t\t\t$.error(\"Could not override tree.\" + attrName + \". Use prefix '_' to create tree.\" + extName + \"._\" + attrName);\n\t\t\t}\n\t\t}else{\n\t\t\t// Create member variables in tree.ext.EXTENSION namespace\n\t\t\tif(attrName !== \"options\"){\n\t\t\t\ttree.ext[extName][attrName] = extension[attrName];\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction _getResolvedPromise(context, argArray){\n\tif(context === undefined){\n\t\treturn $.Deferred(function(){this.resolve();}).promise();\n\t}else{\n\t\treturn $.Deferred(function(){this.resolveWith(context, argArray);}).promise();\n\t}\n}\n\n\nfunction _getRejectedPromise(context, argArray){\n\tif(context === undefined){\n\t\treturn $.Deferred(function(){this.reject();}).promise();\n\t}else{\n\t\treturn $.Deferred(function(){this.rejectWith(context, argArray);}).promise();\n\t}\n}\n\n\nfunction _makeResolveFunc(deferred, context){\n\treturn function(){\n\t\tdeferred.resolveWith(context);\n\t};\n}\n\n\nfunction _getElementDataAsDict($el){\n\t// Evaluate 'data-NAME' attributes with special treatment for 'data-json'.\n\tvar d = $.extend({}, $el.data()),\n\t\tjson = d.json;\n\n\tdelete d.fancytree; // added to container by widget factory (old jQuery UI)\n\tdelete d.uiFancytree; // added to container by widget factory\n\n\tif( json ) {\n\t\tdelete d.json;\n\t\t// <li data-json='...'> is already returned as object (http://api.jquery.com/data/#data-html5)\n\t\td = $.extend(d, json);\n\t}\n\treturn d;\n}\n\n\nfunction _escapeTooltip(s){\n\treturn (\"\" + s).replace(REX_TOOLTIP, function(s) {\n\t\treturn ENTITY_MAP[s];\n\t});\n}\n\n\n// TODO: use currying\nfunction _makeNodeTitleMatcher(s){\n\ts = s.toLowerCase();\n\treturn function(node){\n\t\treturn node.title.toLowerCase().indexOf(s) >= 0;\n\t};\n}\n\n\nfunction _makeNodeTitleStartMatcher(s){\n\tvar reMatch = new RegExp(\"^\" + s, \"i\");\n\treturn function(node){\n\t\treturn reMatch.test(node.title);\n\t};\n}\n\n\n/* *****************************************************************************\n * FancytreeNode\n */\n\n\n/**\n * Creates a new FancytreeNode\n *\n * @class FancytreeNode\n * @classdesc A FancytreeNode represents the hierarchical data model and operations.\n *\n * @param {FancytreeNode} parent\n * @param {NodeData} obj\n *\n * @property {Fancytree} tree The tree instance\n * @property {FancytreeNode} parent The parent node\n * @property {string} key Node id (must be unique inside the tree)\n * @property {string} title Display name (may contain HTML)\n * @property {object} data Contains all extra data that was passed on node creation\n * @property {FancytreeNode[] | null | undefined} children Array of child nodes.<br>\n *     For lazy nodes, null or undefined means 'not yet loaded'. Use an empty array\n *     to define a node that has no children.\n * @property {boolean} expanded Use isExpanded(), setExpanded() to access this property.\n * @property {string} extraClasses Additional CSS classes, added to the node's `&lt;span>`.<br>\n *     Note: use `node.add/remove/toggleClass()` to modify.\n * @property {boolean} folder Folder nodes have different default icons and click behavior.<br>\n *     Note: Also non-folders may have children.\n * @property {string} statusNodeType null for standard nodes. Otherwise type of special system node: 'error', 'loading', 'nodata', or 'paging'.\n * @property {boolean} lazy True if this node is loaded on demand, i.e. on first expansion.\n * @property {boolean} selected Use isSelected(), setSelected() to access this property.\n * @property {string} tooltip Alternative description used as hover popup\n * @property {string} iconTooltip Description used as hover popup for icon. @since 2.27\n * @property {string} type Node type, used with tree.types map. @since 2.27\n */\nfunction FancytreeNode(parent, obj){\n\tvar i, l, name, cl;\n\n\tthis.parent = parent;\n\tthis.tree = parent.tree;\n\tthis.ul = null;\n\tthis.li = null;  // <li id='key' ftnode=this> tag\n\tthis.statusNodeType = null; // if this is a temp. node to display the status of its parent\n\tthis._isLoading = false;    // if this node itself is loading\n\tthis._error = null;         // {message: '...'} if a load error occurred\n\tthis.data = {};\n\n\t// TODO: merge this code with node.toDict()\n\t// copy attributes from obj object\n\tfor(i=0, l=NODE_ATTRS.length; i<l; i++){\n\t\tname = NODE_ATTRS[i];\n\t\tthis[name] = obj[name];\n\t}\n\t// unselectableIgnore and unselectableStatus imply unselectable\n\tif( this.unselectableIgnore != null || this.unselectableStatus != null ) {\n\t\tthis.unselectable = true;\n\t}\n\tif( obj.hideCheckbox ) {\n\t\t$.error(\"'hideCheckbox' node option was removed in v2.23.0: use 'checkbox: false'\");\n\t}\n\t// node.data += obj.data\n\tif(obj.data){\n\t\t$.extend(this.data, obj.data);\n\t}\n\t// Copy all other attributes to this.data.NAME\n\tfor(name in obj){\n\t\tif(!NODE_ATTR_MAP[name] && !$.isFunction(obj[name]) && !NONE_NODE_DATA_MAP[name]){\n\t\t\t// node.data.NAME = obj.NAME\n\t\t\tthis.data[name] = obj[name];\n\t\t}\n\t}\n\n\t// Fix missing key\n\tif( this.key == null ){ // test for null OR undefined\n\t\tif( this.tree.options.defaultKey ) {\n\t\t\tthis.key = this.tree.options.defaultKey(this);\n\t\t\t_assert(this.key, \"defaultKey() must return a unique key\");\n\t\t} else {\n\t\t\tthis.key = \"_\" + (FT._nextNodeKey++);\n\t\t}\n\t} else {\n\t\tthis.key = \"\" + this.key; // Convert to string (#217)\n\t}\n\n\t// Fix tree.activeNode\n\t// TODO: not elegant: we use obj.active as marker to set tree.activeNode\n\t// when loading from a dictionary.\n\tif(obj.active){\n\t\t_assert(this.tree.activeNode === null, \"only one active node allowed\");\n\t\tthis.tree.activeNode = this;\n\t}\n\tif( obj.selected ){ // #186\n\t\tthis.tree.lastSelectedNode = this;\n\t}\n\t// TODO: handle obj.focus = true\n\n\t// Create child nodes\n\tcl = obj.children;\n\tif( cl ){\n\t\tif( cl.length ){\n\t\t\tthis._setChildren(cl);\n\t\t} else {\n\t\t\t// if an empty array was passed for a lazy node, keep it, in order to mark it 'loaded'\n\t\t\tthis.children = this.lazy ? [] : null;\n\t\t}\n\t} else {\n\t\tthis.children = null;\n\t}\n\t// Add to key/ref map (except for root node)\n//\tif( parent ) {\n\tthis.tree._callHook(\"treeRegisterNode\", this.tree, true, this);\n//\t}\n}\n\n\nFancytreeNode.prototype = /** @lends FancytreeNode# */{\n\t/* Return the direct child FancytreeNode with a given key, index. */\n\t_findDirectChild: function(ptr){\n\t\tvar i, l,\n\t\t\tcl = this.children;\n\n\t\tif(cl){\n\t\t\tif(typeof ptr === \"string\"){\n\t\t\t\tfor(i=0, l=cl.length; i<l; i++){\n\t\t\t\t\tif(cl[i].key === ptr){\n\t\t\t\t\t\treturn cl[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof ptr === \"number\"){\n\t\t\t\treturn this.children[ptr];\n\t\t\t}else if(ptr.parent === this){\n\t\t\t\treturn ptr;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t// TODO: activate()\n\t// TODO: activateSilently()\n\t/* Internal helper called in recursive addChildren sequence.*/\n\t_setChildren: function(children){\n\t\t_assert(children && (!this.children || this.children.length === 0), \"only init supported\");\n\t\tthis.children = [];\n\t\tfor(var i=0, l=children.length; i<l; i++){\n\t\t\tthis.children.push(new FancytreeNode(this, children[i]));\n\t\t}\n\t},\n\t/**\n\t * Append (or insert) a list of child nodes.\n\t *\n\t * @param {NodeData[]} children array of child node definitions (also single child accepted)\n\t * @param {FancytreeNode | string | Integer} [insertBefore] child node (or key or index of such).\n\t *     If omitted, the new children are appended.\n\t * @returns {FancytreeNode} first child added\n\t *\n\t * @see FancytreeNode#applyPatch\n\t */\n\taddChildren: function(children, insertBefore){\n\t\tvar i, l, pos,\n\t\t\torigFirstChild = this.getFirstChild(),\n\t\t\torigLastChild = this.getLastChild(),\n\t\t\tfirstNode = null,\n\t\t\tnodeList = [];\n\n\t\tif($.isPlainObject(children) ){\n\t\t\tchildren = [children];\n\t\t}\n\t\tif(!this.children){\n\t\t\tthis.children = [];\n\t\t}\n\t\tfor(i=0, l=children.length; i<l; i++){\n\t\t\tnodeList.push(new FancytreeNode(this, children[i]));\n\t\t}\n\t\tfirstNode = nodeList[0];\n\t\tif(insertBefore == null){\n\t\t\tthis.children = this.children.concat(nodeList);\n\t\t}else{\n\t\t\t// Returns null if insertBefore is not a direct child:\n\t\t\tinsertBefore = this._findDirectChild(insertBefore);\n\t\t\tpos = $.inArray(insertBefore, this.children);\n\t\t\t_assert(pos >= 0, \"insertBefore must be an existing child\");\n\t\t\t// insert nodeList after children[pos]\n\t\t\tthis.children.splice.apply(this.children, [pos, 0].concat(nodeList));\n\t\t}\n\t\tif ( origFirstChild && !insertBefore ) {\n\t\t\t// #708: Fast path -- don't render every child of root, just the new ones!\n\t\t\t// #723, #729: but only if it's appended to an existing child list\n\t\t\tfor(i=0, l=nodeList.length; i<l; i++) {\n\t\t\t\tnodeList[i].render();   // New nodes were never rendered before\n\t\t\t}\n\t\t\t// Adjust classes where status may have changed\n\t\t\t// Has a first child\n\t\t\tif (origFirstChild !== this.getFirstChild()) {\n\t\t\t\t// Different first child -- recompute classes\n\t\t\t\torigFirstChild.renderStatus();\n\t\t\t}\n\t\t\tif (origLastChild !== this.getLastChild()) {\n\t\t\t\t// Different last child -- recompute classes\n\t\t\t\torigLastChild.renderStatus();\n\t\t\t}\n\t\t} else if( !this.parent || this.parent.ul || this.tr ){\n\t\t\t// render if the parent was rendered (or this is a root node)\n\t\t\tthis.render();\n\t\t}\n\t\tif( this.tree.options.selectMode === 3 ){\n\t\t\tthis.fixSelection3FromEndNodes();\n\t\t}\n\t\tthis.triggerModifyChild(\"add\", nodeList.length === 1 ? nodeList[0] : null);\n\t\treturn firstNode;\n\t},\n\t/**\n\t * Add class to node's span tag and to .extraClasses.\n\t *\n\t * @param {string} className class name\n\t *\n\t * @since 2.17\n\t */\n\taddClass: function(className){\n\t\treturn this.toggleClass(className, true);\n\t},\n\t/**\n\t * Append or prepend a node, or append a child node.\n\t *\n\t * This a convenience function that calls addChildren()\n\t *\n\t * @param {NodeData} node node definition\n\t * @param {string} [mode=child] 'before', 'after', 'firstChild', or 'child' ('over' is a synonym for 'child')\n\t * @returns {FancytreeNode} new node\n\t */\n\taddNode: function(node, mode){\n\t\tif(mode === undefined || mode === \"over\"){\n\t\t\tmode = \"child\";\n\t\t}\n\t\tswitch(mode){\n\t\tcase \"after\":\n\t\t\treturn this.getParent().addChildren(node, this.getNextSibling());\n\t\tcase \"before\":\n\t\t\treturn this.getParent().addChildren(node, this);\n\t\tcase \"firstChild\":\n\t\t\t// Insert before the first child if any\n\t\t\tvar insertBefore = (this.children ? this.children[0] : null);\n\t\t\treturn this.addChildren(node, insertBefore);\n\t\tcase \"child\":\n\t\tcase \"over\":\n\t\t\treturn this.addChildren(node);\n\t\t}\n\t\t_assert(false, \"Invalid mode: \" + mode);\n\t},\n\t/**Add child status nodes that indicate 'More...', etc.\n\t *\n\t * This also maintains the node's `partload` property.\n\t * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n\t * @param {string} [mode='child'] 'child'|firstChild'\n\t * @since 2.15\n\t */\n\taddPagingNode: function(node, mode){\n\t\tvar i, n;\n\n\t\tmode = mode || \"child\";\n\t\tif( node === false ) {\n\t\t\tfor(i=this.children.length-1; i >= 0; i--) {\n\t\t\t\tn = this.children[i];\n\t\t\t\tif( n.statusNodeType === \"paging\" ) {\n\t\t\t\t\tthis.removeChild(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.partload = false;\n\t\t\treturn;\n\t\t}\n\t\tnode = $.extend({\n\t\t\ttitle: this.tree.options.strings.moreData,\n\t\t\tstatusNodeType: \"paging\",\n\t\t\ticon: false\n\t\t}, node);\n\t\tthis.partload = true;\n\t\treturn this.addNode(node, mode);\n\t},\n\t/**\n\t * Append new node after this.\n\t *\n\t * This a convenience function that calls addNode(node, 'after')\n\t *\n\t * @param {NodeData} node node definition\n\t * @returns {FancytreeNode} new node\n\t */\n\tappendSibling: function(node){\n\t\treturn this.addNode(node, \"after\");\n\t},\n\t/**\n\t * Modify existing child nodes.\n\t *\n\t * @param {NodePatch} patch\n\t * @returns {$.Promise}\n\t * @see FancytreeNode#addChildren\n\t */\n\tapplyPatch: function(patch) {\n\t\t// patch [key, null] means 'remove'\n\t\tif(patch === null){\n\t\t\tthis.remove();\n\t\t\treturn _getResolvedPromise(this);\n\t\t}\n\t\t// TODO: make sure that root node is not collapsed or modified\n\t\t// copy (most) attributes to node.ATTR or node.data.ATTR\n\t\tvar name, promise, v,\n\t\t\tIGNORE_MAP = { children: true, expanded: true, parent: true }; // TODO: should be global\n\n\t\tfor(name in patch){\n\t\t\tv = patch[name];\n\t\t\tif( !IGNORE_MAP[name] && !$.isFunction(v)){\n\t\t\t\tif(NODE_ATTR_MAP[name]){\n\t\t\t\t\tthis[name] = v;\n\t\t\t\t}else{\n\t\t\t\t\tthis.data[name] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Remove and/or create children\n\t\tif(patch.hasOwnProperty(\"children\")){\n\t\t\tthis.removeChildren();\n\t\t\tif(patch.children){ // only if not null and not empty list\n\t\t\t\t// TODO: addChildren instead?\n\t\t\t\tthis._setChildren(patch.children);\n\t\t\t}\n\t\t\t// TODO: how can we APPEND or INSERT child nodes?\n\t\t}\n\t\tif(this.isVisible()){\n\t\t\tthis.renderTitle();\n\t\t\tthis.renderStatus();\n\t\t}\n\t\t// Expand collapse (final step, since this may be async)\n\t\tif(patch.hasOwnProperty(\"expanded\")){\n\t\t\tpromise = this.setExpanded(patch.expanded);\n\t\t}else{\n\t\t\tpromise = _getResolvedPromise(this);\n\t\t}\n\t\treturn promise;\n\t},\n\t/** Collapse all sibling nodes.\n\t * @returns {$.Promise}\n\t */\n\tcollapseSiblings: function() {\n\t\treturn this.tree._callHook(\"nodeCollapseSiblings\", this);\n\t},\n\t/** Copy this node as sibling or child of `node`.\n\t *\n\t * @param {FancytreeNode} node source node\n\t * @param {string} [mode=child] 'before' | 'after' | 'child'\n\t * @param {Function} [map] callback function(NodeData) that could modify the new node\n\t * @returns {FancytreeNode} new\n\t */\n\tcopyTo: function(node, mode, map) {\n\t\treturn node.addNode(this.toDict(true, map), mode);\n\t},\n\t/** Count direct and indirect children.\n\t *\n\t * @param {boolean} [deep=true] pass 'false' to only count direct children\n\t * @returns {int} number of child nodes\n\t */\n\tcountChildren: function(deep) {\n\t\tvar cl = this.children, i, l, n;\n\t\tif( !cl ){\n\t\t\treturn 0;\n\t\t}\n\t\tn = cl.length;\n\t\tif(deep !== false){\n\t\t\tfor(i=0, l=n; i<l; i++){\n\t\t\t\tn += cl[i].countChildren();\n\t\t\t}\n\t\t}\n\t\treturn n;\n\t},\n\t// TODO: deactivate()\n\t/** Write to browser console if debugLevel >= 2 (prepending node info)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\tdebug: function(msg){\n\t\tif( this.tree.options.debugLevel >= 2 ) {\n\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\tconsoleApply(\"log\", arguments);\n\t\t}\n\t},\n\t/** Deprecated.\n\t * @deprecated since 2014-02-16. Use resetLazy() instead.\n\t */\n\tdiscard: function(){\n\t\tthis.warn(\"FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.\");\n\t\treturn this.resetLazy();\n\t},\n\t/** Remove DOM elements for all descendents. May be called on .collapse event\n\t * to keep the DOM small.\n\t * @param {boolean} [includeSelf=false]\n\t */\n\tdiscardMarkup: function(includeSelf){\n\t\tvar fn = includeSelf ? \"nodeRemoveMarkup\" : \"nodeRemoveChildMarkup\";\n\t\tthis.tree._callHook(fn, this);\n\t},\n\t/**Find all nodes that match condition (excluding self).\n\t *\n\t * @param {string | function(node)} match title string to search for, or a\n\t *     callback function that returns `true` if a node is matched.\n\t * @returns {FancytreeNode[]} array of nodes (may be empty)\n\t */\n\tfindAll: function(match) {\n\t\tmatch = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n\t\tvar res = [];\n\t\tthis.visit(function(n){\n\t\t\tif(match(n)){\n\t\t\t\tres.push(n);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t},\n\t/**Find first node that matches condition (excluding self).\n\t *\n\t * @param {string | function(node)} match title string to search for, or a\n\t *     callback function that returns `true` if a node is matched.\n\t * @returns {FancytreeNode} matching node or null\n\t * @see FancytreeNode#findAll\n\t */\n\tfindFirst: function(match) {\n\t\tmatch = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n\t\tvar res = null;\n\t\tthis.visit(function(n){\n\t\t\tif(match(n)){\n\t\t\t\tres = n;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t},\n\t/* Apply selection state (internal use only) */\n\t_changeSelectStatusAttrs: function(state) {\n\t\tvar changed = false,\n\t\t\topts = this.tree.options,\n\t\t\tunselectable = FT.evalOption(\"unselectable\", this, this, opts, false),\n\t\t\tunselectableStatus = FT.evalOption(\"unselectableStatus\", this, this, opts, undefined);\n\n\t\tif( unselectable && unselectableStatus != null ) {\n\t\t\tstate = unselectableStatus;\n\t\t}\n\t\tswitch(state){\n\t\tcase false:\n\t\t\tchanged = ( this.selected || this.partsel );\n\t\t\tthis.selected = false;\n\t\t\tthis.partsel = false;\n\t\t\tbreak;\n\t\tcase true:\n\t\t\tchanged = ( !this.selected || !this.partsel );\n\t\t\tthis.selected = true;\n\t\t\tthis.partsel = true;\n\t\t\tbreak;\n\t\tcase undefined:\n\t\t\tchanged = ( this.selected || !this.partsel );\n\t\t\tthis.selected = false;\n\t\t\tthis.partsel = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t_assert(false, \"invalid state: \" + state);\n\t\t}\n\t\t// this.debug(\"fixSelection3AfterLoad() _changeSelectStatusAttrs()\", state, changed);\n\t\tif( changed ){\n\t\t\tthis.renderStatus();\n\t\t}\n\t\treturn changed;\n\t},\n\t/**\n\t * Fix selection status, after this node was (de)selected in multi-hier mode.\n\t * This includes (de)selecting all children.\n\t */\n\tfixSelection3AfterClick: function(callOpts) {\n\t\tvar flag = this.isSelected();\n\n//\t\tthis.debug(\"fixSelection3AfterClick()\");\n\n\t\tthis.visit(function(node){\n\t\t\tnode._changeSelectStatusAttrs(flag);\n\t\t});\n\t\tthis.fixSelection3FromEndNodes(callOpts);\n\t},\n\t/**\n\t * Fix selection status for multi-hier mode.\n\t * Only end-nodes are considered to update the descendants branch and parents.\n\t * Should be called after this node has loaded new children or after\n\t * children have been modified using the API.\n\t */\n\tfixSelection3FromEndNodes: function(callOpts) {\n\t\tvar opts = this.tree.options;\n\n//\t\tthis.debug(\"fixSelection3FromEndNodes()\");\n\t\t_assert(opts.selectMode === 3, \"expected selectMode 3\");\n\n\t\t// Visit all end nodes and adjust their parent's `selected` and `partsel`\n\t\t// attributes. Return selection state true, false, or undefined.\n\t\tfunction _walk(node){\n\t\t\tvar i, l, child, s, state, allSelected, someSelected, unselIgnore, unselState,\n\t\t\t\tchildren = node.children;\n\n\t\t\tif( children && children.length ){\n\t\t\t\t// check all children recursively\n\t\t\t\tallSelected = true;\n\t\t\t\tsomeSelected = false;\n\n\t\t\t\tfor( i=0, l=children.length; i<l; i++ ){\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\t// the selection state of a node is not relevant; we need the end-nodes\n\t\t\t\t\ts = _walk(child);\n\t\t\t\t\t// if( !child.unselectableIgnore ) {\n\t\t\t\t\tunselIgnore = FT.evalOption(\"unselectableIgnore\", child, child, opts, false);\n\t\t\t\t\tif( !unselIgnore ) {\n\t\t\t\t\t\tif( s !== false ) {\n\t\t\t\t\t\t\tsomeSelected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( s !== true ) {\n\t\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstate = allSelected ? true : (someSelected ? undefined : false);\n\t\t\t}else{\n\t\t\t\t// This is an end-node: simply report the status\n\t\t\t\tunselState = FT.evalOption(\"unselectableStatus\", node, node, opts, undefined);\n\t\t\t\tstate = ( unselState == null ) ? !!node.selected : !!unselState;\n\t\t\t}\n\t\t\tnode._changeSelectStatusAttrs(state);\n\t\t\treturn state;\n\t\t}\n\t\t_walk(this);\n\n\t\t// Update parent's state\n\t\tthis.visitParents(function(node){\n\t\t\tvar i, l, child, state, unselIgnore, unselState,\n\t\t\t\tchildren = node.children,\n\t\t\t\tallSelected = true,\n\t\t\t\tsomeSelected = false;\n\n\t\t\tfor( i=0, l=children.length; i<l; i++ ){\n\t\t\t\tchild = children[i];\n\t\t\t\tunselIgnore = FT.evalOption(\"unselectableIgnore\", child, child, opts, false);\n\t\t\t\tif( !unselIgnore ) {\n\t\t\t\t\tunselState = FT.evalOption(\"unselectableStatus\", child,  child, opts, undefined);\n\t\t\t\t\tstate = ( unselState == null ) ? !!child.selected : !!unselState;\n\t\t\t\t\t// When fixing the parents, we trust the sibling status (i.e.\n\t\t\t\t\t// we don't recurse)\n\t\t\t\t\tif( state || child.partsel ) {\n\t\t\t\t\t\tsomeSelected = true;\n\t\t\t\t\t}\n\t\t\t\t\tif( !state ) {\n\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tstate = allSelected ? true : (someSelected ? undefined : false);\n\t\t\tnode._changeSelectStatusAttrs(state);\n\t\t});\n\t},\n\t// TODO: focus()\n\t/**\n\t * Update node data. If dict contains 'children', then also replace\n\t * the hole sub tree.\n\t * @param {NodeData} dict\n\t *\n\t * @see FancytreeNode#addChildren\n\t * @see FancytreeNode#applyPatch\n\t */\n\tfromDict: function(dict) {\n\t\t// copy all other attributes to this.data.xxx\n\t\tfor(var name in dict){\n\t\t\tif(NODE_ATTR_MAP[name]){\n\t\t\t\t// node.NAME = dict.NAME\n\t\t\t\tthis[name] = dict[name];\n\t\t\t}else if(name === \"data\"){\n\t\t\t\t// node.data += dict.data\n\t\t\t\t$.extend(this.data, dict.data);\n\t\t\t}else if(!$.isFunction(dict[name]) && !NONE_NODE_DATA_MAP[name]){\n\t\t\t\t// node.data.NAME = dict.NAME\n\t\t\t\tthis.data[name] = dict[name];\n\t\t\t}\n\t\t}\n\t\tif(dict.children){\n\t\t\t// recursively set children and render\n\t\t\tthis.removeChildren();\n\t\t\tthis.addChildren(dict.children);\n\t\t}\n\t\tthis.renderTitle();\n/*\n\t\tvar children = dict.children;\n\t\tif(children === undefined){\n\t\t\tthis.data = $.extend(this.data, dict);\n\t\t\tthis.render();\n\t\t\treturn;\n\t\t}\n\t\tdict = $.extend({}, dict);\n\t\tdict.children = undefined;\n\t\tthis.data = $.extend(this.data, dict);\n\t\tthis.removeChildren();\n\t\tthis.addChild(children);\n*/\n\t},\n\t/** Return the list of child nodes (undefined for unexpanded lazy nodes).\n\t * @returns {FancytreeNode[] | undefined}\n\t */\n\tgetChildren: function() {\n\t\tif(this.hasChildren() === undefined){ // TODO: only required for lazy nodes?\n\t\t\treturn undefined; // Lazy node: unloaded, currently loading, or load error\n\t\t}\n\t\treturn this.children;\n\t},\n\t/** Return the first child node or null.\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetFirstChild: function() {\n\t\treturn this.children ? this.children[0] : null;\n\t},\n\t/** Return the 0-based child index.\n\t * @returns {int}\n\t */\n\tgetIndex: function() {\n//\t\treturn this.parent.children.indexOf(this);\n\t\treturn $.inArray(this, this.parent.children); // indexOf doesn't work in IE7\n\t},\n\t/** Return the hierarchical child index (1-based, e.g. '3.2.4').\n\t * @param {string} [separator=\".\"]\n\t * @param {int} [digits=1]\n\t * @returns {string}\n\t */\n\tgetIndexHier: function(separator, digits) {\n\t\tseparator = separator || \".\";\n\t\tvar s,\n\t\t\tres = [];\n\t\t$.each(this.getParentList(false, true), function(i, o){\n\t\t\ts = \"\" + (o.getIndex() + 1);\n\t\t\tif( digits ){\n\t\t\t\t// prepend leading zeroes\n\t\t\t\ts = (\"0000000\" + s).substr(-digits);\n\t\t\t}\n\t\t\tres.push(s);\n\t\t});\n\t\treturn res.join(separator);\n\t},\n\t/** Return the parent keys separated by options.keyPathSeparator, e.g. \"id_1/id_17/id_32\".\n\t * @param {boolean} [excludeSelf=false]\n\t * @returns {string}\n\t */\n\tgetKeyPath: function(excludeSelf) {\n\t\tvar path = [],\n\t\t\tsep = this.tree.options.keyPathSeparator;\n\t\tthis.visitParents(function(n){\n\t\t\tif(n.parent){\n\t\t\t\tpath.unshift(n.key);\n\t\t\t}\n\t\t}, !excludeSelf);\n\t\treturn sep + path.join(sep);\n\t},\n\t/** Return the last child of this node or null.\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetLastChild: function() {\n\t\treturn this.children ? this.children[this.children.length - 1] : null;\n\t},\n\t/** Return node depth. 0: System root node, 1: visible top-level node, 2: first sub-level, ... .\n\t * @returns {int}\n\t */\n\tgetLevel: function() {\n\t\tvar level = 0,\n\t\t\tdtn = this.parent;\n\t\twhile( dtn ) {\n\t\t\tlevel++;\n\t\t\tdtn = dtn.parent;\n\t\t}\n\t\treturn level;\n\t},\n\t/** Return the successor node (under the same parent) or null.\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetNextSibling: function() {\n\t\t// TODO: use indexOf, if available: (not in IE6)\n\t\tif( this.parent ){\n\t\t\tvar i, l,\n\t\t\t\tac = this.parent.children;\n\n\t\t\tfor(i=0, l=ac.length-1; i<l; i++){ // up to length-2, so next(last) = null\n\t\t\t\tif( ac[i] === this ){\n\t\t\t\t\treturn ac[i+1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t/** Return the parent node (null for the system root node).\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetParent: function() {\n\t\t// TODO: return null for top-level nodes?\n\t\treturn this.parent;\n\t},\n\t/** Return an array of all parent nodes (top-down).\n\t * @param {boolean} [includeRoot=false] Include the invisible system root node.\n\t * @param {boolean} [includeSelf=false] Include the node itself.\n\t * @returns {FancytreeNode[]}\n\t */\n\tgetParentList: function(includeRoot, includeSelf) {\n\t\tvar l = [],\n\t\t\tdtn = includeSelf ? this : this.parent;\n\t\twhile( dtn ) {\n\t\t\tif( includeRoot || dtn.parent ){\n\t\t\t\tl.unshift(dtn);\n\t\t\t}\n\t\t\tdtn = dtn.parent;\n\t\t}\n\t\treturn l;\n\t},\n\t/** Return the predecessor node (under the same parent) or null.\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetPrevSibling: function() {\n\t\tif( this.parent ){\n\t\t\tvar i, l,\n\t\t\t\tac = this.parent.children;\n\n\t\t\tfor(i=1, l=ac.length; i<l; i++){ // start with 1, so prev(first) = null\n\t\t\t\tif( ac[i] === this ){\n\t\t\t\t\treturn ac[i-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t/**\n\t * Return an array of selected descendant nodes.\n\t * @param {boolean} [stopOnParents=false] only return the topmost selected\n\t *     node (useful with selectMode 3)\n\t * @returns {FancytreeNode[]}\n\t */\n\tgetSelectedNodes: function(stopOnParents) {\n\t\tvar nodeList = [];\n\t\tthis.visit(function(node){\n\t\t\tif( node.selected ) {\n\t\t\t\tnodeList.push(node);\n\t\t\t\tif( stopOnParents === true ){\n\t\t\t\t\treturn \"skip\"; // stop processing this branch\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn nodeList;\n\t},\n\t/** Return true if node has children. Return undefined if not sure, i.e. the node is lazy and not yet loaded).\n\t * @returns {boolean | undefined}\n\t */\n\thasChildren: function() {\n\t\tif(this.lazy){\n\t\t\tif(this.children == null ){\n\t\t\t\t// null or undefined: Not yet loaded\n\t\t\t\treturn undefined;\n\t\t\t}else if(this.children.length === 0){\n\t\t\t\t// Loaded, but response was empty\n\t\t\t\treturn false;\n\t\t\t}else if(this.children.length === 1 && this.children[0].isStatusNode() ){\n\t\t\t\t// Currently loading or load error\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn !!( this.children && this.children.length );\n\t},\n\t/** Return true if node has keyboard focus.\n\t * @returns {boolean}\n\t */\n\thasFocus: function() {\n\t\treturn (this.tree.hasFocus() && this.tree.focusNode === this);\n\t},\n\t/** Write to browser console if debugLevel >= 1 (prepending node info)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\tinfo: function(msg){\n\t\tif( this.tree.options.debugLevel >= 1 ) {\n\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\tconsoleApply(\"info\", arguments);\n\t\t}\n\t},\n\t/** Return true if node is active (see also FancytreeNode#isSelected).\n\t * @returns {boolean}\n\t */\n\tisActive: function() {\n\t\treturn (this.tree.activeNode === this);\n\t},\n\t/** Return true if node is a direct child of otherNode.\n\t * @param {FancytreeNode} otherNode\n\t * @returns {boolean}\n\t */\n\tisChildOf: function(otherNode) {\n\t\treturn (this.parent && this.parent === otherNode);\n\t},\n\t/** Return true, if node is a direct or indirect sub node of otherNode.\n\t * @param {FancytreeNode} otherNode\n\t * @returns {boolean}\n\t */\n\tisDescendantOf: function(otherNode) {\n\t\tif(!otherNode || otherNode.tree !== this.tree){\n\t\t\treturn false;\n\t\t}\n\t\tvar p = this.parent;\n\t\twhile( p ) {\n\t\t\tif( p === otherNode ){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif( p === p.parent ) { $.error(\"Recursive parent link: \" + p); }\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn false;\n\t},\n\t/** Return true if node is expanded.\n\t * @returns {boolean}\n\t */\n\tisExpanded: function() {\n\t\treturn !!this.expanded;\n\t},\n\t/** Return true if node is the first node of its parent's children.\n\t * @returns {boolean}\n\t */\n\tisFirstSibling: function() {\n\t\tvar p = this.parent;\n\t\treturn !p || p.children[0] === this;\n\t},\n\t/** Return true if node is a folder, i.e. has the node.folder attribute set.\n\t * @returns {boolean}\n\t */\n\tisFolder: function() {\n\t\treturn !!this.folder;\n\t},\n\t/** Return true if node is the last node of its parent's children.\n\t * @returns {boolean}\n\t */\n\tisLastSibling: function() {\n\t\tvar p = this.parent;\n\t\treturn !p || p.children[p.children.length-1] === this;\n\t},\n\t/** Return true if node is lazy (even if data was already loaded)\n\t * @returns {boolean}\n\t */\n\tisLazy: function() {\n\t\treturn !!this.lazy;\n\t},\n\t/** Return true if node is lazy and loaded. For non-lazy nodes always return true.\n\t * @returns {boolean}\n\t */\n\tisLoaded: function() {\n\t\treturn !this.lazy || this.hasChildren() !== undefined; // Also checks if the only child is a status node\n\t},\n\t/** Return true if children are currently beeing loaded, i.e. a Ajax request is pending.\n\t * @returns {boolean}\n\t */\n\tisLoading: function() {\n\t\treturn !!this._isLoading;\n\t},\n\t/*\n\t * @deprecated since v2.4.0:  Use isRootNode() instead\n\t */\n\tisRoot: function() {\n\t\treturn this.isRootNode();\n\t},\n\t/** Return true if node is partially selected (tri-state).\n\t * @returns {boolean}\n\t * @since 2.23\n\t */\n\tisPartsel: function() {\n\t\treturn !this.selected && !!this.partsel;\n\t},\n\t/** (experimental) Return true if this is partially loaded.\n\t * @returns {boolean}\n\t * @since 2.15\n\t */\n\tisPartload: function() {\n\t\treturn !!this.partload;\n\t},\n\t/** Return true if this is the (invisible) system root node.\n\t * @returns {boolean}\n\t * @since 2.4\n\t */\n\tisRootNode: function() {\n\t\treturn (this.tree.rootNode === this);\n\t},\n\t/** Return true if node is selected, i.e. has a checkmark set (see also FancytreeNode#isActive).\n\t * @returns {boolean}\n\t */\n\tisSelected: function() {\n\t\treturn !!this.selected;\n\t},\n\t/** Return true if this node is a temporarily generated system node like\n\t * 'loading', 'paging', or 'error' (node.statusNodeType contains the type).\n\t * @returns {boolean}\n\t */\n\tisStatusNode: function() {\n\t\treturn !!this.statusNodeType;\n\t},\n\t/** Return true if this node is a status node of type 'paging'.\n\t * @returns {boolean}\n\t * @since 2.15\n\t */\n\tisPagingNode: function() {\n\t\treturn this.statusNodeType === \"paging\";\n\t},\n\t/** Return true if this a top level node, i.e. a direct child of the (invisible) system root node.\n\t * @returns {boolean}\n\t * @since 2.4\n\t */\n\tisTopLevel: function() {\n\t\treturn (this.tree.rootNode === this.parent);\n\t},\n\t/** Return true if node is lazy and not yet loaded. For non-lazy nodes always return false.\n\t * @returns {boolean}\n\t */\n\tisUndefined: function() {\n\t\treturn this.hasChildren() === undefined; // also checks if the only child is a status node\n\t},\n\t/** Return true if all parent nodes are expanded. Note: this does not check\n\t * whether the node is scrolled into the visible part of the screen.\n\t * @returns {boolean}\n\t */\n\tisVisible: function() {\n\t\tvar i, l,\n\t\t\tparents = this.getParentList(false, false);\n\n\t\tfor(i=0, l=parents.length; i<l; i++){\n\t\t\tif( ! parents[i].expanded ){ return false; }\n\t\t}\n\t\treturn true;\n\t},\n\t/** Deprecated.\n\t * @deprecated since 2014-02-16: use load() instead.\n\t */\n\tlazyLoad: function(discard) {\n\t\tthis.warn(\"FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.\");\n\t\treturn this.load(discard);\n\t},\n\t/**\n\t * Load all children of a lazy node if neccessary. The <i>expanded</i> state is maintained.\n\t * @param {boolean} [forceReload=false] Pass true to discard any existing nodes before. Otherwise this method does nothing if the node was already loaded.\n\t * @returns {$.Promise}\n\t */\n\tload: function(forceReload) {\n\t\tvar res, source,\n\t\t\tthat = this,\n\t\t\twasExpanded = this.isExpanded();\n\n\t\t_assert( this.isLazy(), \"load() requires a lazy node\" );\n\t\t// _assert( forceReload || this.isUndefined(), \"Pass forceReload=true to re-load a lazy node\" );\n\t\tif( !forceReload && !this.isUndefined() ) {\n\t\t\treturn _getResolvedPromise(this);\n\t\t}\n\t\tif( this.isLoaded() ){\n\t\t\tthis.resetLazy(); // also collapses\n\t\t}\n\t\t// This method is also called by setExpanded() and loadKeyPath(), so we\n\t\t// have to avoid recursion.\n\t\tsource = this.tree._triggerNodeEvent(\"lazyLoad\", this);\n\t\tif( source === false ) { // #69\n\t\t\treturn _getResolvedPromise(this);\n\t\t}\n\t\t_assert(typeof source !== \"boolean\", \"lazyLoad event must return source in data.result\");\n\t\tres = this.tree._callHook(\"nodeLoadChildren\", this, source);\n\t\tif( wasExpanded ) {\n\t\t\tthis.expanded = true;\n\t\t\tres.always(function(){\n\t\t\t\tthat.render();\n\t\t\t});\n\t\t} else {\n\t\t\tres.always(function(){\n\t\t\t\tthat.renderStatus();  // fix expander icon to 'loaded'\n\t\t\t});\n\t\t}\n\t\treturn res;\n\t},\n\t/** Expand all parents and optionally scroll into visible area as neccessary.\n\t * Promise is resolved, when lazy loading and animations are done.\n\t * @param {object} [opts] passed to `setExpanded()`.\n\t *     Defaults to {noAnimation: false, noEvents: false, scrollIntoView: true}\n\t * @returns {$.Promise}\n\t */\n\tmakeVisible: function(opts) {\n\t\tvar i,\n\t\t\tthat = this,\n\t\t\tdeferreds = [],\n\t\t\tdfd = new $.Deferred(),\n\t\t\tparents = this.getParentList(false, false),\n\t\t\tlen = parents.length,\n\t\t\teffects = !(opts && opts.noAnimation === true),\n\t\t\tscroll = !(opts && opts.scrollIntoView === false);\n\n\t\t// Expand bottom-up, so only the top node is animated\n\t\tfor(i = len - 1; i >= 0; i--){\n\t\t\t// that.debug(\"pushexpand\" + parents[i]);\n\t\t\tdeferreds.push(parents[i].setExpanded(true, opts));\n\t\t}\n\t\t$.when.apply($, deferreds).done(function(){\n\t\t\t// All expands have finished\n\t\t\t// that.debug(\"expand DONE\", scroll);\n\t\t\tif( scroll ){\n\t\t\t\tthat.scrollIntoView(effects).done(function(){\n\t\t\t\t\t// that.debug(\"scroll DONE\");\n\t\t\t\t\tdfd.resolve();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdfd.resolve();\n\t\t\t}\n\t\t});\n\t\treturn dfd.promise();\n\t},\n\t/** Move this node to targetNode.\n\t *  @param {FancytreeNode} targetNode\n\t *  @param {string} mode <pre>\n\t *      'child': append this node as last child of targetNode.\n\t *               This is the default. To be compatble with the D'n'd\n\t *               hitMode, we also accept 'over'.\n\t *      'firstChild': add this node as first child of targetNode.\n\t *      'before': add this node as sibling before targetNode.\n\t *      'after': add this node as sibling after targetNode.</pre>\n\t *  @param {function} [map] optional callback(FancytreeNode) to allow modifcations\n\t */\n\tmoveTo: function(targetNode, mode, map) {\n\t\tif(mode === undefined || mode === \"over\"){\n\t\t\tmode = \"child\";\n\t\t} else if ( mode === \"firstChild\" ) {\n\t\t\tif( targetNode.children && targetNode.children.length ) {\n\t\t\t\tmode = \"before\";\n\t\t\t\ttargetNode = targetNode.children[0];\n\t\t\t} else {\n\t\t\t\tmode = \"child\";\n\t\t\t}\n\t\t}\n\t\tvar pos,\n\t\t\tprevParent = this.parent,\n\t\t\ttargetParent = (mode === \"child\") ? targetNode : targetNode.parent;\n\n\t\tif(this === targetNode){\n\t\t\treturn;\n\t\t}else if( !this.parent  ){\n\t\t\t$.error(\"Cannot move system root\");\n\t\t}else if( targetParent.isDescendantOf(this) ){\n\t\t\t$.error(\"Cannot move a node to its own descendant\");\n\t\t}\n\t\tif( targetParent !== prevParent ) {\n\t\t\tprevParent.triggerModifyChild(\"remove\", this);\n\t\t}\n\t\t// Unlink this node from current parent\n\t\tif( this.parent.children.length === 1 ) {\n\t\t\tif( this.parent === targetParent ){\n\t\t\t\treturn; // #258\n\t\t\t}\n\t\t\tthis.parent.children = this.parent.lazy ? [] : null;\n\t\t\tthis.parent.expanded = false;\n\t\t} else {\n\t\t\tpos = $.inArray(this, this.parent.children);\n\t\t\t_assert(pos >= 0, \"invalid source parent\");\n\t\t\tthis.parent.children.splice(pos, 1);\n\t\t}\n\t\t// Remove from source DOM parent\n//\t\tif(this.parent.ul){\n//\t\t\tthis.parent.ul.removeChild(this.li);\n//\t\t}\n\n\t\t// Insert this node to target parent's child list\n\t\tthis.parent = targetParent;\n\t\tif( targetParent.hasChildren() ) {\n\t\t\tswitch(mode) {\n\t\t\tcase \"child\":\n\t\t\t\t// Append to existing target children\n\t\t\t\ttargetParent.children.push(this);\n\t\t\t\tbreak;\n\t\t\tcase \"before\":\n\t\t\t\t// Insert this node before target node\n\t\t\t\tpos = $.inArray(targetNode, targetParent.children);\n\t\t\t\t_assert(pos >= 0, \"invalid target parent\");\n\t\t\t\ttargetParent.children.splice(pos, 0, this);\n\t\t\t\tbreak;\n\t\t\tcase \"after\":\n\t\t\t\t// Insert this node after target node\n\t\t\t\tpos = $.inArray(targetNode, targetParent.children);\n\t\t\t\t_assert(pos >= 0, \"invalid target parent\");\n\t\t\t\ttargetParent.children.splice(pos+1, 0, this);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$.error(\"Invalid mode \" + mode);\n\t\t\t}\n\t\t} else {\n\t\t\ttargetParent.children = [ this ];\n\t\t}\n\t\t// Parent has no <ul> tag yet:\n//\t\tif( !targetParent.ul ) {\n//\t\t\t// This is the parent's first child: create UL tag\n//\t\t\t// (Hidden, because it will be\n//\t\t\ttargetParent.ul = document.createElement(\"ul\");\n//\t\t\ttargetParent.ul.style.display = \"none\";\n//\t\t\ttargetParent.li.appendChild(targetParent.ul);\n//\t\t}\n//\t\t// Issue 319: Add to target DOM parent (only if node was already rendered(expanded))\n//\t\tif(this.li){\n//\t\t\ttargetParent.ul.appendChild(this.li);\n//\t\t}^\n\n\t\t// Let caller modify the nodes\n\t\tif( map ){\n\t\t\ttargetNode.visit(map, true);\n\t\t}\n\t\tif( targetParent === prevParent ) {\n\t\t\ttargetParent.triggerModifyChild(\"move\", this);\n\t\t} else {\n\t\t\t// prevParent.triggerModifyChild(\"remove\", this);\n\t\t\ttargetParent.triggerModifyChild(\"add\", this);\n\t\t}\n\t\t// Handle cross-tree moves\n\t\tif( this.tree !== targetNode.tree ) {\n\t\t\t// Fix node.tree for all source nodes\n//\t\t\t_assert(false, \"Cross-tree move is not yet implemented.\");\n\t\t\tthis.warn(\"Cross-tree moveTo is experimantal!\");\n\t\t\tthis.visit(function(n){\n\t\t\t\t// TODO: fix selection state and activation, ...\n\t\t\t\tn.tree = targetNode.tree;\n\t\t\t}, true);\n\t\t}\n\n\t\t// A collaposed node won't re-render children, so we have to remove it manually\n\t\t// if( !targetParent.expanded ){\n\t\t//   prevParent.ul.removeChild(this.li);\n\t\t// }\n\n\t\t// Update HTML markup\n\t\tif( !prevParent.isDescendantOf(targetParent)) {\n\t\t\tprevParent.render();\n\t\t}\n\t\tif( !targetParent.isDescendantOf(prevParent) && targetParent !== prevParent) {\n\t\t\ttargetParent.render();\n\t\t}\n\t\t// TODO: fix selection state\n\t\t// TODO: fix active state\n\n/*\n\t\tvar tree = this.tree;\n\t\tvar opts = tree.options;\n\t\tvar pers = tree.persistence;\n\n\n\t\t// Always expand, if it's below minExpandLevel\n//\t\ttree.logDebug (\"%s._addChildNode(%o), l=%o\", this, ftnode, ftnode.getLevel());\n\t\tif ( opts.minExpandLevel >= ftnode.getLevel() ) {\n//\t\t\ttree.logDebug (\"Force expand for %o\", ftnode);\n\t\t\tthis.bExpanded = true;\n\t\t}\n\n\t\t// In multi-hier mode, update the parents selection state\n\t\t// DT issue #82: only if not initializing, because the children may not exist yet\n//\t\tif( !ftnode.data.isStatusNode() && opts.selectMode==3 && !isInitializing )\n//\t\t\tftnode._fixSelectionState();\n\n\t\t// In multi-hier mode, update the parents selection state\n\t\tif( ftnode.bSelected && opts.selectMode==3 ) {\n\t\t\tvar p = this;\n\t\t\twhile( p ) {\n\t\t\t\tif( !p.hasSubSel )\n\t\t\t\t\tp._setSubSel(true);\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t}\n\t\t// render this node and the new child\n\t\tif ( tree.bEnableUpdate )\n\t\t\tthis.render();\n\n\t\treturn ftnode;\n\n*/\n\t},\n\t/** Set focus relative to this node and optionally activate.\n\t *\n\t * @param {number} where The keyCode that would normally trigger this move,\n\t *\t\te.g. `$.ui.keyCode.LEFT` would collapse the node if it\n\t *      is expanded or move to the parent oterwise.\n\t * @param {boolean} [activate=true]\n\t * @returns {$.Promise}\n\t */\n\tnavigate: function(where, activate) {\n\t\tvar i, parents, res,\n\t\t\thandled = true,\n\t\t\tKC = $.ui.keyCode,\n\t\t\tsib = null;\n\n\t\t// Navigate to node\n\t\tfunction _goto(n){\n\t\t\tif( n ){\n\t\t\t\t// setFocus/setActive will scroll later (if autoScroll is specified)\n\t\t\t\ttry { n.makeVisible({scrollIntoView: false}); } catch(e) {} // #272\n\t\t\t\t// Node may still be hidden by a filter\n\t\t\t\tif( ! $(n.span).is(\":visible\") ) {\n\t\t\t\t\tn.debug(\"Navigate: skipping hidden node\");\n\t\t\t\t\tn.navigate(where, activate);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn activate === false ? n.setFocus() : n.setActive();\n\t\t\t}\n\t\t}\n\n\t\tswitch( where ) {\n\t\t\tcase KC.BACKSPACE:\n\t\t\t\tif( this.parent && this.parent.parent ) {\n\t\t\t\t\tres = _goto(this.parent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase KC.HOME:\n\t\t\t\tthis.tree.visit(function(n){  // goto first visible node\n\t\t\t\t\tif( $(n.span).is(\":visible\") ) {\n\t\t\t\t\t\tres = _goto(n);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase KC.END:\n\t\t\t\tthis.tree.visit(function(n){  // goto last visible node\n\t\t\t\t\tif( $(n.span).is(\":visible\") ) {\n\t\t\t\t\t\tres = n;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif( res ) {\n\t\t\t\t\tres = _goto(res);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase KC.LEFT:\n\t\t\t\tif( this.expanded ) {\n\t\t\t\t\tthis.setExpanded(false);\n\t\t\t\t\tres = _goto(this);\n\t\t\t\t} else if( this.parent && this.parent.parent ) {\n\t\t\t\t\tres = _goto(this.parent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase KC.RIGHT:\n\t\t\t\tif( !this.expanded && (this.children || this.lazy) ) {\n\t\t\t\t\tthis.setExpanded();\n\t\t\t\t\tres = _goto(this);\n\t\t\t\t} else if( this.children && this.children.length ) {\n\t\t\t\t\tres = _goto(this.children[0]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase KC.UP:\n\t\t\t\tsib = this.getPrevSibling();\n\t\t\t\t// #359: skip hidden sibling nodes, preventing a _goto() recursion\n\t\t\t\twhile( sib && !$(sib.span).is(\":visible\") ) {\n\t\t\t\t\tsib = sib.getPrevSibling();\n\t\t\t\t}\n\t\t\t\twhile( sib && sib.expanded && sib.children && sib.children.length ) {\n\t\t\t\t\tsib = sib.children[sib.children.length - 1];\n\t\t\t\t}\n\t\t\t\tif( !sib && this.parent && this.parent.parent ){\n\t\t\t\t\tsib = this.parent;\n\t\t\t\t}\n\t\t\t\tres = _goto(sib);\n\t\t\t\tbreak;\n\t\t\tcase KC.DOWN:\n\t\t\t\tif( this.expanded && this.children && this.children.length ) {\n\t\t\t\t\tsib = this.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tparents = this.getParentList(false, true);\n\t\t\t\t\tfor(i=parents.length-1; i>=0; i--) {\n\t\t\t\t\t\tsib = parents[i].getNextSibling();\n\t\t\t\t\t\t// #359: skip hidden sibling nodes, preventing a _goto() recursion\n\t\t\t\t\t\twhile( sib && !$(sib.span).is(\":visible\") ) {\n\t\t\t\t\t\t\tsib = sib.getNextSibling();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( sib ){ break; }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tres = _goto(sib);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thandled = false;\n\t\t}\n\t\treturn res || _getResolvedPromise();\n\t},\n\t/**\n\t * Remove this node (not allowed for system root).\n\t */\n\tremove: function() {\n\t\treturn this.parent.removeChild(this);\n\t},\n\t/**\n\t * Remove childNode from list of direct children.\n\t * @param {FancytreeNode} childNode\n\t */\n\tremoveChild: function(childNode) {\n\t\treturn this.tree._callHook(\"nodeRemoveChild\", this, childNode);\n\t},\n\t/**\n\t * Remove all child nodes and descendents. This converts the node into a leaf.<br>\n\t * If this was a lazy node, it is still considered 'loaded'; call node.resetLazy()\n\t * in order to trigger lazyLoad on next expand.\n\t */\n\tremoveChildren: function() {\n\t\treturn this.tree._callHook(\"nodeRemoveChildren\", this);\n\t},\n\t/**\n\t * Remove class from node's span tag and .extraClasses.\n\t *\n\t * @param {string} className class name\n\t *\n\t * @since 2.17\n\t */\n\tremoveClass: function(className){\n\t\treturn this.toggleClass(className, false);\n\t},\n\t/**\n\t * This method renders and updates all HTML markup that is required\n\t * to display this node in its current state.<br>\n\t * Note:\n\t * <ul>\n\t * <li>It should only be neccessary to call this method after the node object\n\t *     was modified by direct access to its properties, because the common\n\t *     API methods (node.setTitle(), moveTo(), addChildren(), remove(), ...)\n\t *     already handle this.\n\t * <li> {@link FancytreeNode#renderTitle} and {@link FancytreeNode#renderStatus}\n\t *     are implied. If changes are more local, calling only renderTitle() or\n\t *     renderStatus() may be sufficient and faster.\n\t * </ul>\n\t *\n\t * @param {boolean} [force=false] re-render, even if html markup was already created\n\t * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n\t */\n\trender: function(force, deep) {\n\t\treturn this.tree._callHook(\"nodeRender\", this, force, deep);\n\t},\n\t/** Create HTML markup for the node's outer &lt;span> (expander, checkbox, icon, and title).\n\t * Implies {@link FancytreeNode#renderStatus}.\n\t * @see Fancytree_Hooks#nodeRenderTitle\n\t */\n\trenderTitle: function() {\n\t\treturn this.tree._callHook(\"nodeRenderTitle\", this);\n\t},\n\t/** Update element's CSS classes according to node state.\n\t * @see Fancytree_Hooks#nodeRenderStatus\n\t */\n\trenderStatus: function() {\n\t\treturn this.tree._callHook(\"nodeRenderStatus\", this);\n\t},\n\t/**\n\t * (experimental) Replace this node with `source`.\n\t * (Currently only available for paging nodes.)\n\t * @param {NodeData[]} source List of child node definitions\n\t * @since 2.15\n\t */\n\treplaceWith: function(source) {\n\t\tvar res,\n\t\t\tparent = this.parent,\n\t\t\tpos = $.inArray(this, parent.children),\n\t\t\tthat = this;\n\n\t\t_assert( this.isPagingNode(), \"replaceWith() currently requires a paging status node\" );\n\n\t\tres = this.tree._callHook(\"nodeLoadChildren\", this, source);\n\t\tres.done(function(data){\n\t\t\t// New nodes are currently children of `this`.\n\t\t\tvar children = that.children;\n\t\t\t// Prepend newly loaded child nodes to `this`\n\t\t\t// Move new children after self\n\t\t\tfor( i=0; i<children.length; i++ ) {\n\t\t\t\tchildren[i].parent = parent;\n\t\t\t}\n\t\t\tparent.children.splice.apply(parent.children, [pos + 1, 0].concat(children));\n\n\t\t\t// Remove self\n\t\t\tthat.children = null;\n\t\t\tthat.remove();\n\t\t\t// Redraw new nodes\n\t\t\tparent.render();\n\t\t\t// TODO: set node.partload = false if this was tha last paging node?\n\t\t\t// parent.addPagingNode(false);\n\t\t}).fail(function(){\n\t\t\tthat.setExpanded();\n\t\t});\n\t\treturn res;\n\t\t// $.error(\"Not implemented: replaceWith()\");\n\t},\n\t/**\n\t * Remove all children, collapse, and set the lazy-flag, so that the lazyLoad\n\t * event is triggered on next expand.\n\t */\n\tresetLazy: function() {\n\t\tthis.removeChildren();\n\t\tthis.expanded = false;\n\t\tthis.lazy = true;\n\t\tthis.children = undefined;\n\t\tthis.renderStatus();\n\t},\n\t/** Schedule activity for delayed execution (cancel any pending request).\n\t *  scheduleAction('cancel') will only cancel a pending request (if any).\n\t * @param {string} mode\n\t * @param {number} ms\n\t */\n\tscheduleAction: function(mode, ms) {\n\t\tif( this.tree.timer ) {\n\t\t\tclearTimeout(this.tree.timer);\n//            this.tree.debug(\"clearTimeout(%o)\", this.tree.timer);\n\t\t}\n\t\tthis.tree.timer = null;\n\t\tvar self = this; // required for closures\n\t\tswitch (mode) {\n\t\tcase \"cancel\":\n\t\t\t// Simply made sure that timer was cleared\n\t\t\tbreak;\n\t\tcase \"expand\":\n\t\t\tthis.tree.timer = setTimeout(function(){\n\t\t\t\tself.tree.debug(\"setTimeout: trigger expand\");\n\t\t\t\tself.setExpanded(true);\n\t\t\t}, ms);\n\t\t\tbreak;\n\t\tcase \"activate\":\n\t\t\tthis.tree.timer = setTimeout(function(){\n\t\t\t\tself.tree.debug(\"setTimeout: trigger activate\");\n\t\t\t\tself.setActive(true);\n\t\t\t}, ms);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$.error(\"Invalid mode \" + mode);\n\t\t}\n//        this.tree.debug(\"setTimeout(%s, %s): %s\", mode, ms, this.tree.timer);\n\t},\n\t/**\n\t *\n\t * @param {boolean | PlainObject} [effects=false] animation options.\n\t * @param {object} [options=null] {topNode: null, effects: ..., parent: ...} this node will remain visible in\n\t *     any case, even if `this` is outside the scroll pane.\n\t * @returns {$.Promise}\n\t */\n\tscrollIntoView: function(effects, options) {\n\t\tif( options !== undefined && _isNode(options) ) {\n\t\t\tthis.warn(\"scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.\");\n\t\t\toptions = {topNode: options};\n\t\t}\n\t\t// this.$scrollParent = (this.options.scrollParent === \"auto\") ? $ul.scrollParent() : $(this.options.scrollParent);\n\t\t// this.$scrollParent = this.$scrollParent.length ? this.$scrollParent || this.$container;\n\n\t\tvar topNodeY, nodeY, horzScrollbarHeight, containerOffsetTop,\n\t\t\topts = $.extend({\n\t\t\t\teffects: (effects === true) ? {duration: 200, queue: false} : effects,\n\t\t\t\tscrollOfs: this.tree.options.scrollOfs,\n\t\t\t\tscrollParent: this.tree.options.scrollParent || this.tree.$container,\n\t\t\t\ttopNode: null\n\t\t\t}, options),\n\t\t\tdfd = new $.Deferred(),\n\t\t\tthat = this,\n\t\t\tnodeHeight = $(this.span).height(),\n\t\t\t$container = $(opts.scrollParent),\n\t\t\ttopOfs = opts.scrollOfs.top || 0,\n\t\t\tbottomOfs = opts.scrollOfs.bottom || 0,\n\t\t\tcontainerHeight = $container.height(),// - topOfs - bottomOfs,\n\t\t\tscrollTop = $container.scrollTop(),\n\t\t\t$animateTarget = $container,\n\t\t\tisParentWindow = $container[0] === window,\n\t\t\ttopNode = opts.topNode || null,\n\t\t\tnewScrollTop = null;\n\n\t\t// this.debug(\"scrollIntoView(), scrollTop=\" + scrollTop, opts.scrollOfs);\n//\t\t_assert($(this.span).is(\":visible\"), \"scrollIntoView node is invisible\"); // otherwise we cannot calc offsets\n\t\tif( !$(this.span).is(\":visible\") ) {\n\t\t\t// We cannot calc offsets for hidden elements\n\t\t\tthis.warn(\"scrollIntoView(): node is invisible.\");\n\t\t\treturn _getResolvedPromise();\n\t\t}\n\t\tif( isParentWindow ) {\n\t\t\tnodeY = $(this.span).offset().top;\n\t\t\ttopNodeY = (topNode && topNode.span) ? $(topNode.span).offset().top : 0;\n\t\t\t$animateTarget = $(\"html,body\");\n\n\t\t} else {\n\t\t\t_assert($container[0] !== document && $container[0] !== document.body,\n\t\t\t\t\"scrollParent should be a simple element or `window`, not document or body.\");\n\n\t\t\tcontainerOffsetTop = $container.offset().top,\n\t\t\tnodeY = $(this.span).offset().top - containerOffsetTop + scrollTop; // relative to scroll parent\n\t\t\ttopNodeY = topNode ? $(topNode.span).offset().top - containerOffsetTop + scrollTop : 0;\n\t\t\thorzScrollbarHeight = Math.max(0, ($container.innerHeight() - $container[0].clientHeight));\n\t\t\tcontainerHeight -= horzScrollbarHeight;\n\t\t}\n\n\t\t// this.debug(\"    scrollIntoView(), nodeY=\" + nodeY + \", containerHeight=\" + containerHeight);\n\t\tif( nodeY < (scrollTop + topOfs) ){\n\t\t\t// Node is above visible container area\n\t\t\tnewScrollTop = nodeY - topOfs;\n\t\t\t// this.debug(\"    scrollIntoView(), UPPER newScrollTop=\" + newScrollTop);\n\n\t\t}else if((nodeY + nodeHeight) > (scrollTop + containerHeight - bottomOfs)){\n\t\t\tnewScrollTop = nodeY + nodeHeight - containerHeight + bottomOfs;\n\t\t\t// this.debug(\"    scrollIntoView(), LOWER newScrollTop=\" + newScrollTop);\n\t\t\t// If a topNode was passed, make sure that it is never scrolled\n\t\t\t// outside the upper border\n\t\t\tif(topNode){\n\t\t\t\t_assert(topNode.isRootNode() || $(topNode.span).is(\":visible\"), \"topNode must be visible\");\n\t\t\t\tif( topNodeY < newScrollTop ){\n\t\t\t\t\tnewScrollTop = topNodeY - topOfs;\n\t\t\t\t\t// this.debug(\"    scrollIntoView(), TOP newScrollTop=\" + newScrollTop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(newScrollTop !== null){\n\t\t\t// this.debug(\"    scrollIntoView(), SET newScrollTop=\" + newScrollTop);\n\t\t\tif(opts.effects){\n\t\t\t\topts.effects.complete = function(){\n\t\t\t\t\tdfd.resolveWith(that);\n\t\t\t\t};\n\t\t\t\t$animateTarget.stop(true).animate({\n\t\t\t\t\tscrollTop: newScrollTop\n\t\t\t\t}, opts.effects);\n\t\t\t}else{\n\t\t\t\t$animateTarget[0].scrollTop = newScrollTop;\n\t\t\t\tdfd.resolveWith(this);\n\t\t\t}\n\t\t}else{\n\t\t\tdfd.resolveWith(this);\n\t\t}\n\t\treturn dfd.promise();\n\t},\n\n\t/**Activate this node.\n\t * @param {boolean} [flag=true] pass false to deactivate\n\t * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n\t * @returns {$.Promise}\n\t */\n\tsetActive: function(flag, opts){\n\t\treturn this.tree._callHook(\"nodeSetActive\", this, flag, opts);\n\t},\n\t/**Expand or collapse this node. Promise is resolved, when lazy loading and animations are done.\n\t * @param {boolean} [flag=true] pass false to collapse\n\t * @param {object} [opts] additional options. Defaults to {noAnimation: false, noEvents: false}\n\t * @returns {$.Promise}\n\t */\n\tsetExpanded: function(flag, opts){\n\t\treturn this.tree._callHook(\"nodeSetExpanded\", this, flag, opts);\n\t},\n\t/**Set keyboard focus to this node.\n\t * @param {boolean} [flag=true] pass false to blur\n\t * @see Fancytree#setFocus\n\t */\n\tsetFocus: function(flag){\n\t\treturn this.tree._callHook(\"nodeSetFocus\", this, flag);\n\t},\n\t/**Select this node, i.e. check the checkbox.\n\t * @param {boolean} [flag=true] pass false to deselect\n\t * @param {object} [opts] additional options. Defaults to {noEvents: false, p\n\t *     propagateDown: null, propagateUp: null, callback: null }\n\t */\n\tsetSelected: function(flag, opts){\n\t\treturn this.tree._callHook(\"nodeSetSelected\", this, flag, opts);\n\t},\n\t/**Mark a lazy node as 'error', 'loading', 'nodata', or 'ok'.\n\t * @param {string} status 'error'|'empty'|'ok'\n\t * @param {string} [message]\n\t * @param {string} [details]\n\t */\n\tsetStatus: function(status, message, details){\n\t\treturn this.tree._callHook(\"nodeSetStatus\", this, status, message, details);\n\t},\n\t/**Rename this node.\n\t * @param {string} title\n\t */\n\tsetTitle: function(title){\n\t\tthis.title = title;\n\t\tthis.renderTitle();\n\t\tthis.triggerModify(\"rename\");\n\t},\n\t/**Sort child list by title.\n\t * @param {function} [cmp] custom compare function(a, b) that returns -1, 0, or 1 (defaults to sort by title).\n\t * @param {boolean} [deep=false] pass true to sort all descendant nodes\n\t */\n\tsortChildren: function(cmp, deep) {\n\t\tvar i,l,\n\t\t\tcl = this.children;\n\n\t\tif( !cl ){\n\t\t\treturn;\n\t\t}\n\t\tcmp = cmp || function(a, b) {\n\t\t\tvar x = a.title.toLowerCase(),\n\t\t\t\ty = b.title.toLowerCase();\n\t\t\treturn x === y ? 0 : x > y ? 1 : -1;\n\t\t\t};\n\t\tcl.sort(cmp);\n\t\tif( deep ){\n\t\t\tfor(i=0, l=cl.length; i<l; i++){\n\t\t\t\tif( cl[i].children ){\n\t\t\t\t\tcl[i].sortChildren(cmp, \"$norender$\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( deep !== \"$norender$\" ){\n\t\t\tthis.render();\n\t\t}\n\t\tthis.triggerModifyChild(\"sort\");\n\t},\n\t/** Convert node (or whole branch) into a plain object.\n\t *\n\t * The result is compatible with node.addChildren().\n\t *\n\t * @param {boolean} [recursive=false] include child nodes\n\t * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications\n\t * @returns {NodeData}\n\t */\n\ttoDict: function(recursive, callback) {\n\t\tvar i, l, node,\n\t\t\tdict = {},\n\t\t\tself = this;\n\n\t\t$.each(NODE_ATTRS, function(i, a){\n\t\t\tif(self[a] || self[a] === false){\n\t\t\t\tdict[a] = self[a];\n\t\t\t}\n\t\t});\n\t\tif(!$.isEmptyObject(this.data)){\n\t\t\tdict.data = $.extend({}, this.data);\n\t\t\tif($.isEmptyObject(dict.data)){\n\t\t\t\tdelete dict.data;\n\t\t\t}\n\t\t}\n\t\tif( callback ){\n\t\t\tcallback(dict, self);\n\t\t}\n\t\tif( recursive ) {\n\t\t\tif(this.hasChildren()){\n\t\t\t\tdict.children = [];\n\t\t\t\tfor(i=0, l=this.children.length; i<l; i++ ){\n\t\t\t\t\tnode = this.children[i];\n\t\t\t\t\tif( !node.isStatusNode() ){\n\t\t\t\t\t\tdict.children.push(node.toDict(true, callback));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n//                dict.children = null;\n\t\t\t}\n\t\t}\n\t\treturn dict;\n\t},\n\t/**\n\t * Set, clear, or toggle class of node's span tag and .extraClasses.\n\t *\n\t * @param {string} className class name (separate multiple classes by space)\n\t * @param {boolean} [flag] true/false to add/remove class. If omitted, class is toggled.\n\t * @returns {boolean} true if a class was added\n\t *\n\t * @since 2.17\n\t */\n\ttoggleClass: function(value, flag){\n\t\tvar className, hasClass,\n\t\t\trnotwhite = ( /\\S+/g ),\n\t\t\tclassNames = value.match( rnotwhite ) || [],\n\t\t\ti = 0,\n\t\t\twasAdded = false,\n\t\t\tstatusElem = this[this.tree.statusClassPropName],\n\t\t\tcurClasses = (\" \" + (this.extraClasses || \"\") + \" \");\n\n\t\t// this.info(\"toggleClass('\" + value + \"', \" + flag + \")\", curClasses);\n\t\t// Modify DOM element directly if it already exists\n\t\tif( statusElem ) {\n\t\t\t$(statusElem).toggleClass(value, flag);\n\t\t}\n\t\t// Modify node.extraClasses to make this change persistent\n\t\t// Toggle if flag was not passed\n\t\twhile ( className = classNames[ i++ ] ) {\n\t\t\thasClass = curClasses.indexOf(\" \" + className + \" \") >= 0;\n\t\t\tflag = (flag === undefined) ? (!hasClass) : !!flag;\n\t\t\tif ( flag ) {\n\t\t\t\tif( !hasClass ) {\n\t\t\t\t\tcurClasses += className + \" \";\n\t\t\t\t\twasAdded = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( curClasses.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\tcurClasses = curClasses.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.extraClasses = $.trim(curClasses);\n\t\t// this.info(\"-> toggleClass('\" + value + \"', \" + flag + \"): '\" + this.extraClasses + \"'\");\n\t\treturn wasAdded;\n\t},\n\t/** Flip expanded status. */\n\ttoggleExpanded: function(){\n\t\treturn this.tree._callHook(\"nodeToggleExpanded\", this);\n\t},\n\t/** Flip selection status. */\n\ttoggleSelected: function(){\n\t\treturn this.tree._callHook(\"nodeToggleSelected\", this);\n\t},\n\ttoString: function() {\n\t\treturn \"FancytreeNode@\" + this.key + \"[title='\" + this.title + \"']\";\n\t\t// return \"<FancytreeNode(#\" + this.key + \", '\" + this.title + \"')>\";\n\t},\n\t/**\n\t * Trigger `modifyChild` event on a parent to signal that a child was modified.\n\t * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n\t * @param {FancytreeNode} [childNode]\n\t * @param {object} [extra]\n\t */\n\ttriggerModifyChild: function(operation, childNode, extra){\n\t\tvar data,\n\t\t\tmodifyChild = this.tree.options.modifyChild;\n\n\t\tif ( modifyChild ){\n\t\t\tif( childNode && childNode.parent !== this ) {\n\t\t\t\t$.error(\"childNode \" + childNode + \" is not a child of \" + this);\n\t\t\t}\n\t\t\tdata = {\n\t\t\t\tnode: this,\n\t\t\t\ttree: this.tree,\n\t\t\t\toperation: operation,\n\t\t\t\tchildNode: childNode || null\n\t\t\t};\n\t\t\tif( extra ) {\n\t\t\t\t$.extend(data, extra);\n\t\t\t}\n\t\t\tmodifyChild({type: \"modifyChild\"}, data);\n\t\t}\n\t},\n\t/**\n\t * Trigger `modifyChild` event on node.parent(!).\n\t * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n\t * @param {object} [extra]\n\t */\n\ttriggerModify: function(operation, extra){\n\t\tthis.parent.triggerModifyChild(operation, this, extra);\n\t},\n\t/** Call fn(node) for all child nodes.<br>\n\t * Stop iteration, if fn() returns false. Skip current branch, if fn() returns \"skip\".<br>\n\t * Return false if iteration was stopped.\n\t *\n\t * @param {function} fn the callback function.\n\t *     Return false to stop iteration, return \"skip\" to skip this node and\n\t *     its children only.\n\t * @param {boolean} [includeSelf=false]\n\t * @returns {boolean}\n\t */\n\tvisit: function(fn, includeSelf) {\n\t\tvar i, l,\n\t\t\tres = true,\n\t\t\tchildren = this.children;\n\n\t\tif( includeSelf === true ) {\n\t\t\tres = fn(this);\n\t\t\tif( res === false || res === \"skip\" ){\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\tif(children){\n\t\t\tfor(i=0, l=children.length; i<l; i++){\n\t\t\t\tres = children[i].visit(fn, true);\n\t\t\t\tif( res === false ){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t/** Call fn(node) for all child nodes and recursively load lazy children.<br>\n\t * <b>Note:</b> If you need this method, you probably should consider to review\n\t * your architecture! Recursivley loading nodes is a perfect way for lazy\n\t * programmers to flood the server with requests ;-)\n\t *\n\t * @param {function} [fn] optional callback function.\n\t *     Return false to stop iteration, return \"skip\" to skip this node and\n\t *     its children only.\n\t * @param {boolean} [includeSelf=false]\n\t * @returns {$.Promise}\n\t * @since 2.4\n\t */\n\tvisitAndLoad: function(fn, includeSelf, _recursion) {\n\t\tvar dfd, res, loaders,\n\t\t\tnode = this;\n\n\t\t// node.debug(\"visitAndLoad\");\n\t\tif( fn && includeSelf === true ) {\n\t\t\tres = fn(node);\n\t\t\tif( res === false || res === \"skip\" ) {\n\t\t\t\treturn _recursion ? res : _getResolvedPromise();\n\t\t\t}\n\t\t}\n\t\tif( !node.children && !node.lazy ) {\n\t\t\treturn _getResolvedPromise();\n\t\t}\n\t\tdfd = new $.Deferred();\n\t\tloaders = [];\n\t\t// node.debug(\"load()...\");\n\t\tnode.load().done(function(){\n\t\t\t// node.debug(\"load()... done.\");\n\t\t\tfor(var i=0, l=node.children.length; i<l; i++){\n\t\t\t\tres = node.children[i].visitAndLoad(fn, true, true);\n\t\t\t\tif( res === false ) {\n\t\t\t\t\tdfd.reject();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if ( res !== \"skip\" ) {\n\t\t\t\t\tloaders.push(res); // Add promise to the list\n\t\t\t\t}\n\t\t\t}\n\t\t\t$.when.apply(this, loaders).then(function(){\n\t\t\t\tdfd.resolve();\n\t\t\t});\n\t\t});\n\t\treturn dfd.promise();\n\t},\n\t/** Call fn(node) for all parent nodes, bottom-up, including invisible system root.<br>\n\t * Stop iteration, if fn() returns false.<br>\n\t * Return false if iteration was stopped.\n\t *\n\t * @param {function} fn the callback function.\n\t *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n\t * @param {boolean} [includeSelf=false]\n\t * @returns {boolean}\n\t */\n\tvisitParents: function(fn, includeSelf) {\n\t\t// Visit parent nodes (bottom up)\n\t\tif(includeSelf && fn(this) === false){\n\t\t\treturn false;\n\t\t}\n\t\tvar p = this.parent;\n\t\twhile( p ) {\n\t\t\tif(fn(p) === false){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn true;\n\t},\n\t/** Call fn(node) for all sibling nodes.<br>\n\t * Stop iteration, if fn() returns false.<br>\n\t * Return false if iteration was stopped.\n\t *\n\t * @param {function} fn the callback function.\n\t *     Return false to stop iteration.\n\t * @param {boolean} [includeSelf=false]\n\t * @returns {boolean}\n\t */\n\tvisitSiblings: function(fn, includeSelf) {\n\t\tvar i, l, n,\n\t\t\tac = this.parent.children;\n\n\t\tfor (i=0, l=ac.length; i<l; i++) {\n\t\t\tn = ac[i];\n\t\t\tif ( includeSelf || n !== this ){\n\t\t\t\tif( fn(n) === false ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\t/** Write warning to browser console (prepending node info)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\twarn: function(msg){\n\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\tconsoleApply(\"warn\", arguments);\n\t}\n};\n\n\n/* *****************************************************************************\n * Fancytree\n */\n/**\n * Construct a new tree object.\n *\n * @class Fancytree\n * @classdesc The controller behind a fancytree.\n * This class also contains 'hook methods': see {@link Fancytree_Hooks}.\n *\n * @param {Widget} widget\n *\n * @property {string} _id Automatically generated unique tree instance ID, e.g. \"1\".\n * @property {string} _ns Automatically generated unique tree namespace, e.g. \".fancytree-1\".\n * @property {FancytreeNode} activeNode Currently active node or null.\n * @property {string} ariaPropName Property name of FancytreeNode that contains the element which will receive the aria attributes.\n *     Typically \"li\", but \"tr\" for table extension.\n * @property {jQueryObject} $container Outer &lt;ul> element (or &lt;table> element for ext-table).\n * @property {jQueryObject} $div A jQuery object containing the element used to instantiate the tree widget (`widget.element`)\n * @property {object|array} columns Recommended place to store shared column meta data. @since 2.27\n * @property {object} data Metadata, i.e. properties that may be passed to `source` in addition to a children array.\n * @property {object} ext Hash of all active plugin instances.\n * @property {FancytreeNode} focusNode Currently focused node or null.\n * @property {FancytreeNode} lastSelectedNode Used to implement selectMode 1 (single select)\n * @property {string} nodeContainerAttrName Property name of FancytreeNode that contains the outer element of single nodes.\n *     Typically \"li\", but \"tr\" for table extension.\n * @property {FancytreeOptions} options Current options, i.e. default options + options passed to constructor.\n * @property {FancytreeNode} rootNode Invisible system root node.\n * @property {string} statusClassPropName Property name of FancytreeNode that contains the element which will receive the status classes.\n *     Typically \"span\", but \"tr\" for table extension.\n * @property {object} types Map for shared type specific meta data, used with node.type attribute. @since 2.27\n * @property {object} widget Base widget instance.\n */\nfunction Fancytree(widget) {\n\tthis.widget = widget;\n\tthis.$div = widget.element;\n\tthis.options = widget.options;\n\tif( this.options ) {\n\t\tif(  $.isFunction(this.options.lazyload ) && !$.isFunction(this.options.lazyLoad) ) {\n\t\t\tthis.options.lazyLoad = function() {\n\t\t\t\tFT.warn(\"The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.\");\n\t\t\t\treturn widget.options.lazyload.apply(this, arguments);\n\t\t\t};\n\t\t}\n\t\tif( $.isFunction(this.options.loaderror) ) {\n\t\t\t$.error(\"The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.\");\n\t\t}\n\t\tif( this.options.fx !== undefined ) {\n\t\t\tFT.warn(\"The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.\");\n\t\t}\n\t\tif( this.options.removeNode !== undefined ) {\n\t\t\t$.error(\"The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).\");\n\t\t}\n\t}\n\tthis.ext = {}; // Active extension instances\n\tthis.types = {};\n\tthis.columns = {};\n\t// allow to init tree.data.foo from <div data-foo=''>\n\tthis.data = _getElementDataAsDict(this.$div);\n\t// TODO: use widget.uuid instead?\n\tthis._id = $.ui.fancytree._nextId++;\n\t// TODO: use widget.eventNamespace instead?\n\tthis._ns = \".fancytree-\" + this._id; // append for namespaced events\n\tthis.activeNode = null;\n\tthis.focusNode = null;\n\tthis._hasFocus = null;\n\tthis._tempCache = {};\n\tthis._lastMousedownNode = null;\n\tthis._enableUpdate = true;\n\tthis.lastSelectedNode = null;\n\tthis.systemFocusElement = null;\n\tthis.lastQuicksearchTerm = \"\";\n\tthis.lastQuicksearchTime = 0;\n\n\tthis.statusClassPropName = \"span\";\n\tthis.ariaPropName = \"li\";\n\tthis.nodeContainerAttrName = \"li\";\n\n\t// Remove previous markup if any\n\tthis.$div.find(\">ul.fancytree-container\").remove();\n\n\t// Create a node without parent.\n\tvar fakeParent = { tree: this },\n\t\t$ul;\n\tthis.rootNode = new FancytreeNode(fakeParent, {\n\t\ttitle: \"root\",\n\t\tkey: \"root_\" + this._id,\n\t\tchildren: null,\n\t\texpanded: true\n\t});\n\tthis.rootNode.parent = null;\n\n\t// Create root markup\n\t$ul = $(\"<ul>\", {\n\t\t\"class\": \"ui-fancytree fancytree-container fancytree-plain\"\n\t}).appendTo(this.$div);\n\tthis.$container = $ul;\n\tthis.rootNode.ul = $ul[0];\n\n\tif(this.options.debugLevel == null){\n\t\tthis.options.debugLevel = FT.debugLevel;\n\t}\n\t// // Add container to the TAB chain\n\t// // See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n\t// // #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\t// this.$container.attr(\"tabindex\", this.options.tabindex);\n\n\t// if( this.options.rtl ) {\n\t// \tthis.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n\t// // }else{\n\t// //\tthis.$container.attr(\"DIR\", null).removeClass(\"fancytree-rtl\");\n\t// }\n\t// if(this.options.aria){\n\t// \tthis.$container.attr(\"role\", \"tree\");\n\t// \tif( this.options.selectMode !== 1 ) {\n\t// \t\tthis.$container.attr(\"aria-multiselectable\", true);\n\t// \t}\n\t// }\n}\n\n\nFancytree.prototype = /** @lends Fancytree# */{\n\t/* Return a context object that can be re-used for _callHook().\n\t * @param {Fancytree | FancytreeNode | EventData} obj\n\t * @param {Event} originalEvent\n\t * @param {Object} extra\n\t * @returns {EventData}\n\t */\n\t_makeHookContext: function(obj, originalEvent, extra) {\n\t\tvar ctx, tree;\n\t\tif(obj.node !== undefined){\n\t\t\t// obj is already a context object\n\t\t\tif(originalEvent && obj.originalEvent !== originalEvent){\n\t\t\t\t$.error(\"invalid args\");\n\t\t\t}\n\t\t\tctx = obj;\n\t\t}else if(obj.tree){\n\t\t\t// obj is a FancytreeNode\n\t\t\ttree = obj.tree;\n\t\t\tctx = { node: obj, tree: tree, widget: tree.widget, options: tree.widget.options, originalEvent: originalEvent,\n\t\t\t\t\ttypeInfo: tree.types[obj.type] || {}};\n\t\t}else if(obj.widget){\n\t\t\t// obj is a Fancytree\n\t\t\tctx = { node: null, tree: obj, widget: obj.widget, options: obj.widget.options, originalEvent: originalEvent };\n\t\t}else{\n\t\t\t$.error(\"invalid args\");\n\t\t}\n\t\tif(extra){\n\t\t\t$.extend(ctx, extra);\n\t\t}\n\t\treturn ctx;\n\t},\n\t/* Trigger a hook function: funcName(ctx, [...]).\n\t *\n\t * @param {string} funcName\n\t * @param {Fancytree|FancytreeNode|EventData} contextObject\n\t * @param {any}  [_extraArgs] optional additional arguments\n\t * @returns {any}\n\t */\n\t_callHook: function(funcName, contextObject, _extraArgs) {\n\t\tvar ctx = this._makeHookContext(contextObject),\n\t\t\tfn = this[funcName],\n\t\t\targs = Array.prototype.slice.call(arguments, 2);\n\t\tif(!$.isFunction(fn)){\n\t\t\t$.error(\"_callHook('\" + funcName + \"') is not a function\");\n\t\t}\n\t\targs.unshift(ctx);\n//\t\tthis.debug(\"_hook\", funcName, ctx.node && ctx.node.toString() || ctx.tree.toString(), args);\n\t\treturn fn.apply(this, args);\n\t},\n\t_setExpiringValue: function(key, value, ms){\n\t\tthis._tempCache[key] = {value: value, expire: Date.now() + (+ms || 50)};\n\t},\n\t_getExpiringValue: function(key){\n\t\tvar entry = this._tempCache[key];\n\t\tif( entry && entry.expire > Date.now() ) {\n\t\t\treturn entry.value;\n\t\t}\n\t\tdelete this._tempCache[key];\n\t\treturn null;\n\t},\n\t/* Check if current extensions dependencies are met and throw an error if not.\n\t *\n\t * This method may be called inside the `treeInit` hook for custom extensions.\n\t *\n\t * @param {string} extension name of the required extension\n\t * @param {boolean} [required=true] pass `false` if the extension is optional, but we want to check for order if it is present\n\t * @param {boolean} [before] `true` if `name` must be included before this, `false` otherwise (use `null` if order doesn't matter)\n\t * @param {string} [message] optional error message (defaults to a descriptve error message)\n\t */\n\t_requireExtension: function(name, required, before, message) {\n\t\tbefore = !!before;\n\t\tvar thisName = this._local.name,\n\t\t\textList = this.options.extensions,\n\t\t\tisBefore = $.inArray(name, extList) < $.inArray(thisName, extList),\n\t\t\tisMissing = required && this.ext[name] == null,\n\t\t\tbadOrder = !isMissing && before != null && (before !== isBefore);\n\n\t\t_assert(thisName && thisName !== name, \"invalid or same name\");\n\n\t\tif( isMissing || badOrder ){\n\t\t\tif( !message ){\n\t\t\t\tif( isMissing || required ){\n\t\t\t\t\tmessage = \"'\" + thisName + \"' extension requires '\" + name + \"'\";\n\t\t\t\t\tif( badOrder ){\n\t\t\t\t\t\tmessage += \" to be registered \" + (before ? \"before\" : \"after\") + \" itself\";\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tmessage = \"If used together, `\" + name + \"` must be registered \" + (before ? \"before\" : \"after\") + \" `\" + thisName + \"`\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$.error(message);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\t/** Activate node with a given key and fire focus and activate events.\n\t *\n\t * A previously activated node will be deactivated.\n\t * If activeVisible option is set, all parents will be expanded as necessary.\n\t * Pass key = false, to deactivate the current node only.\n\t * @param {string} key\n\t * @returns {FancytreeNode} activated node (null, if not found)\n\t */\n\tactivateKey: function(key) {\n\t\tvar node = this.getNodeByKey(key);\n\t\tif(node){\n\t\t\tnode.setActive();\n\t\t}else if(this.activeNode){\n\t\t\tthis.activeNode.setActive(false);\n\t\t}\n\t\treturn node;\n\t},\n\t/** (experimental) Add child status nodes that indicate 'More...', ....\n\t * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n\t * @param {string} [mode='append'] 'child'|firstChild'\n\t * @since 2.15\n\t */\n\taddPagingNode: function(node, mode){\n\t\treturn this.rootNode.addPagingNode(node, mode);\n\t},\n\t/** (experimental) Modify existing data model.\n\t *\n\t * @param {Array} patchList array of [key, NodePatch] arrays\n\t * @returns {$.Promise} resolved, when all patches have been applied\n\t * @see TreePatch\n\t */\n\tapplyPatch: function(patchList) {\n\t\tvar dfd, i, p2, key, patch, node,\n\t\t\tpatchCount = patchList.length,\n\t\t\tdeferredList = [];\n\n\t\tfor(i=0; i<patchCount; i++){\n\t\t\tp2 = patchList[i];\n\t\t\t_assert(p2.length === 2, \"patchList must be an array of length-2-arrays\");\n\t\t\tkey = p2[0];\n\t\t\tpatch = p2[1];\n\t\t\tnode = (key === null) ? this.rootNode : this.getNodeByKey(key);\n\t\t\tif(node){\n\t\t\t\tdfd = new $.Deferred();\n\t\t\t\tdeferredList.push(dfd);\n\t\t\t\tnode.applyPatch(patch).always(_makeResolveFunc(dfd, node));\n\t\t\t}else{\n\t\t\t\tthis.warn(\"could not find node with key '\" + key + \"'\");\n\t\t\t}\n\t\t}\n\t\t// Return a promise that is resolved, when ALL patches were applied\n\t\treturn $.when.apply($, deferredList).promise();\n\t},\n\t/* TODO: implement in dnd extension\n\tcancelDrag: function() {\n\t\tvar dd = $.ui.ddmanager.current;\n\t\tif(dd){\n\t\t\tdd.cancel();\n\t\t}\n\t},\n   */\n\t/** Remove all nodes.\n\t * @since 2.14\n\t */\n\tclear: function(source) {\n\t\tthis._callHook(\"treeClear\", this);\n\t},\n   /** Return the number of nodes.\n\t* @returns {integer}\n\t*/\n\tcount: function() {\n\t\treturn this.rootNode.countChildren();\n\t},\n\t/** Write to browser console if debugLevel >= 2 (prepending tree name)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\tdebug: function(msg){\n\t\tif( this.options.debugLevel >= 2 ) {\n\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\tconsoleApply(\"log\", arguments);\n\t\t}\n\t},\n\t// TODO: disable()\n\t// TODO: enable()\n\t/** Temporarily suppress rendering to improve performance on bulk-updates.\n\t *\n\t * @param {boolean} flag\n\t * @returns {boolean} previous status\n\t * @since 2.19\n\t */\n\tenableUpdate: function(flag) {\n\t\tflag = ( flag !== false );\n\t\t/*jshint -W018 */  // Confusing use of '!'\n\t\tif ( !!this._enableUpdate === !!flag ) {\n\t\t\treturn flag;\n\t\t}\n\t\t/*jshint +W018 */\n\t\tthis._enableUpdate = flag;\n\t\tif ( flag ) {\n\t\t\tthis.debug(\"enableUpdate(true): redraw \");  //, this._dirtyRoots);\n\t\t\tthis.render();\n\t\t} else {\n\t\t// \tthis._dirtyRoots = null;\n\t\t\tthis.debug(\"enableUpdate(false)...\");\n\t\t}\n\t\treturn !flag; // return previous value\n\t},\n\t/** Write warning to browser console (prepending tree info)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\terror: function(msg){\n\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\tconsoleApply(\"error\", arguments);\n\t},\n\t/**Find all nodes that matches condition.\n\t *\n\t * @param {string | function(node)} match title string to search for, or a\n\t *     callback function that returns `true` if a node is matched.\n\t * @returns {FancytreeNode[]} array of nodes (may be empty)\n\t * @see FancytreeNode#findAll\n\t * @since 2.12\n\t */\n\tfindAll: function(match) {\n\t\treturn this.rootNode.findAll(match);\n\t},\n\t/**Find first node that matches condition.\n\t *\n\t * @param {string | function(node)} match title string to search for, or a\n\t *     callback function that returns `true` if a node is matched.\n\t * @returns {FancytreeNode} matching node or null\n\t * @see FancytreeNode#findFirst\n\t * @since 2.12\n\t */\n\tfindFirst: function(match) {\n\t\treturn this.rootNode.findFirst(match);\n\t},\n\t/** Find the next visible node that starts with `match`, starting at `startNode`\n\t * and wrap-around at the end.\n\t *\n\t * @param {string|function} match\n\t * @param {FancytreeNode} [startNode] defaults to first node\n\t * @returns {FancytreeNode} matching node or null\n\t */\n\tfindNextNode: function(match, startNode, visibleOnly) {\n\t\tmatch = (typeof match === \"string\") ? _makeNodeTitleStartMatcher(match) : match;\n\t\tstartNode = startNode || this.getFirstChild();\n\n\t\tvar stopNode = null,\n\t\t\tparentChildren = startNode.parent.children,\n\t\t\tmatchingNode = null,\n\t\t\twalkVisible = function(parent, idx, fn) {\n\t\t\t\tvar i, grandParent,\n\t\t\t\t\tparentChildren = parent.children,\n\t\t\t\t\tsiblingCount = parentChildren.length,\n\t\t\t\t\tnode = parentChildren[idx];\n\t\t\t\t// visit node itself\n\t\t\t\tif( node && fn(node) === false ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// visit descendants\n\t\t\t\tif( node && node.children && node.expanded ) {\n\t\t\t\t\tif( walkVisible(node, 0, fn) === false ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// visit subsequent siblings\n\t\t\t\tfor( i = idx + 1; i < siblingCount; i++ ) {\n\t\t\t\t\tif( walkVisible(parent, i, fn) === false ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// visit parent's subsequent siblings\n\t\t\t\tgrandParent = parent.parent;\n\t\t\t\tif( grandParent ) {\n\t\t\t\t\treturn walkVisible(grandParent, grandParent.children.indexOf(parent) + 1, fn);\n\t\t\t\t} else {\n\t\t\t\t\t// wrap-around: restart with first node\n\t\t\t\t\treturn walkVisible(parent, 0, fn);\n\t\t\t\t}\n\t\t\t};\n\n\t\twalkVisible(startNode.parent, parentChildren.indexOf(startNode), function(node){\n\t\t\t// Stop iteration if we see the start node a second time\n\t\t\tif( node === stopNode ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tstopNode = stopNode || node;\n\t\t\t// Ignore nodes hidden by a filter\n\t\t\tif( ! $(node.span).is(\":visible\") ) {\n\t\t\t\tnode.debug(\"quicksearch: skipping hidden node\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Test if we found a match, but search for a second match if this\n\t\t\t// was the currently active node\n\t\t\tif( match(node) ) {\n\t\t\t\t// node.debug(\"quicksearch match \" + node.title, startNode);\n\t\t\t\tmatchingNode = node;\n\t\t\t\tif( matchingNode !== startNode ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn matchingNode;\n\t},\n\t// TODO: fromDict\n\t/**\n\t * Generate INPUT elements that can be submitted with html forms.\n\t *\n\t * In selectMode 3 only the topmost selected nodes are considered, unless\n\t * `opts.stopOnParents: false` is passed.\n\t *\n\t * @example\n\t * // Generate input elements for active and selected nodes\n\t * tree.generateFormElements();\n\t * // Generate input elements selected nodes, using a custom `name` attribute\n\t * tree.generateFormElements(\"cust_sel\", false);\n\t * // Generate input elements using a custom filter\n\t * tree.generateFormElements(true, true, { filter: function(node) {\n\t *     return node.isSelected() && node.data.yes;\n\t * }});\n\t *\n\t * @param {boolean | string} [selected=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID[]')\n\t * @param {boolean | string} [active=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID_active')\n\t * @param {object} [opts] default { filter: null, stopOnParents: true }\n\t */\n\tgenerateFormElements: function(selected, active, opts) {\n\t\topts = opts || {};\n\n\t\tvar nodeList,\n\t\t\tselectedName = (typeof selected === \"string\") ? selected : \"ft_\" + this._id + \"[]\",\n\t\t\tactiveName = (typeof active === \"string\") ? active : \"ft_\" + this._id + \"_active\",\n\t\t\tid = \"fancytree_result_\" + this._id,\n\t\t\t$result = $(\"#\" + id),\n\t\t\tstopOnParents = this.options.selectMode === 3 && opts.stopOnParents !== false;\n\n\t\tif($result.length){\n\t\t\t$result.empty();\n\t\t}else{\n\t\t\t$result = $(\"<div>\", {\n\t\t\t\tid: id\n\t\t\t}).hide().insertAfter(this.$container);\n\t\t}\n\t\tif(active !== false && this.activeNode){\n\t\t\t$result.append($(\"<input>\", {\n\t\t\t\ttype: \"radio\",\n\t\t\t\tname: activeName,\n\t\t\t\tvalue: this.activeNode.key,\n\t\t\t\tchecked: true\n\t\t\t}));\n\t\t}\n\t\tfunction _appender( node ) {\n\t\t\t$result.append($(\"<input>\", {\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tname: selectedName,\n\t\t\t\tvalue: node.key,\n\t\t\t\tchecked: true\n\t\t\t}));\n\t\t}\n\t\tif ( opts.filter ) {\n\t\t\tthis.visit(function(node) {\n\t\t\t\tvar res = opts.filter(node);\n\t\t\t\tif( res === \"skip\" ) { return res; }\n\t\t\t\tif ( res !== false ) {\n\t\t\t\t\t_appender(node);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if ( selected !== false ) {\n\t\t\tnodeList = this.getSelectedNodes(stopOnParents);\n\t\t\t$.each(nodeList, function(idx, node) {\n\t\t\t\t_appender(node);\n\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * Return the currently active node or null.\n\t * @returns {FancytreeNode}\n\t */\n\tgetActiveNode: function() {\n\t\treturn this.activeNode;\n\t},\n\t/** Return the first top level node if any (not the invisible root node).\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetFirstChild: function() {\n\t\treturn this.rootNode.getFirstChild();\n\t},\n\t/**\n\t * Return node that has keyboard focus or null.\n\t * @returns {FancytreeNode}\n\t */\n\tgetFocusNode: function() {\n\t\treturn this.focusNode;\n\t},\n\t/**\n\t * Return node with a given key or null if not found.\n\t * @param {string} key\n\t * @param {FancytreeNode} [searchRoot] only search below this node\n\t * @returns {FancytreeNode | null}\n\t */\n\tgetNodeByKey: function(key, searchRoot) {\n\t\t// Search the DOM by element ID (assuming this is faster than traversing all nodes).\n\t\t// $(\"#...\") has problems, if the key contains '.', so we use getElementById()\n\t\tvar el, match;\n\t\tif(!searchRoot){\n\t\t\tel = document.getElementById(this.options.idPrefix + key);\n\t\t\tif( el ){\n\t\t\t\treturn el.ftnode ? el.ftnode : null;\n\t\t\t}\n\t\t}\n\t\t// Not found in the DOM, but still may be in an unrendered part of tree\n\t\t// TODO: optimize with specialized loop\n\t\t// TODO: consider keyMap?\n\t\tsearchRoot = searchRoot || this.rootNode;\n\t\tmatch = null;\n\t\tsearchRoot.visit(function(node){\n//            window.console.log(\"getNodeByKey(\" + key + \"): \", node.key);\n\t\t\tif(node.key === key) {\n\t\t\t\tmatch = node;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, true);\n\t\treturn match;\n\t},\n\t/** Return the invisible system root node.\n\t * @returns {FancytreeNode}\n\t */\n\tgetRootNode: function() {\n\t\treturn this.rootNode;\n\t},\n\t/**\n\t * Return an array of selected nodes.\n\t * @param {boolean} [stopOnParents=false] only return the topmost selected\n\t *     node (useful with selectMode 3)\n\t * @returns {FancytreeNode[]}\n\t */\n\tgetSelectedNodes: function(stopOnParents) {\n\t\treturn this.rootNode.getSelectedNodes(stopOnParents);\n\t},\n\t/** Return true if the tree control has keyboard focus\n\t * @returns {boolean}\n\t */\n\thasFocus: function(){\n\t\treturn !!this._hasFocus;\n\t},\n\t/** Write to browser console if debugLevel >= 1 (prepending tree name)\n\t * @param {*} msg string or object or array of such\n\t */\n\tinfo: function(msg){\n\t\tif( this.options.debugLevel >= 1 ) {\n\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\tconsoleApply(\"info\", arguments);\n\t\t}\n\t},\n/*\n\tTODO: isInitializing: function() {\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" );\n\t},\n\tTODO: isReloading: function() {\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" ) && this.options.persist && this.persistence.cookiesFound;\n\t},\n\tTODO: isUserEvent: function() {\n\t\treturn ( this.phase==\"userEvent\" );\n\t},\n*/\n\n\t/**\n\t * Make sure that a node with a given ID is loaded, by traversing - and\n\t * loading - its parents. This method is meant for lazy hierarchies.\n\t * A callback is executed for every node as we go.\n\t * @example\n\t * // Resolve using node.key:\n\t * tree.loadKeyPath(\"/_3/_23/_26/_27\", function(node, status){\n\t *   if(status === \"loaded\") {\n\t *     console.log(\"loaded intermediate node \" + node);\n\t *   }else if(status === \"ok\") {\n\t *     node.activate();\n\t *   }\n\t * });\n\t * // Use deferred promise:\n\t * tree.loadKeyPath(\"/_3/_23/_26/_27\").progress(function(data){\n\t *   if(data.status === \"loaded\") {\n\t *     console.log(\"loaded intermediate node \" + data.node);\n\t *   }else if(data.status === \"ok\") {\n\t *     node.activate();\n\t *   }\n\t * }).done(function(){\n\t *    ...\n\t * });\n\t * // Custom path segment resolver:\n\t * tree.loadKeyPath(\"/321/431/21/2\", {\n\t *   matchKey: function(node, key){\n\t *     return node.data.refKey === key;\n\t *   },\n\t *   callback: function(node, status){\n\t *     if(status === \"loaded\") {\n\t *       console.log(\"loaded intermediate node \" + node);\n\t *     }else if(status === \"ok\") {\n\t *       node.activate();\n\t *     }\n\t *   }\n\t * });\n\t * @param {string | string[]} keyPathList one or more key paths (e.g. '/3/2_1/7')\n\t * @param {function | object} optsOrCallback callback(node, status) is called for every visited node ('loading', 'loaded', 'ok', 'error').\n\t *     Pass an object to define custom key matchers for the path segments: {callback: function, matchKey: function}.\n\t * @returns {$.Promise}\n\t */\n\tloadKeyPath: function(keyPathList, optsOrCallback) {\n\t\tvar callback, i, path,\n\t\t\tself = this,\n\t\t\tdfd = new $.Deferred(),\n\t\t\tparent = this.getRootNode(),\n\t\t\tsep = this.options.keyPathSeparator,\n\t\t\tpathSegList = [],\n\t\t\topts = $.extend({}, optsOrCallback);\n\n\t\t// Prepare options\n\t\tif( typeof optsOrCallback === \"function\" ) {\n\t\t\tcallback = optsOrCallback;\n\t\t} else if ( optsOrCallback && optsOrCallback.callback ) {\n\t\t\tcallback = optsOrCallback.callback;\n\t\t}\n\t\topts.callback = function(ctx, node, status){\n\t\t\tif( callback ) {\n\t\t\t\tcallback.call(ctx, node, status);\n\t\t\t}\n\t\t\tdfd.notifyWith(ctx, [{node: node, status: status}]);\n\t\t};\n\t\tif( opts.matchKey == null ) {\n\t\t\topts.matchKey = function(node, key) { return node.key === key; };\n\t\t}\n\t\t// Convert array of path strings to array of segment arrays\n\t\tif(!$.isArray(keyPathList)){\n\t\t\tkeyPathList = [keyPathList];\n\t\t}\n\t\tfor(i=0; i<keyPathList.length; i++){\n\t\t\tpath = keyPathList[i];\n\t\t\t// strip leading slash\n\t\t\tif(path.charAt(0) === sep){\n\t\t\t\tpath = path.substr(1);\n\t\t\t}\n\t\t\t// segListMap[path] = { parent: parent, segList: path.split(sep) };\n\t\t\tpathSegList.push(path.split(sep));\n\t\t\t// targetList.push({ parent: parent, segList: path.split(sep)/* , path: path*/});\n\t\t}\n\t\t// The timeout forces async behavior always (even if nodes are all loaded)\n\t\t// This way a potential progress() event will fire.\n\t\tsetTimeout(function(){\n\t\t\tself._loadKeyPathImpl(dfd, opts, parent, pathSegList).done(function(){\n\t\t\t\tdfd.resolve();\n\t\t\t});\n\t\t}, 0);\n\t\treturn dfd.promise();\n\t},\n\t/*\n\t * Resolve a list of paths, relative to one parent node.\n\t */\n\t_loadKeyPathImpl: function(dfd, opts, parent, pathSegList) {\n\t\tvar deferredList, i, key, node, remainMap, tmpParent, segList, subDfd,\n\t\t\tself = this;\n\n\t\tfunction __findChild(parent, key){\n\t\t\t// console.log(\"__findChild\", key, parent);\n\t\t\tvar i, l,\n\t\t\t\tcl = parent.children;\n\n\t\t\tif( cl ) {\n\t\t\t\tfor(i=0, l=cl.length; i<l; i++){\n\t\t\t\t\tif( opts.matchKey(cl[i], key)) { return cl[i]; }\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t// console.log(\"_loadKeyPathImpl, parent=\", parent, \", pathSegList=\", pathSegList);\n\n\t\t// Pass 1:\n\t\t// Handle all path segments for nodes that are already loaded.\n\t\t// Collect distinct top-most lazy nodes in a map.\n\t\t// Note that we can use node.key to de-dupe entries, even if a custom matcher would\n\t\t// look for other node attributes.\n\t\t// map[node.key] => {node: node, pathList: [list of remaining rest-paths]}\n\t\tremainMap = {};\n\n\t\tfor(i=0; i<pathSegList.length; i++){\n\t\t\tsegList = pathSegList[i];\n\t\t\t// target = targetList[i];\n\n\t\t\t// Traverse and pop path segments (i.e. keys), until we hit a lazy, unloaded node\n\t\t\ttmpParent = parent;\n\t\t\twhile(segList.length){\n\t\t\t\tkey = segList.shift();\n\t\t\t\tnode = __findChild(tmpParent, key);\n\t\t\t\tif(!node){\n\t\t\t\t\tthis.warn(\"loadKeyPath: key not found: \" + key + \" (parent: \" + tmpParent + \")\");\n\t\t\t\t\topts.callback(this, key, \"error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(segList.length === 0){\n\t\t\t\t\topts.callback(this, node, \"ok\");\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(!node.lazy || (node.hasChildren() !== undefined )){\n\t\t\t\t\topts.callback(this, node, \"loaded\");\n\t\t\t\t\ttmpParent = node;\n\t\t\t\t}else{\n\t\t\t\t\topts.callback(this, node, \"loaded\");\n\t\t\t\t\tkey = node.key;  //target.segList.join(sep);\n\t\t\t\t\tif(remainMap[key]){\n\t\t\t\t\t\tremainMap[key].pathSegList.push(segList);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tremainMap[key] = {parent: node, pathSegList: [segList]};\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// console.log(\"_loadKeyPathImpl AFTER pass 1, remainMap=\", remainMap);\n\n\t\t// Now load all lazy nodes and continue iteration for remaining paths\n\t\tdeferredList = [];\n\n\t\t// Avoid jshint warning 'Don't make functions within a loop.':\n\t\tfunction __lazyload(dfd, parent, pathSegList){\n\t\t\t// console.log(\"__lazyload\", parent, \"pathSegList=\", pathSegList);\n\t\t\topts.callback(self, parent, \"loading\");\n\t\t\tparent.load().done(function(){\n\t\t\t\tself._loadKeyPathImpl.call(self, dfd, opts, parent, pathSegList)\n\t\t\t\t\t.always(_makeResolveFunc(dfd, self));\n\t\t\t}).fail(function(errMsg){\n\t\t\t\tself.warn(\"loadKeyPath: error loading lazy \" + parent);\n\t\t\t\topts.callback(self, node, \"error\");\n\t\t\t\tdfd.rejectWith(self);\n\t\t\t});\n\t\t}\n\t\t// remainMap contains parent nodes, each with a list of relative sub-paths.\n\t\t// We start loading all of them now, and pass the the list to each loader.\n\t\tfor(var nodeKey in remainMap){\n\t\t\tvar remain = remainMap[nodeKey];\n\t\t\t// console.log(\"for(): remain=\", remain, \"remainMap=\", remainMap);\n\t\t\t// key = remain.segList.shift();\n\t\t\t// node = __findChild(remain.parent, key);\n\t\t\t// if (node == null) {  // #576\n\t\t\t// \t// Issue #576, refactored for v2.27:\n\t\t\t// \t// The root cause was, that sometimes the wrong parent was used here\n\t\t\t// \t// to find the next segment.\n\t\t\t// \t// Falling back to getNodeByKey() was a hack that no longer works if a custom\n\t\t\t// \t// matcher is used, because we cannot assume that a single segment-key is unique\n\t\t\t// \t// throughout the tree.\n\t\t\t// \tself.error(\"loadKeyPath: error loading child by key '\" + key + \"' (parent: \" + target.parent + \")\", target);\n\t\t\t// \t// \tnode = self.getNodeByKey(key);\n\t\t\t// \tcontinue;\n\t\t\t// }\n\t\t\tsubDfd = new $.Deferred();\n\t\t\tdeferredList.push(subDfd);\n\t\t\t__lazyload(subDfd, remain.parent, remain.pathSegList);\n\t\t}\n\t\t// Return a promise that is resolved, when ALL paths were loaded\n\t\treturn $.when.apply($, deferredList).promise();\n\t},\n\t/** Re-fire beforeActivate, activate, and (optional) focus events.\n\t * Calling this method in the `init` event, will activate the node that\n\t * was marked 'active' in the source data, and optionally set the keyboard\n\t * focus.\n\t * @param [setFocus=false]\n\t */\n\treactivate: function(setFocus) {\n\t\tvar res,\n\t\t\tnode = this.activeNode;\n\n\t\tif( !node ) {\n\t\t\treturn _getResolvedPromise();\n\t\t}\n\t\tthis.activeNode = null; // Force re-activating\n\t\tres = node.setActive(true, {noFocus: true});\n\t\tif( setFocus ){\n\t\t\tnode.setFocus();\n\t\t}\n\t\treturn res;\n\t},\n\t/** Reload tree from source and return a promise.\n\t * @param [source] optional new source (defaults to initial source data)\n\t * @returns {$.Promise}\n\t */\n\treload: function(source) {\n\t\tthis._callHook(\"treeClear\", this);\n\t\treturn this._callHook(\"treeLoad\", this, source);\n\t},\n\t/**Render tree (i.e. create DOM elements for all top-level nodes).\n\t * @param {boolean} [force=false] create DOM elemnts, even if parent is collapsed\n\t * @param {boolean} [deep=false]\n\t */\n\trender: function(force, deep) {\n\t\treturn this.rootNode.render(force, deep);\n\t},\n\t// TODO: selectKey: function(key, select)\n\t// TODO: serializeArray: function(stopOnParents)\n\t/**\n\t * @param {boolean} [flag=true]\n\t */\n\tsetFocus: function(flag) {\n\t\treturn this._callHook(\"treeSetFocus\", this, flag);\n\t},\n\t/**\n\t * Return all nodes as nested list of {@link NodeData}.\n\t *\n\t * @param {boolean} [includeRoot=false] Returns the hidden system root node (and its children)\n\t * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications\n\t * @returns {Array | object}\n\t * @see FancytreeNode#toDict\n\t */\n\ttoDict: function(includeRoot, callback){\n\t\tvar res = this.rootNode.toDict(true, callback);\n\t\treturn includeRoot ? res : res.children;\n\t},\n\t/* Implicitly called for string conversions.\n\t * @returns {string}\n\t */\n\ttoString: function(){\n\t\treturn \"Fancytree@\" + this._id;\n\t\t// return \"<Fancytree(#\" + this._id + \")>\";\n\t},\n\t/* _trigger a widget event with additional node ctx.\n\t * @see EventData\n\t */\n\t_triggerNodeEvent: function(type, node, originalEvent, extra) {\n//\t\tthis.debug(\"_trigger(\" + type + \"): '\" + ctx.node.title + \"'\", ctx);\n\t\tvar ctx = this._makeHookContext(node, originalEvent, extra),\n\t\t\tres = this.widget._trigger(type, originalEvent, ctx);\n\t\tif(res !== false && ctx.result !== undefined){\n\t\t\treturn ctx.result;\n\t\t}\n\t\treturn res;\n\t},\n\t/* _trigger a widget event with additional tree data. */\n\t_triggerTreeEvent: function(type, originalEvent, extra) {\n//\t\tthis.debug(\"_trigger(\" + type + \")\", ctx);\n\t\tvar ctx = this._makeHookContext(this, originalEvent, extra),\n\t\t\tres = this.widget._trigger(type, originalEvent, ctx);\n\n\t\tif(res !== false && ctx.result !== undefined){\n\t\t\treturn ctx.result;\n\t\t}\n\t\treturn res;\n\t},\n\t/** Call fn(node) for all nodes.\n\t *\n\t * @param {function} fn the callback function.\n\t *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n\t * @returns {boolean} false, if the iterator was stopped.\n\t */\n\tvisit: function(fn) {\n\t\treturn this.rootNode.visit(fn, false);\n\t},\n\t/** Write warning to browser console (prepending tree info)\n\t *\n\t * @param {*} msg string or object or array of such\n\t */\n\twarn: function(msg){\n\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\tconsoleApply(\"warn\", arguments);\n\t}\n};\n\n/**\n * These additional methods of the {@link Fancytree} class are 'hook functions'\n * that can be used and overloaded by extensions.\n * (See <a href=\"https://github.com/mar10/fancytree/wiki/TutorialExtensions\">writing extensions</a>.)\n * @mixin Fancytree_Hooks\n */\n$.extend(Fancytree.prototype,\n\t/** @lends Fancytree_Hooks# */\n\t{\n\t/** Default handling for mouse click events.\n\t *\n\t * @param {EventData} ctx\n\t */\n\tnodeClick: function(ctx) {\n\t\tvar activate, expand,\n\t\t\t// event = ctx.originalEvent,\n\t\t\ttargetType = ctx.targetType,\n\t\t\tnode = ctx.node;\n\n//\t    this.debug(\"ftnode.onClick(\" + event.type + \"): ftnode:\" + this + \", button:\" + event.button + \", which: \" + event.which, ctx);\n\t\t// TODO: use switch\n\t\t// TODO: make sure clicks on embedded <input> doesn't steal focus (see table sample)\n\t\tif( targetType === \"expander\" ) {\n\t\t\tif( node.isLoading() ) {\n\t\t\t\t// #495: we probably got a click event while a lazy load is pending.\n\t\t\t\t// The 'expanded' state is not yet set, so 'toggle' would expand\n\t\t\t\t// and trigger lazyLoad again.\n\t\t\t\t// It would be better to allow to collapse/expand the status node\n\t\t\t\t// while loading (instead of ignoring), but that would require some\n\t\t\t\t// more work.\n\t\t\t\tnode.debug(\"Got 2nd click while loading: ignored\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Clicking the expander icon always expands/collapses\n\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\n\t\t} else if( targetType === \"checkbox\" ) {\n\t\t\t// Clicking the checkbox always (de)selects\n\t\t\tthis._callHook(\"nodeToggleSelected\", ctx);\n\t\t\tif( ctx.options.focusOnSelect ) { // #358\n\t\t\t\tthis._callHook(\"nodeSetFocus\", ctx, true);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Honor `clickFolderMode` for\n\t\t\texpand = false;\n\t\t\tactivate = true;\n\t\t\tif( node.folder ) {\n\t\t\t\tswitch( ctx.options.clickFolderMode ) {\n\t\t\t\tcase 2: // expand only\n\t\t\t\t\texpand = true;\n\t\t\t\t\tactivate = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // expand and activate\n\t\t\t\t\tactivate = true;\n\t\t\t\t\texpand = true; //!node.isExpanded();\n\t\t\t\t\tbreak;\n\t\t\t\t// else 1 or 4: just activate\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( activate ) {\n\t\t\t\tthis.nodeSetFocus(ctx);\n\t\t\t\tthis._callHook(\"nodeSetActive\", ctx, true);\n\t\t\t}\n\t\t\tif( expand ) {\n\t\t\t\tif(!activate){\n//                    this._callHook(\"nodeSetFocus\", ctx);\n\t\t\t\t}\n//\t\t\t\tthis._callHook(\"nodeSetExpanded\", ctx, true);\n\t\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\t\t\t}\n\t\t}\n\t\t// Make sure that clicks stop, otherwise <a href='#'> jumps to the top\n\t\t// if(event.target.localName === \"a\" && event.target.className === \"fancytree-title\"){\n\t\t// \tevent.preventDefault();\n\t\t// }\n\t\t// TODO: return promise?\n\t},\n\t/** Collapse all other  children of same parent.\n\t *\n\t * @param {EventData} ctx\n\t * @param {object} callOpts\n\t */\n\tnodeCollapseSiblings: function(ctx, callOpts) {\n\t\t// TODO: return promise?\n\t\tvar ac, i, l,\n\t\t\tnode = ctx.node;\n\n\t\tif( node.parent ){\n\t\t\tac = node.parent.children;\n\t\t\tfor (i=0, l=ac.length; i<l; i++) {\n\t\t\t\tif ( ac[i] !== node && ac[i].expanded ){\n\t\t\t\t\tthis._callHook(\"nodeSetExpanded\", ac[i], false, callOpts);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/** Default handling for mouse douleclick events.\n\t * @param {EventData} ctx\n\t */\n\tnodeDblclick: function(ctx) {\n\t\t// TODO: return promise?\n\t\tif( ctx.targetType === \"title\" && ctx.options.clickFolderMode === 4) {\n//\t\t\tthis.nodeSetFocus(ctx);\n//\t\t\tthis._callHook(\"nodeSetActive\", ctx, true);\n\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\t\t}\n\t\t// TODO: prevent text selection on dblclicks\n\t\tif( ctx.targetType === \"title\" ) {\n\t\t\tctx.originalEvent.preventDefault();\n\t\t}\n\t},\n\t/** Default handling for mouse keydown events.\n\t *\n\t * NOTE: this may be called with node == null if tree (but no node) has focus.\n\t * @param {EventData} ctx\n\t */\n\tnodeKeydown: function(ctx) {\n\t\t// TODO: return promise?\n\t\tvar matchNode, stamp, res, focusNode,\n\t\t\tevent = ctx.originalEvent,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\twhich = event.which,\n\t\t\twhichChar = String.fromCharCode(which),\n\t\t\tclean = !(event.altKey || event.ctrlKey || event.metaKey || event.shiftKey),\n\t\t\t$target = $(event.target),\n\t\t\thandled = true,\n\t\t\tactivate = !(event.ctrlKey || !opts.autoActivate );\n\n\t\t// (node || FT).debug(\"ftnode.nodeKeydown(\" + event.type + \"): ftnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\n\t\t// FT.debug(\"eventToString\", which, '\"' + String.fromCharCode(which) + '\"', '\"' + FT.eventToString(event) + '\"');\n\n\t\t// Set focus to active (or first node) if no other node has the focus yet\n\t\tif( !node ){\n\t\t\tfocusNode = (this.getActiveNode() || this.getFirstChild());\n\t\t\tif (focusNode){\n\t\t\t\tfocusNode.setFocus();\n\t\t\t\tnode = ctx.node = this.focusNode;\n\t\t\t\tnode.debug(\"Keydown force focus on active node\");\n\t\t\t}\n\t\t}\n\n\t\tif( opts.quicksearch && clean && /\\w/.test(whichChar) &&\n\t\t\t\t!SPECIAL_KEYCODES[which] &&  // #659\n\t\t\t\t!$target.is(\":input:enabled\") ) {\n\t\t\t// Allow to search for longer streaks if typed in quickly\n\t\t\tstamp = new Date().getTime();\n\t\t\tif( stamp - tree.lastQuicksearchTime > 500 ) {\n\t\t\t\ttree.lastQuicksearchTerm = \"\";\n\t\t\t}\n\t\t\ttree.lastQuicksearchTime = stamp;\n\t\t\ttree.lastQuicksearchTerm += whichChar;\n\t\t\t// tree.debug(\"quicksearch find\", tree.lastQuicksearchTerm);\n\t\t\tmatchNode = tree.findNextNode(tree.lastQuicksearchTerm, tree.getActiveNode());\n\t\t\tif( matchNode ) {\n\t\t\t\tmatchNode.setActive();\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\t\tswitch( FT.eventToString(event) ) {\n\t\t\tcase \"+\":\n\t\t\tcase \"=\": // 187: '+' @ Chrome, Safari\n\t\t\t\ttree.nodeSetExpanded(ctx, true);\n\t\t\t\tbreak;\n\t\t\tcase \"-\":\n\t\t\t\ttree.nodeSetExpanded(ctx, false);\n\t\t\t\tbreak;\n\t\t\tcase \"space\":\n\t\t\t\tif( node.isPagingNode() ) {\n\t\t\t\t\ttree._triggerNodeEvent(\"clickPaging\", ctx, event);\n\t\t\t\t} else if( FT.evalOption(\"checkbox\", node, node, opts, false) ) {  // #768\n\t\t\t\t\ttree.nodeToggleSelected(ctx);\n\t\t\t\t}else{\n\t\t\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"return\":\n\t\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\t\tbreak;\n\t\t\tcase \"home\":\n\t\t\tcase \"end\":\n\t\t\tcase \"backspace\":\n\t\t\tcase \"left\":\n\t\t\tcase \"right\":\n\t\t\tcase \"up\":\n\t\t\tcase \"down\":\n\t\t\t\tres = node.navigate(event.which, activate, true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thandled = false;\n\t\t}\n\t\tif(handled){\n\t\t\tevent.preventDefault();\n\t\t}\n\t},\n\n\n\t// /** Default handling for mouse keypress events. */\n\t// nodeKeypress: function(ctx) {\n\t//     var event = ctx.originalEvent;\n\t// },\n\n\t// /** Trigger lazyLoad event (async). */\n\t// nodeLazyLoad: function(ctx) {\n\t//     var node = ctx.node;\n\t//     if(this._triggerNodeEvent())\n\t// },\n\t/** Load child nodes (async).\n\t *\n\t * @param {EventData} ctx\n\t * @param {object[]|object|string|$.Promise|function} source\n\t * @returns {$.Promise} The deferred will be resolved as soon as the (ajax)\n\t *     data was rendered.\n\t */\n\tnodeLoadChildren: function(ctx, source) {\n\t\tvar ajax, delay, dfd,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\trequestId = new Date().getTime();\n\n\t\tif($.isFunction(source)){\n\t\t\tsource = source.call(tree, {type: \"source\"}, ctx);\n\t\t\t_assert(!$.isFunction(source), \"source callback must not return another function\");\n\t\t}\n\t\tif(source.url){\n\t\t\tif( node._requestId ) {\n\t\t\t\tnode.warn(\"Recursive load request #\" + requestId + \" while #\" + node._requestId + \" is pending.\");\n\t\t\t// } else {\n\t\t\t// \tnode.debug(\"Send load request #\" + requestId);\n\t\t\t}\n\t\t\t// `source` is an Ajax options object\n\t\t\tajax = $.extend({}, ctx.options.ajax, source);\n\t\t\tnode._requestId = requestId;\n\t\t\tif(ajax.debugDelay){\n\t\t\t\t// simulate a slow server\n\t\t\t\tdelay = ajax.debugDelay;\n\t\t\t\tif($.isArray(delay)){ // random delay range [min..max]\n\t\t\t\t\tdelay = delay[0] + Math.random() * (delay[1] - delay[0]);\n\t\t\t\t}\n\t\t\t\tnode.warn(\"nodeLoadChildren waiting debugDelay \" + Math.round(delay) + \" ms ...\");\n\t\t\t\tajax.debugDelay = false;\n\t\t\t\tdfd = $.Deferred(function (dfd) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t$.ajax(ajax)\n\t\t\t\t\t\t\t.done(function () {\tdfd.resolveWith(this, arguments); })\n\t\t\t\t\t\t\t.fail(function () {\tdfd.rejectWith(this, arguments); });\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tdfd = $.ajax(ajax);\n\t\t\t}\n\n\t\t\t// Defer the deferred: we want to be able to reject, even if ajax\n\t\t\t// resolved ok.\n\t\t\tsource = new $.Deferred();\n\t\t\tdfd.done(function (data, textStatus, jqXHR) {\n\t\t\t\tvar errorObj, res;\n\n\t\t\t\tif((this.dataType === \"json\" || this.dataType === \"jsonp\") && typeof data === \"string\"){\n\t\t\t\t\t$.error(\"Ajax request returned a string (did you get the JSON dataType wrong?).\");\n\t\t\t\t}\n\t\t\t\tif( node._requestId && node._requestId > requestId ) {\n\t\t\t\t\t// The expected request time stamp is later than `requestId`\n\t\t\t\t\t// (which was kept as as closure variable to this handler function)\n\t\t\t\t\t// node.warn(\"Ignored load response for obsolete request #\" + requestId + \" (expected #\" + node._requestId + \")\");\n\t\t\t\t\tsource.rejectWith(this, [RECURSIVE_REQUEST_ERROR]);\n\t\t\t\t\treturn;\n\t\t\t\t// } else {\n\t\t\t\t// \tnode.debug(\"Response returned for load request #\" + requestId);\n\t\t\t\t}\n\t\t\t\t// postProcess is similar to the standard ajax dataFilter hook,\n\t\t\t\t// but it is also called for JSONP\n\t\t\t\tif( ctx.options.postProcess ){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tres = tree._triggerNodeEvent(\"postProcess\", ctx, ctx.originalEvent, {\n\t\t\t\t\t\t\tresponse: data, error: null, dataType: this.dataType\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tres = { error: e, message: \"\" + e, details: \"postProcess failed\"};\n\t\t\t\t\t}\n\t\t\t\t\tif( res.error ) {\n\t\t\t\t\t\terrorObj = $.isPlainObject(res.error) ? res.error : {message: res.error};\n\t\t\t\t\t\terrorObj = tree._makeHookContext(node, null, errorObj);\n\t\t\t\t\t\tsource.rejectWith(this, [errorObj]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdata = $.isArray(res) ? res : data;\n\n\t\t\t\t} else if (data && data.hasOwnProperty(\"d\") && ctx.options.enableAspx ) {\n\t\t\t\t\t// Process ASPX WebMethod JSON object inside \"d\" property\n\t\t\t\t\tdata = (typeof data.d === \"string\") ? $.parseJSON(data.d) : data.d;\n\t\t\t\t}\n\t\t\t\tsource.resolveWith(this, [data]);\n\t\t\t}).fail(function (jqXHR, textStatus, errorThrown) {\n\t\t\t\tvar errorObj = tree._makeHookContext(node, null, {\n\t\t\t\t\terror: jqXHR,\n\t\t\t\t\targs: Array.prototype.slice.call(arguments),\n\t\t\t\t\tmessage: errorThrown,\n\t\t\t\t\tdetails: jqXHR.status + \": \" + errorThrown\n\t\t\t\t});\n\t\t\t\tsource.rejectWith(this, [errorObj]);\n\t\t\t});\n\t\t}\n\t\t// #383: accept and convert ECMAScript 6 Promise\n\t\tif( $.isFunction(source.then) && $.isFunction(source[\"catch\"]) ) {\n\t\t\tdfd = source;\n\t\t\tsource = new $.Deferred();\n\t\t\tdfd.then(function(value){\n\t\t\t\tsource.resolve(value);\n\t\t\t}, function(reason){\n\t\t\t\tsource.reject(reason);\n\t\t\t});\n\t\t}\n\t\tif($.isFunction(source.promise)){\n\t\t\t// `source` is a deferred, i.e. ajax request\n\t\t\t// _assert(!node.isLoading(), \"recursive load\");\n\t\t\ttree.nodeSetStatus(ctx, \"loading\");\n\n\t\t\tsource.done(function (children) {\n\t\t\t\ttree.nodeSetStatus(ctx, \"ok\");\n\t\t\t\tnode._requestId = null;\n\t\t\t}).fail(function(error){\n\t\t\t\tvar ctxErr;\n\n\t\t\t\tif ( error === RECURSIVE_REQUEST_ERROR ) {\n\t\t\t\t\tnode.warn(\"Ignored response for obsolete load request #\" + requestId + \" (expected #\" + node._requestId + \")\");\n\t\t\t\t\treturn;\n\t\t\t\t} else if (error.node && error.error && error.message) {\n\t\t\t\t\t// error is already a context object\n\t\t\t\t\tctxErr = error;\n\t\t\t\t} else {\n\t\t\t\t\tctxErr = tree._makeHookContext(node, null, {\n\t\t\t\t\t\terror: error, // it can be jqXHR or any custom error\n\t\t\t\t\t\targs: Array.prototype.slice.call(arguments),\n\t\t\t\t\t\tmessage: error ? (error.message || error.toString()) : \"\"\n\t\t\t\t\t});\n\t\t\t\t\tif( ctxErr.message === \"[object Object]\" ) {\n\t\t\t\t\t\tctxErr.message = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.warn(\"Load children failed (\" + ctxErr.message + \")\", ctxErr);\n\t\t\t\tif( tree._triggerNodeEvent(\"loadError\", ctxErr, null) !== false ) {\n\t\t\t\t\ttree.nodeSetStatus(ctx, \"error\", ctxErr.message, ctxErr.details);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif( ctx.options.postProcess ){\n\t\t\t\t// #792: Call postProcess for non-deferred source\n\t\t\t\tvar res = tree._triggerNodeEvent(\"postProcess\", ctx, ctx.originalEvent, {\n\t\t\t\t\tresponse: source, error: null, dataType: typeof source\n\t\t\t\t});\n\n\t\t\t\tsource = $.isArray(res) ? res : source;\n\t\t\t}\n\t\t}\n\t\t// $.when(source) resolves also for non-deferreds\n\t\treturn $.when(source).done(function(children){\n\t\t\tvar metaData;\n\n\t\t\tif( $.isPlainObject(children) ){\n\t\t\t\t// We got {foo: 'abc', children: [...]}\n\t\t\t\t// Copy extra properties to tree.data.foo\n\t\t\t\t_assert(node.isRootNode(), \"source may only be an object for root nodes (expecting an array of child objects otherwise)\");\n\t\t\t\t_assert($.isArray(children.children), \"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\");\n\t\t\t\tmetaData = children;\n\t\t\t\tchildren = children.children;\n\t\t\t\tdelete metaData.children;\n\t\t\t\t// Copy some attributes to tree.data\n\t\t\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\t\t\tif( metaData[attr] !== undefined ){\n\t\t\t\t\t\ttree[attr] = metaData[attr];\n\t\t\t\t\t\tdelete metaData[attr];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// Copy all other attributes to tree.data.NAME\n\t\t\t\t$.extend(tree.data, metaData);\n\t\t\t}\n\t\t\t_assert($.isArray(children), \"expected array of children\");\n\t\t\tnode._setChildren(children);\n\t\t\t// trigger fancytreeloadchildren\n\t\t\ttree._triggerNodeEvent(\"loadChildren\", node);\n\t\t});\n\t},\n\t/** [Not Implemented]  */\n\tnodeLoadKeyPath: function(ctx, keyPathList) {\n\t\t// TODO: implement and improve\n\t\t// http://code.google.com/p/dynatree/issues/detail?id=222\n\t},\n\t/**\n\t * Remove a single direct child of ctx.node.\n\t * @param {EventData} ctx\n\t * @param {FancytreeNode} childNode dircect child of ctx.node\n\t */\n\tnodeRemoveChild: function(ctx, childNode) {\n\t\tvar idx,\n\t\t\tnode = ctx.node,\n\t\t\t// opts = ctx.options,\n\t\t\tsubCtx = $.extend({}, ctx, {node: childNode}),\n\t\t\tchildren = node.children;\n\n\t\t// FT.debug(\"nodeRemoveChild()\", node.toString(), childNode.toString());\n\n\t\tif( children.length === 1 ) {\n\t\t\t_assert(childNode === children[0], \"invalid single child\");\n\t\t\treturn this.nodeRemoveChildren(ctx);\n\t\t}\n\t\tif( this.activeNode && (childNode === this.activeNode || this.activeNode.isDescendantOf(childNode))){\n\t\t\tthis.activeNode.setActive(false); // TODO: don't fire events\n\t\t}\n\t\tif( this.focusNode && (childNode === this.focusNode || this.focusNode.isDescendantOf(childNode))){\n\t\t\tthis.focusNode = null;\n\t\t}\n\t\t// TODO: persist must take care to clear select and expand cookies\n\t\tthis.nodeRemoveMarkup(subCtx);\n\t\tthis.nodeRemoveChildren(subCtx);\n\t\tidx = $.inArray(childNode, children);\n\t\t_assert(idx >= 0, \"invalid child\");\n\t\t// Notify listeners\n\t\tnode.triggerModifyChild(\"remove\", childNode);\n\t\t// Unlink to support GC\n\t\tchildNode.visit(function(n){\n\t\t\tn.parent = null;\n\t\t}, true);\n\t\tthis._callHook(\"treeRegisterNode\", this, false, childNode);\n\t\t// remove from child list\n\t\tchildren.splice(idx, 1);\n\t},\n\t/**Remove HTML markup for all descendents of ctx.node.\n\t * @param {EventData} ctx\n\t */\n\tnodeRemoveChildMarkup: function(ctx) {\n\t\tvar node = ctx.node;\n\n\t\t// FT.debug(\"nodeRemoveChildMarkup()\", node.toString());\n\t\t// TODO: Unlink attr.ftnode to support GC\n\t\tif(node.ul){\n\t\t\tif( node.isRootNode() ) {\n\t\t\t\t$(node.ul).empty();\n\t\t\t} else {\n\t\t\t\t$(node.ul).remove();\n\t\t\t\tnode.ul = null;\n\t\t\t}\n\t\t\tnode.visit(function(n){\n\t\t\t\tn.li = n.ul = null;\n\t\t\t});\n\t\t}\n\t},\n\t/**Remove all descendants of ctx.node.\n\t* @param {EventData} ctx\n\t*/\n\tnodeRemoveChildren: function(ctx) {\n\t\tvar subCtx,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\tchildren = node.children;\n\t\t\t// opts = ctx.options;\n\n\t\t// FT.debug(\"nodeRemoveChildren()\", node.toString());\n\t\tif(!children){\n\t\t\treturn;\n\t\t}\n\t\tif( this.activeNode && this.activeNode.isDescendantOf(node)){\n\t\t\tthis.activeNode.setActive(false); // TODO: don't fire events\n\t\t}\n\t\tif( this.focusNode && this.focusNode.isDescendantOf(node)){\n\t\t\tthis.focusNode = null;\n\t\t}\n\t\t// TODO: persist must take care to clear select and expand cookies\n\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t// Unlink children to support GC\n\t\t// TODO: also delete this.children (not possible using visit())\n\t\tsubCtx = $.extend({}, ctx);\n\t\tnode.triggerModifyChild(\"remove\", null);\n\t\tnode.visit(function(n){\n\t\t\tn.parent = null;\n\t\t\ttree._callHook(\"treeRegisterNode\", tree, false, n);\n\t\t});\n\t\tif( node.lazy ){\n\t\t\t// 'undefined' would be interpreted as 'not yet loaded' for lazy nodes\n\t\t\tnode.children = [];\n\t\t} else{\n\t\t\tnode.children = null;\n\t\t}\n\t\tif( !node.isRootNode() ) {\n\t\t\tnode.expanded = false;  // #449, #459\n\t\t}\n\t\tthis.nodeRenderStatus(ctx);\n\t},\n\t/**Remove HTML markup for ctx.node and all its descendents.\n\t * @param {EventData} ctx\n\t */\n\tnodeRemoveMarkup: function(ctx) {\n\t\tvar node = ctx.node;\n\t\t// FT.debug(\"nodeRemoveMarkup()\", node.toString());\n\t\t// TODO: Unlink attr.ftnode to support GC\n\t\tif(node.li){\n\t\t\t$(node.li).remove();\n\t\t\tnode.li = null;\n\t\t}\n\t\tthis.nodeRemoveChildMarkup(ctx);\n\t},\n\t/**\n\t * Create `&lt;li>&lt;span>..&lt;/span> .. &lt;/li>` tags for this node.\n\t *\n\t * This method takes care that all HTML markup is created that is required\n\t * to display this node in its current state.\n\t *\n\t * Call this method to create new nodes, or after the strucuture\n\t * was changed (e.g. after moving this node or adding/removing children)\n\t * nodeRenderTitle() and nodeRenderStatus() are implied.\n\t *\n\t * &lt;code>\n\t * &lt;li id='KEY' ftnode=NODE>\n\t *     &lt;span class='fancytree-node fancytree-expanded fancytree-has-children fancytree-lastsib fancytree-exp-el fancytree-ico-e'>\n\t *         &lt;span class=\"fancytree-expander\">&lt;/span>\n\t *         &lt;span class=\"fancytree-checkbox\">&lt;/span> // only present in checkbox mode\n\t *         &lt;span class=\"fancytree-icon\">&lt;/span>\n\t *         &lt;a href=\"#\" class=\"fancytree-title\"> Node 1 &lt;/a>\n\t *     &lt;/span>\n\t *     &lt;ul> // only present if node has children\n\t *         &lt;li id='KEY' ftnode=NODE> child1 ... &lt;/li>\n\t *         &lt;li id='KEY' ftnode=NODE> child2 ... &lt;/li>\n\t *     &lt;/ul>\n\t * &lt;/li>\n\t * &lt;/code>\n\t *\n\t * @param {EventData} ctx\n\t * @param {boolean} [force=false] re-render, even if html markup was already created\n\t * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n\t * @param {boolean} [collapsed=false] force root node to be collapsed, so we can apply animated expand later\n\t */\n\tnodeRender: function(ctx, force, deep, collapsed, _recursive) {\n\t\t/* This method must take care of all cases where the current data mode\n\t\t * (i.e. node hierarchy) does not match the current markup.\n\t\t *\n\t\t * - node was not yet rendered:\n\t\t *   create markup\n\t\t * - node was rendered: exit fast\n\t\t * - children have been added\n\t\t * - children have been removed\n\t\t */\n\t\tvar childLI, childNode1, childNode2, i, l, next, subCtx,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\taria = opts.aria,\n\t\t\tfirstTime = false,\n\t\t\tparent = node.parent,\n\t\t\tisRootNode = !parent,\n\t\t\tchildren = node.children,\n\t\t\tsuccessorLi = null;\n\t\t// FT.debug(\"nodeRender(\" + !!force + \", \" + !!deep + \")\", node.toString());\n\n\t\tif( tree._enableUpdate === false ) {\n\t\t\t// tree.debug(\"no render\", tree._enableUpdate);\n\t\t\treturn;\n\t\t}\n\t\tif( ! isRootNode && ! parent.ul ) {\n\t\t\t// Calling node.collapse on a deep, unrendered node\n\t\t\treturn;\n\t\t}\n\t\t_assert(isRootNode || parent.ul, \"parent UL must exist\");\n\n\t\t// Render the node\n\t\tif( !isRootNode ){\n\t\t\t// Discard markup on force-mode, or if it is not linked to parent <ul>\n\t\t\tif(node.li && (force || (node.li.parentNode !== node.parent.ul) ) ){\n\t\t\t\tif( node.li.parentNode === node.parent.ul ){\n\t\t\t\t\t// #486: store following node, so we can insert the new markup there later\n\t\t\t\t\tsuccessorLi = node.li.nextSibling;\n\t\t\t\t}else{\n\t\t\t\t\t// May happen, when a top-level node was dropped over another\n\t\t\t\t\tthis.debug(\"Unlinking \" + node + \" (must be child of \" + node.parent + \")\");\n\t\t\t\t}\n//\t            this.debug(\"nodeRemoveMarkup...\");\n\t\t\t\tthis.nodeRemoveMarkup(ctx);\n\t\t\t}\n\t\t\t// Create <li><span /> </li>\n//\t\t\tnode.debug(\"render...\");\n\t\t\tif( !node.li ) {\n//\t            node.debug(\"render... really\");\n\t\t\t\tfirstTime = true;\n\t\t\t\tnode.li = document.createElement(\"li\");\n\t\t\t\tnode.li.ftnode = node;\n\n\t\t\t\tif( node.key && opts.generateIds ){\n\t\t\t\t\tnode.li.id = opts.idPrefix + node.key;\n\t\t\t\t}\n\t\t\t\tnode.span = document.createElement(\"span\");\n\t\t\t\tnode.span.className = \"fancytree-node\";\n\t\t\t\tif( aria && !node.tr ) {\n\t\t\t\t\t$(node.li).attr(\"role\", \"treeitem\");\n\t\t\t\t}\n\t\t\t\tnode.li.appendChild(node.span);\n\n\t\t\t\t// Create inner HTML for the <span> (expander, checkbox, icon, and title)\n\t\t\t\tthis.nodeRenderTitle(ctx);\n\n\t\t\t\t// Allow tweaking and binding, after node was created for the first time\n\t\t\t\tif ( opts.createNode ){\n\t\t\t\t\topts.createNode.call(tree, {type: \"createNode\"}, ctx);\n\t\t\t\t}\n\t\t\t}else{\n//\t\t\t\tthis.nodeRenderTitle(ctx);\n\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t}\n\t\t\t// Allow tweaking after node state was rendered\n\t\t\tif ( opts.renderNode ){\n\t\t\t\topts.renderNode.call(tree, {type: \"renderNode\"}, ctx);\n\t\t\t}\n\t\t}\n\n\t\t// Visit child nodes\n\t\tif( children ){\n\t\t\tif( isRootNode || node.expanded || deep === true ) {\n\t\t\t\t// Create a UL to hold the children\n\t\t\t\tif( !node.ul ){\n\t\t\t\t\tnode.ul = document.createElement(\"ul\");\n\t\t\t\t\tif((collapsed === true && !_recursive) || !node.expanded){\n\t\t\t\t\t\t// hide top UL, so we can use an animation to show it later\n\t\t\t\t\t\tnode.ul.style.display = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\tif(aria){\n\t\t\t\t\t\t$(node.ul).attr(\"role\", \"group\");\n\t\t\t\t\t}\n\t\t\t\t\tif ( node.li ) { // issue #67\n\t\t\t\t\t\tnode.li.appendChild(node.ul);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.tree.$div.append(node.ul);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Add child markup\n\t\t\t\tfor(i=0, l=children.length; i<l; i++) {\n\t\t\t\t\tsubCtx = $.extend({}, ctx, {node: children[i]});\n\t\t\t\t\tthis.nodeRender(subCtx, force, deep, false, true);\n\t\t\t\t}\n\t\t\t\t// Remove <li> if nodes have moved to another parent\n\t\t\t\tchildLI = node.ul.firstChild;\n\t\t\t\twhile( childLI ){\n\t\t\t\t\tchildNode2 = childLI.ftnode;\n\t\t\t\t\tif( childNode2 && childNode2.parent !== node ) {\n\t\t\t\t\t\tnode.debug(\"_fixParent: remove missing \" + childNode2, childLI);\n\t\t\t\t\t\tnext = childLI.nextSibling;\n\t\t\t\t\t\tchildLI.parentNode.removeChild(childLI);\n\t\t\t\t\t\tchildLI = next;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tchildLI = childLI.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Make sure, that <li> order matches node.children order.\n\t\t\t\tchildLI = node.ul.firstChild;\n\t\t\t\tfor(i=0, l=children.length-1; i<l; i++) {\n\t\t\t\t\tchildNode1 = children[i];\n\t\t\t\t\tchildNode2 = childLI.ftnode;\n\t\t\t\t\tif( childNode1 !== childNode2 ) {\n\t\t\t\t\t\t// node.debug(\"_fixOrder: mismatch at index \" + i + \": \" + childNode1 + \" != \" + childNode2);\n\t\t\t\t\t\tnode.ul.insertBefore(childNode1.li, childNode2.li);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildLI = childLI.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\t// No children: remove markup if any\n\t\t\tif( node.ul ){\n//\t\t\t\talert(\"remove child markup for \" + node);\n\t\t\t\tthis.warn(\"remove child markup for \" + node);\n\t\t\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t\t}\n\t\t}\n\t\tif( !isRootNode ){\n\t\t\t// Update element classes according to node state\n\t\t\t// this.nodeRenderStatus(ctx);\n\t\t\t// Finally add the whole structure to the DOM, so the browser can render\n\t\t\tif( firstTime ){\n\t\t\t\t// #486: successorLi is set, if we re-rendered (i.e. discarded)\n\t\t\t\t// existing markup, which  we want to insert at the same position.\n\t\t\t\t// (null is equivalent to append)\n//\t\t\t\tparent.ul.appendChild(node.li);\n\t\t\t\tparent.ul.insertBefore(node.li, successorLi);\n\t\t\t}\n\t\t}\n\t},\n\t/** Create HTML inside the node's outer &lt;span> (i.e. expander, checkbox,\n\t * icon, and title).\n\t *\n\t * nodeRenderStatus() is implied.\n\t * @param {EventData} ctx\n\t * @param {string} [title] optinal new title\n\t */\n\tnodeRenderTitle: function(ctx, title) {\n\t\t// set node connector images, links and text\n\t\tvar checkbox, className, icon, nodeTitle, role, tabindex, tooltip, iconTooltip,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\taria = opts.aria,\n\t\t\tlevel = node.getLevel(),\n\t\t\tares = [];\n\n\t\tif(title !== undefined){\n\t\t\tnode.title = title;\n\t\t}\n\t\tif ( !node.span || tree._enableUpdate === false ) {\n\t\t\t// Silently bail out if node was not rendered yet, assuming\n\t\t\t// node.render() will be called as the node becomes visible\n\t\t\treturn;\n\t\t}\n\t\t// Connector (expanded, expandable or simple)\n\t\trole = (aria && node.hasChildren() !== false) ? \" role='button'\" : \"\";\n\t\tif( level < opts.minExpandLevel ) {\n\t\t\tif( !node.lazy ) {\n\t\t\t\tnode.expanded = true;\n\t\t\t}\n\t\t\tif(level > 1){\n\t\t\t\tares.push(\"<span \" + role + \" class='fancytree-expander fancytree-expander-fixed'></span>\");\n\t\t\t}\n\t\t\t// .. else (i.e. for root level) skip expander/connector alltogether\n\t\t} else {\n\t\t\tares.push(\"<span \" + role + \" class='fancytree-expander'></span>\");\n\t\t}\n\t\t// Checkbox mode\n\t\tcheckbox = FT.evalOption(\"checkbox\", node, node, opts, false);\n\n\t\tif( checkbox && !node.isStatusNode() ) {\n\t\t\trole = aria ? \" role='checkbox'\" : \"\";\n\t\t\tclassName = \"fancytree-checkbox\";\n\t\t\tif( checkbox === \"radio\" || (node.parent && node.parent.radiogroup) ) {\n\t\t\t\tclassName += \" fancytree-radio\";\n\t\t\t}\n\t\t\tares.push(\"<span \" + role + \" class='\" + className + \"'></span>\");\n\t\t}\n\t\t// Folder or doctype icon\n\t\tif( node.data.iconClass !== undefined ) {  // 2015-11-16\n\t\t\t// Handle / warn about backward compatibility\n\t\t\tif( node.icon ) {\n\t\t\t\t$.error(\"'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead\");\n\t\t\t} else {\n\t\t\t\tnode.warn(\"'iconClass' node option is deprecated since v2.14.0: use 'icon' instead\");\n\t\t\t\tnode.icon = node.data.iconClass;\n\t\t\t}\n\t\t}\n\t\t// If opts.icon is a callback and returns something other than undefined, use that\n\t\t// else if node.icon is a boolean or string, use that\n\t\t// else if opts.icon is a boolean or string, use that\n\t\t// else show standard icon (which may be different for folders or documents)\n\t\ticon = FT.evalOption(\"icon\", node, node, opts, true);\n\t\t// if( typeof icon !== \"boolean\" ) {\n\t\t// \t// icon is defined, but not true/false: must be a string\n\t\t// \ticon = \"\" + icon;\n\t\t// }\n\t\tif( icon !== false ) {\n\t\t\trole = aria ? \" role='presentation'\" : \"\";\n\n\t\t\ticonTooltip = FT.evalOption(\"iconTooltip\", node, node, opts, null);\n\t\t\ticonTooltip = iconTooltip ? \" title='\" + _escapeTooltip(iconTooltip) + \"'\" : \"\";\n\n\t\t\tif ( typeof icon === \"string\" ) {\n\t\t\t\tif( TEST_IMG.test(icon) ) {\n\t\t\t\t\t// node.icon is an image url. Prepend imagePath\n\t\t\t\t\ticon = (icon.charAt(0) === \"/\") ? icon : ((opts.imagePath || \"\") + icon);\n\t\t\t\t\tares.push(\"<img src='\" + icon + \"' class='fancytree-icon'\" + iconTooltip + \" alt='' />\");\n\t\t\t\t} else {\n\t\t\t\t\tares.push(\"<span \" + role + \" class='fancytree-custom-icon \" + icon +  \"'\" + iconTooltip + \"></span>\");\n\t\t\t\t}\n\t\t\t} else if ( icon.text ) {\n\t\t\t\tares.push(\"<span \" + role + \" class='fancytree-custom-icon \" +\n\t\t\t\t\t(icon.addClass || \"\") + \"'\" + iconTooltip + \">\" + icon.text + \"</span>\");\n\t\t\t} else {\n\t\t\t\t// standard icon: theme css will take care of this\n\t\t\t\tares.push(\"<span \" + role + \" class='fancytree-icon'\" + iconTooltip + \"></span>\");\n\t\t\t}\n\t\t}\n\t\t// Node title\n\t\tnodeTitle = \"\";\n\t\tif ( opts.renderTitle ){\n\t\t\tnodeTitle = opts.renderTitle.call(tree, {type: \"renderTitle\"}, ctx) || \"\";\n\t\t}\n\t\tif ( !nodeTitle ) {\n\t\t\ttooltip = FT.evalOption(\"tooltip\", node, node, opts, null);\n\t\t\tif( tooltip === true ) {\n\t\t\t\ttooltip = node.title;\n\t\t\t}\n\t\t\t// if( node.tooltip ) {\n\t\t\t// \ttooltip = node.tooltip;\n\t\t\t// } else if ( opts.tooltip ) {\n\t\t\t// \ttooltip = opts.tooltip === true ? node.title : opts.tooltip.call(tree, node);\n\t\t\t// }\n\t\t\ttooltip = tooltip ? \" title='\" + _escapeTooltip(tooltip) + \"'\" : \"\";\n\t\t\ttabindex = opts.titlesTabbable ? \" tabindex='0'\" : \"\";\n\n\t\t\tnodeTitle = \"<span class='fancytree-title'\" +\n\t\t\t\ttooltip + tabindex + \">\" +\n\t\t\t\t(opts.escapeTitles ? FT.escapeHtml(node.title) : node.title) +\n\t\t\t\t\"</span>\";\n\t\t}\n\t\tares.push(nodeTitle);\n\t\t// Note: this will trigger focusout, if node had the focus\n\t\t//$(node.span).html(ares.join(\"\")); // it will cleanup the jQuery data currently associated with SPAN (if any), but it executes more slowly\n\t\tnode.span.innerHTML = ares.join(\"\");\n\t\t// Update CSS classes\n\t\tthis.nodeRenderStatus(ctx);\n\t\tif ( opts.enhanceTitle ){\n\t\t\tctx.$title = $(\">span.fancytree-title\", node.span);\n\t\t\tnodeTitle = opts.enhanceTitle.call(tree, {type: \"enhanceTitle\"}, ctx) || \"\";\n\t\t}\n\t},\n\t/** Update element classes according to node state.\n\t * @param {EventData} ctx\n\t */\n\tnodeRenderStatus: function(ctx) {\n\t\t// Set classes for current status\n\t\tvar $ariaElem,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n//\t\t\tnodeContainer = node[tree.nodeContainerAttrName],\n\t\t\thasChildren = node.hasChildren(),\n\t\t\tisLastSib = node.isLastSibling(),\n\t\t\taria = opts.aria,\n\t\t\tcn = opts._classNames,\n\t\t\tcnList = [],\n\t\t\tstatusElem = node[tree.statusClassPropName];\n\n\t\tif( !statusElem || tree._enableUpdate === false ){\n\t\t\t// if this function is called for an unrendered node, ignore it (will be updated on nect render anyway)\n\t\t\treturn;\n\t\t}\n\t\tif( aria ) {\n\t\t\t$ariaElem = $(node.tr || node.li);\n\t\t}\n\t\t// Build a list of class names that we will add to the node <span>\n\t\tcnList.push(cn.node);\n\t\tif( tree.activeNode === node ){\n\t\t\tcnList.push(cn.active);\n//\t\t\t$(\">span.fancytree-title\", statusElem).attr(\"tabindex\", \"0\");\n//\t\t\ttree.$container.removeAttr(\"tabindex\");\n\t\t// }else{\n//\t\t\t$(\">span.fancytree-title\", statusElem).removeAttr(\"tabindex\");\n//\t\t\ttree.$container.attr(\"tabindex\", \"0\");\n\t\t}\n\t\tif( tree.focusNode === node ){\n\t\t\tcnList.push(cn.focused);\n\t\t}\n\t\tif( node.expanded ){\n\t\t\tcnList.push(cn.expanded);\n\t\t}\n\t\tif( aria ){\n\t\t\tif (hasChildren !== false) {\n\t\t\t\t$ariaElem.attr(\"aria-expanded\", Boolean(node.expanded));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$ariaElem.removeAttr(\"aria-expanded\");\n\t\t\t}\n\t\t}\n\t\tif( node.folder ){\n\t\t\tcnList.push(cn.folder);\n\t\t}\n\t\tif( hasChildren !== false ){\n\t\t\tcnList.push(cn.hasChildren);\n\t\t}\n\t\t// TODO: required?\n\t\tif( isLastSib ){\n\t\t\tcnList.push(cn.lastsib);\n\t\t}\n\t\tif( node.lazy && node.children == null ){\n\t\t\tcnList.push(cn.lazy);\n\t\t}\n\t\tif( node.partload ){\n\t\t\tcnList.push(cn.partload);\n\t\t}\n\t\tif( node.partsel ){\n\t\t\tcnList.push(cn.partsel);\n\t\t}\n\t\tif( FT.evalOption(\"unselectable\", node, node, opts, false) ){\n\t\t\tcnList.push(cn.unselectable);\n\t\t}\n\t\tif( node._isLoading ){\n\t\t\tcnList.push(cn.loading);\n\t\t}\n\t\tif( node._error ){\n\t\t\tcnList.push(cn.error);\n\t\t}\n\t\tif( node.statusNodeType ) {\n\t\t\tcnList.push(cn.statusNodePrefix + node.statusNodeType);\n\t\t}\n\t\tif( node.selected ){\n\t\t\tcnList.push(cn.selected);\n\t\t\tif(aria){\n\t\t\t\t$ariaElem.attr(\"aria-selected\", true);\n\t\t\t}\n\t\t}else if(aria){\n\t\t\t$ariaElem.attr(\"aria-selected\", false);\n\t\t}\n\t\tif( node.extraClasses ){\n\t\t\tcnList.push(node.extraClasses);\n\t\t}\n\t\t// IE6 doesn't correctly evaluate multiple class names,\n\t\t// so we create combined class names that can be used in the CSS\n\t\tif( hasChildren === false ){\n\t\t\tcnList.push(cn.combinedExpanderPrefix + \"n\" +\n\t\t\t\t\t(isLastSib ? \"l\" : \"\")\n\t\t\t\t\t);\n\t\t}else{\n\t\t\tcnList.push(cn.combinedExpanderPrefix +\n\t\t\t\t\t(node.expanded ? \"e\" : \"c\") +\n\t\t\t\t\t(node.lazy && node.children == null ? \"d\" : \"\") +\n\t\t\t\t\t(isLastSib ? \"l\" : \"\")\n\t\t\t\t\t);\n\t\t}\n\t\tcnList.push(cn.combinedIconPrefix +\n\t\t\t\t(node.expanded ? \"e\" : \"c\") +\n\t\t\t\t(node.folder ? \"f\" : \"\")\n\t\t\t\t);\n//        node.span.className = cnList.join(\" \");\n\t\tstatusElem.className = cnList.join(\" \");\n\n\t\t// TODO: we should not set this in the <span> tag also, if we set it here:\n\t\t// Maybe most (all) of the classes should be set in LI instead of SPAN?\n\t\tif(node.li){\n\t\t\t// #719: we have to consider that there may be already other classes:\n\t\t\t$(node.li).toggleClass(cn.lastsib, isLastSib);\n\t\t}\n\t},\n\t/** Activate node.\n\t * flag defaults to true.\n\t * If flag is true, the node is activated (must be a synchronous operation)\n\t * If flag is false, the node is deactivated (must be a synchronous operation)\n\t * @param {EventData} ctx\n\t * @param {boolean} [flag=true]\n\t * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n\t * @returns {$.Promise}\n\t */\n\tnodeSetActive: function(ctx, flag, callOpts) {\n\t\t// Handle user click / [space] / [enter], according to clickFolderMode.\n\t\tcallOpts = callOpts || {};\n\t\tvar subCtx,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\tnoEvents = (callOpts.noEvents === true),\n\t\t\tnoFocus = (callOpts.noFocus === true),\n\t\t\tisActive = (node === tree.activeNode);\n\n\t\t// flag defaults to true\n\t\tflag = (flag !== false);\n\t\t// node.debug(\"nodeSetActive\", flag);\n\n\t\tif(isActive === flag){\n\t\t\t// Nothing to do\n\t\t\treturn _getResolvedPromise(node);\n\t\t}else if(flag && !noEvents && this._triggerNodeEvent(\"beforeActivate\", node, ctx.originalEvent) === false ){\n\t\t\t// Callback returned false\n\t\t\treturn _getRejectedPromise(node, [\"rejected\"]);\n\t\t}\n\t\tif(flag){\n\t\t\tif(tree.activeNode){\n\t\t\t\t_assert(tree.activeNode !== node, \"node was active (inconsistency)\");\n\t\t\t\tsubCtx = $.extend({}, ctx, {node: tree.activeNode});\n\t\t\t\ttree.nodeSetActive(subCtx, false);\n\t\t\t\t_assert(tree.activeNode === null, \"deactivate was out of sync?\");\n\t\t\t}\n\t\t\tif(opts.activeVisible){\n\t\t\t\t// If no focus is set (noFocus: true) and there is no focused node, this node is made visible.\n\t\t\t\tnode.makeVisible({scrollIntoView: noFocus && tree.focusNode == null});\n\t\t\t}\n\t\t\ttree.activeNode = node;\n\t\t\ttree.nodeRenderStatus(ctx);\n\t\t\tif( !noFocus ) {\n\t\t\t\ttree.nodeSetFocus(ctx);\n\t\t\t}\n\t\t\tif( !noEvents ) {\n\t\t\t\ttree._triggerNodeEvent(\"activate\", node, ctx.originalEvent);\n\t\t\t}\n\t\t}else{\n\t\t\t_assert(tree.activeNode === node, \"node was not active (inconsistency)\");\n\t\t\ttree.activeNode = null;\n\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\tif( !noEvents ) {\n\t\t\t\tctx.tree._triggerNodeEvent(\"deactivate\", node, ctx.originalEvent);\n\t\t\t}\n\t\t}\n\t\treturn _getResolvedPromise(node);\n\t},\n\t/** Expand or collapse node, return Deferred.promise.\n\t *\n\t * @param {EventData} ctx\n\t * @param {boolean} [flag=true]\n\t * @param {object} [opts] additional options. Defaults to {noAnimation: false, noEvents: false}\n\t * @returns {$.Promise} The deferred will be resolved as soon as the (lazy)\n\t *     data was retrieved, rendered, and the expand animation finshed.\n\t */\n\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\tcallOpts = callOpts || {};\n\t\tvar _afterLoad, dfd, i, l, parents, prevAC,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\tnoAnimation = (callOpts.noAnimation === true),\n\t\t\tnoEvents = (callOpts.noEvents === true);\n\n\t\t// flag defaults to true\n\t\tflag = (flag !== false);\n\n\t\t// node.debug(\"nodeSetExpanded(\" + flag + \")\");\n\n\t\tif((node.expanded && flag) || (!node.expanded && !flag)){\n\t\t\t// Nothing to do\n\t\t\t// node.debug(\"nodeSetExpanded(\" + flag + \"): nothing to do\");\n\t\t\treturn _getResolvedPromise(node);\n\t\t}else if(flag && !node.lazy && !node.hasChildren() ){\n\t\t\t// Prevent expanding of empty nodes\n\t\t\t// return _getRejectedPromise(node, [\"empty\"]);\n\t\t\treturn _getResolvedPromise(node);\n\t\t}else if( !flag && node.getLevel() < opts.minExpandLevel ) {\n\t\t\t// Prevent collapsing locked levels\n\t\t\treturn _getRejectedPromise(node, [\"locked\"]);\n\t\t}else if ( /*!noEvents &&*/ this._triggerNodeEvent(\"beforeExpand\", node, ctx.originalEvent) === false ){ // iob fix\n\t\t\t// Callback returned false\n\t\t\treturn _getRejectedPromise(node, [\"rejected\"]);\n\t\t}\n\t\t// If this node inside a collpased node, no animation and scrolling is needed\n\t\tif( !noAnimation && !node.isVisible() ) {\n\t\t\tnoAnimation = callOpts.noAnimation = true;\n\t\t}\n\n\t\tdfd = new $.Deferred();\n\n\t\t// Auto-collapse mode: collapse all siblings\n\t\tif( flag && !node.expanded && opts.autoCollapse ) {\n\t\t\tparents = node.getParentList(false, true);\n\t\t\tprevAC = opts.autoCollapse;\n\t\t\ttry{\n\t\t\t\topts.autoCollapse = false;\n\t\t\t\tfor(i=0, l=parents.length; i<l; i++){\n\t\t\t\t\t// TODO: should return promise?\n\t\t\t\t\tthis._callHook(\"nodeCollapseSiblings\", parents[i], callOpts);\n\t\t\t\t}\n\t\t\t}finally{\n\t\t\t\topts.autoCollapse = prevAC;\n\t\t\t}\n\t\t}\n\t\t// Trigger expand/collapse after expanding\n\t\tdfd.done(function(){\n\t\t\tvar\tlastChild = node.getLastChild();\n\n\t\t\tif( flag && opts.autoScroll && !noAnimation && lastChild ) {\n\t\t\t\t// Scroll down to last child, but keep current node visible\n\t\t\t\tlastChild.scrollIntoView(true, {topNode: node}).always(function(){\n\t\t\t\t\tif( !noEvents ) {\n\t\t\t\t\t\tctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif( !noEvents ) {\n\t\t\t\t\tctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// vvv Code below is executed after loading finished:\n\t\t_afterLoad = function(callback){\n\t\t\tvar cn = opts._classNames,\n\t\t\t\tisVisible, isExpanded,\n\t\t\t\teffect = opts.toggleEffect;\n\n\t\t\tnode.expanded = flag;\n\t\t\t// Create required markup, but make sure the top UL is hidden, so we\n\t\t\t// can animate later\n\t\t\ttree._callHook(\"nodeRender\", ctx, false, false, true);\n\n\t\t\t// Hide children, if node is collapsed\n\t\t\tif( node.ul ) {\n\t\t\t\tisVisible = (node.ul.style.display !== \"none\");\n\t\t\t\tisExpanded = !!node.expanded;\n\t\t\t\tif ( isVisible === isExpanded ) {\n\t\t\t\t\tnode.warn(\"nodeSetExpanded: UL.style.display already set\");\n\n\t\t\t\t} else if ( !effect || noAnimation ) {\n\t\t\t\t\tnode.ul.style.display = ( node.expanded || !parent ) ? \"\" : \"none\";\n\n\t\t\t\t} else {\n\t\t\t\t\t// The UI toggle() effect works with the ext-wide extension,\n\t\t\t\t\t// while jQuery.animate() has problems when the title span\n\t\t\t\t\t// has positon: absolute.\n\t\t\t\t\t// Since jQuery UI 1.12, the blind effect requires the parent\n\t\t\t\t\t// element to have 'position: relative'.\n\t\t\t\t\t// See #716, #717\n\t\t\t\t\t$(node.li).addClass(cn.animating);  // #717\n//\t\t\t\t\tnode.info(\"fancytree-animating start: \" + node.li.className);\n\t\t\t\t\t$(node.ul)\n\t\t\t\t\t\t.addClass(cn.animating)  // # 716\n\t\t\t\t\t\t.toggle(effect.effect, effect.options, effect.duration, function(){\n//\t\t\t\t\t\t\tnode.info(\"fancytree-animating end: \" + node.li.className);\n\t\t\t\t\t\t\t$(this).removeClass(cn.animating);  // #716\n\t\t\t\t\t\t\t$(node.li).removeClass(cn.animating);  // #717\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback();\n\t\t};\n\t\t// ^^^ Code above is executed after loading finshed.\n\n\t\t// Load lazy nodes, if any. Then continue with _afterLoad()\n\t\tif(flag && node.lazy && node.hasChildren() === undefined){\n\t\t\t// node.debug(\"nodeSetExpanded: load start...\");\n\t\t\tnode.load().done(function(){\n\t\t\t\t// node.debug(\"nodeSetExpanded: load done\");\n\t\t\t\tif(dfd.notifyWith){ // requires jQuery 1.6+\n\t\t\t\t\tdfd.notifyWith(node, [\"loaded\"]);\n\t\t\t\t}\n\t\t\t\t_afterLoad(function () { dfd.resolveWith(node); });\n\t\t\t}).fail(function(errMsg){\n\t\t\t\t_afterLoad(function () { dfd.rejectWith(node, [\"load failed (\" + errMsg + \")\"]); });\n\t\t\t});\n/*\n\t\t\tvar source = tree._triggerNodeEvent(\"lazyLoad\", node, ctx.originalEvent);\n\t\t\t_assert(typeof source !== \"boolean\", \"lazyLoad event must return source in data.result\");\n\t\t\tnode.debug(\"nodeSetExpanded: load start...\");\n\t\t\tthis._callHook(\"nodeLoadChildren\", ctx, source).done(function(){\n\t\t\t\tnode.debug(\"nodeSetExpanded: load done\");\n\t\t\t\tif(dfd.notifyWith){ // requires jQuery 1.6+\n\t\t\t\t\tdfd.notifyWith(node, [\"loaded\"]);\n\t\t\t\t}\n\t\t\t\t_afterLoad.call(tree);\n\t\t\t}).fail(function(errMsg){\n\t\t\t\tdfd.rejectWith(node, [\"load failed (\" + errMsg + \")\"]);\n\t\t\t});\n*/\n\t\t}else{\n\t\t\t_afterLoad(function () { dfd.resolveWith(node); });\n\t\t}\n\t\t// node.debug(\"nodeSetExpanded: returns\");\n\t\treturn dfd.promise();\n\t},\n\t/** Focus or blur this node.\n\t * @param {EventData} ctx\n\t * @param {boolean} [flag=true]\n\t */\n\tnodeSetFocus: function(ctx, flag) {\n\t\t// ctx.node.debug(\"nodeSetFocus(\" + flag + \")\");\n\t\tvar ctx2,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\topts = tree.options,\n\t\t\t// et = ctx.originalEvent && ctx.originalEvent.type,\n\t\t\tisInput = ctx.originalEvent ? $(ctx.originalEvent.target).is(\":input\") : false;\n\n\t\tflag = (flag !== false);\n\n\t\t// (node || tree).debug(\"nodeSetFocus(\" + flag + \"), event: \" + et + \", isInput: \"+ isInput);\n\t\t// Blur previous node if any\n\t\tif(tree.focusNode){\n\t\t\tif(tree.focusNode === node && flag){\n\t\t\t\t// node.debug(\"nodeSetFocus(\" + flag + \"): nothing to do\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx2 = $.extend({}, ctx, {node: tree.focusNode});\n\t\t\ttree.focusNode = null;\n\t\t\tthis._triggerNodeEvent(\"blur\", ctx2);\n\t\t\tthis._callHook(\"nodeRenderStatus\", ctx2);\n\t\t}\n\t\t// Set focus to container and node\n\t\tif(flag){\n\t\t\tif( !this.hasFocus() ){\n\t\t\t\tnode.debug(\"nodeSetFocus: forcing container focus\");\n\t\t\t\tthis._callHook(\"treeSetFocus\", ctx, true, {calledByNode: true});\n\t\t\t}\n\t\t\tnode.makeVisible({scrollIntoView: false});\n\t\t\ttree.focusNode = node;\n\t\t\tif( opts.titlesTabbable ) {\n\t\t\t\tif( !isInput ) { // #621\n\t\t\t\t\t$(node.span).find(\".fancytree-title\").focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We cannot set KB focus to a node, so use the tree container\n\t\t\t\t// #563, #570: IE scrolls on every call to .focus(), if the container\n\t\t\t\t// is partially outside the viewport. So do it only, when absolutely\n\t\t\t\t// neccessary:\n\t\t\t\tif( $(document.activeElement).closest(\".fancytree-container\").length === 0 ) {\n\t\t\t\t\t$(tree.$container).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( opts.aria ){\n\t\t\t\t// Set active descendant to node's span ID (create one, if needed)\n\t\t\t\t$(tree.$container).attr(\"aria-activedescendant\",\n\t\t\t\t\t$( node.tr || node.li ).uniqueId().attr(\"id\"));\n\t\t\t\t\t// \"ftal_\" + opts.idPrefix + node.key);\n\t\t\t}\n//\t\t\t$(node.span).find(\".fancytree-title\").focus();\n\t\t\tthis._triggerNodeEvent(\"focus\", ctx);\n//          if( opts.autoActivate ){\n//              tree.nodeSetActive(ctx, true);\n//          }\n\t\t\tif( opts.autoScroll ){\n\t\t\t\tnode.scrollIntoView();\n\t\t\t}\n\t\t\tthis._callHook(\"nodeRenderStatus\", ctx);\n\t\t}\n\t},\n\t/** (De)Select node, return new status (sync).\n\t *\n\t * @param {EventData} ctx\n\t * @param {boolean} [flag=true]\n\t * @param {object} [opts] additional options. Defaults to {noEvents: false,\n\t *     propagateDown: null, propagateUp: null,\n\t *     callback: null,\n\t *     }\n\t * @returns {boolean} previous status\n\t */\n\tnodeSetSelected: function(ctx, flag, callOpts) {\n\t\tcallOpts = callOpts || {};\n\t\tvar node = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\tnoEvents = (callOpts.noEvents === true),\n\t\t\tparent = node.parent;\n\n\t\t// flag defaults to true\n\t\tflag = (flag !== false);\n\n\t\t// node.debug(\"nodeSetSelected(\" + flag + \")\", ctx);\n\n\t\t// Cannot (de)select unselectable nodes directly (only by propagation or\n\t\t// by setting the `.selected` property)\n\t\tif( FT.evalOption(\"unselectable\", node, node, opts, false) ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember the user's intent, in case down -> up propagation prevents\n\t\t// applying it to node.selected\n\t\tnode._lastSelectIntent = flag;\n\n\t\t// Nothing to do?\n\t\t/*jshint -W018 */  // Confusing use of '!'\n\t\tif( !!node.selected === flag ){\n\t\t\tif( opts.selectMode === 3 && node.partsel && !flag ){\n\t\t\t\t// If propagation prevented selecting this node last time, we still\n\t\t\t\t// want to allow to apply setSelected(false) now\n\t\t\t}else{\n\t\t\t\treturn flag;\n\t\t\t}\n\t\t}\n\t\t/*jshint +W018 */\n\n\t\tif( !noEvents &&\n\t\t\tthis._triggerNodeEvent(\"beforeSelect\", node, ctx.originalEvent) === false ) {\n\t\t\t\treturn !!node.selected;\n\t\t}\n\t\tif(flag && opts.selectMode === 1){\n\t\t\t// single selection mode (we don't uncheck all tree nodes, for performance reasons)\n\t\t\tif(tree.lastSelectedNode){\n\t\t\t\ttree.lastSelectedNode.setSelected(false);\n\t\t\t}\n\t\t\tnode.selected = flag;\n\t\t}else if(opts.selectMode === 3 && parent && !parent.radiogroup && !node.radiogroup){\n\t\t\t// multi-hierarchical selection mode\n\t\t\tnode.selected = flag;\n\t\t\tnode.fixSelection3AfterClick(callOpts);\n\t\t}else if(parent && parent.radiogroup){\n\t\t\tnode.visitSiblings(function(n){\n\t\t\t\tn._changeSelectStatusAttrs(flag && n === node);\n\t\t\t}, true);\n\t\t}else{\n\t\t\t// default: selectMode: 2, multi selection mode\n\t\t\tnode.selected = flag;\n\t\t}\n\t\tthis.nodeRenderStatus(ctx);\n\t\ttree.lastSelectedNode = flag ? node : null;\n\t\tif( !noEvents ) {\n\t\t\ttree._triggerNodeEvent(\"select\", ctx);\n\t\t}\n\t},\n\t/** Show node status (ok, loading, error, nodata) using styles and a dummy child node.\n\t *\n\t * @param {EventData} ctx\n\t * @param status\n\t * @param message\n\t * @param details\n\t * @since 2.3\n\t */\n\tnodeSetStatus: function(ctx, status, message, details) {\n\t\tvar node = ctx.node,\n\t\t\ttree = ctx.tree;\n\n\t\tfunction _clearStatusNode() {\n\t\t\t// Remove dedicated dummy node, if any\n\t\t\tvar firstChild = ( node.children ? node.children[0] : null );\n\t\t\tif ( firstChild && firstChild.isStatusNode() ) {\n\t\t\t\ttry{\n\t\t\t\t\t// I've seen exceptions here with loadKeyPath...\n\t\t\t\t\tif(node.ul){\n\t\t\t\t\t\tnode.ul.removeChild(firstChild.li);\n\t\t\t\t\t\tfirstChild.li = null; // avoid leaks (DT issue 215)\n\t\t\t\t\t}\n\t\t\t\t}catch(e){}\n\t\t\t\tif( node.children.length === 1 ){\n\t\t\t\t\tnode.children = [];\n\t\t\t\t}else{\n\t\t\t\t\tnode.children.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfunction _setStatusNode(data, type) {\n\t\t\t// Create/modify the dedicated dummy node for 'loading...' or\n\t\t\t// 'error!' status. (only called for direct child of the invisible\n\t\t\t// system root)\n\t\t\tvar firstChild = ( node.children ? node.children[0] : null );\n\t\t\tif ( firstChild && firstChild.isStatusNode() ) {\n\t\t\t\t$.extend(firstChild, data);\n\t\t\t\tfirstChild.statusNodeType = type;\n\t\t\t\ttree._callHook(\"nodeRenderTitle\", firstChild);\n\t\t\t} else {\n\t\t\t\tnode._setChildren([data]);\n\t\t\t\tnode.children[0].statusNodeType = type;\n\t\t\t\ttree.render();\n\t\t\t}\n\t\t\treturn node.children[0];\n\t\t}\n\n\t\tswitch( status ){\n\t\tcase \"ok\":\n\t\t\t_clearStatusNode();\n\t\t\tnode._isLoading = false;\n\t\t\tnode._error = null;\n\t\t\tnode.renderStatus();\n\t\t\tbreak;\n\t\tcase \"loading\":\n\t\t\tif( !node.parent ) {\n\t\t\t\t_setStatusNode({\n\t\t\t\t\ttitle: tree.options.strings.loading + (message ? \" (\" + message + \")\" : \"\"),\n\t\t\t\t\t// icon: true,  // needed for 'loding' icon\n\t\t\t\t\tcheckbox: false,\n\t\t\t\t\ttooltip: details\n\t\t\t\t}, status);\n\t\t\t}\n\t\t\tnode._isLoading = true;\n\t\t\tnode._error = null;\n\t\t\tnode.renderStatus();\n\t\t\tbreak;\n\t\tcase \"error\":\n\t\t\t_setStatusNode({\n\t\t\t\ttitle: tree.options.strings.loadError + (message ? \" (\" + message + \")\" : \"\"),\n\t\t\t\t// icon: false,\n\t\t\t\tcheckbox: false,\n\t\t\t\ttooltip: details\n\t\t\t}, status);\n\t\t\tnode._isLoading = false;\n\t\t\tnode._error = { message: message, details: details };\n\t\t\tnode.renderStatus();\n\t\t\tbreak;\n\t\tcase \"nodata\":\n\t\t\t_setStatusNode({\n\t\t\t\ttitle: tree.options.strings.noData,\n\t\t\t\t// icon: false,\n\t\t\t\tcheckbox: false,\n\t\t\t\ttooltip: details\n\t\t\t}, status);\n\t\t\tnode._isLoading = false;\n\t\t\tnode._error = null;\n\t\t\tnode.renderStatus();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$.error(\"invalid node status \" + status);\n\t\t}\n\t},\n\t/**\n\t *\n\t * @param {EventData} ctx\n\t */\n\tnodeToggleExpanded: function(ctx) {\n\t\treturn this.nodeSetExpanded(ctx, !ctx.node.expanded);\n\t},\n\t/**\n\t * @param {EventData} ctx\n\t */\n\tnodeToggleSelected: function(ctx) {\n\t\tvar node = ctx.node,\n\t\t\tflag = !node.selected;\n\n\t\t// In selectMode: 3 this node may be unselected+partsel, even if\n\t\t// setSelected(true) was called before, due to `unselectable` children.\n\t\t// In this case, we now toggle as `setSelected(false)`\n\t\tif( node.partsel && !node.selected && node._lastSelectIntent === true ) {\n\t\t\tflag = false;\n\t\t\tnode.selected = true;  // so it is not considered 'nothing to do'\n\t\t}\n\t\tnode._lastSelectIntent = flag;\n\t\treturn this.nodeSetSelected(ctx, flag);\n\t},\n\t/** Remove all nodes.\n\t * @param {EventData} ctx\n\t */\n\ttreeClear: function(ctx) {\n\t\tvar tree = ctx.tree;\n\t\ttree.activeNode = null;\n\t\ttree.focusNode = null;\n\t\ttree.$div.find(\">ul.fancytree-container\").empty();\n\t\t// TODO: call destructors and remove reference loops\n\t\ttree.rootNode.children = null;\n\t},\n\t/** Widget was created (called only once, even it re-initialized).\n\t * @param {EventData} ctx\n\t */\n\ttreeCreate: function(ctx) {\n\t},\n\t/** Widget was destroyed.\n\t * @param {EventData} ctx\n\t */\n\ttreeDestroy: function(ctx) {\n\t\tthis.$div.find(\">ul.fancytree-container\").remove();\n\t\tthis.$source && this.$source.removeClass(\"ui-helper-hidden\");\n\t},\n\t/** Widget was (re-)initialized.\n\t * @param {EventData} ctx\n\t */\n\ttreeInit: function(ctx) {\n\t\tvar tree = ctx.tree,\n\t\t\topts = tree.options;\n\n\t\t//this.debug(\"Fancytree.treeInit()\");\n\t\t// Add container to the TAB chain\n\t\t// See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n\t\t// #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\t\ttree.$container.attr(\"tabindex\", opts.tabindex);\n\n\t\t// Copy some attributes to tree.data\n\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\tif( opts[attr] !== undefined ){\n\t\t\t\ttree.info(\"Move option \" + attr + \" to tree\");\n\t\t\t\ttree[attr] = opts[attr];\n\t\t\t\tdelete opts[attr];\n\t\t\t}\n\t\t});\n\n\t\tif( opts.rtl ) {\n\t\t\ttree.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n\t\t}else{\n\t\t\ttree.$container.removeAttr(\"DIR\").removeClass(\"fancytree-rtl\");\n\t\t}\n\t\tif( opts.aria ){\n\t\t\ttree.$container.attr(\"role\", \"tree\");\n\t\t\tif( opts.selectMode !== 1 ) {\n\t\t\t\ttree.$container.attr(\"aria-multiselectable\", true);\n\t\t\t}\n\t\t}\n\t\tthis.treeLoad(ctx);\n\t},\n\t/** Parse Fancytree from source, as configured in the options.\n\t * @param {EventData} ctx\n\t * @param {object} [source] optional new source (use last data otherwise)\n\t */\n\ttreeLoad: function(ctx, source) {\n\t\tvar metaData, type, $ul,\n\t\t\ttree = ctx.tree,\n\t\t\t$container = ctx.widget.element,\n\t\t\tdfd,\n\t\t\t// calling context for root node\n\t\t\trootCtx = $.extend({}, ctx, {node: this.rootNode});\n\n\t\tif(tree.rootNode.children){\n\t\t\tthis.treeClear(ctx);\n\t\t}\n\t\tsource = source || this.options.source;\n\n\t\tif(!source){\n\t\t\ttype = $container.data(\"type\") || \"html\";\n\t\t\tswitch(type){\n\t\t\tcase \"html\":\n\t\t\t\t$ul = $container.find(\">ul:first\");\n\t\t\t\t$ul.addClass(\"ui-fancytree-source ui-helper-hidden\");\n\t\t\t\tsource = $.ui.fancytree.parseHtml($ul);\n\t\t\t\t// allow to init tree.data.foo from <ul data-foo=''>\n\t\t\t\tthis.data = $.extend(this.data, _getElementDataAsDict($ul));\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tsource = $.parseJSON($container.text());\n\t\t\t\t// $container already contains the <ul>, but we remove the plain (json) text\n\t\t\t\t// $container.empty();\n\t\t\t\t$container.contents().filter(function(){\n\t\t\t\t\treturn (this.nodeType === 3);\n\t\t\t\t}).remove();\n\t\t\t\tif( $.isPlainObject(source) ){\n\t\t\t\t\t// We got {foo: 'abc', children: [...]}\n\t\t\t\t\t_assert($.isArray(source.children), \"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\");\n\t\t\t\t\tmetaData = source;\n\t\t\t\t\tsource = source.children;\n\t\t\t\t\tdelete metaData.children;\n\t\t\t\t\t// Copy some attributes to tree.data\n\t\t\t\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\t\t\t\tif( metaData[attr] !== undefined ){\n\t\t\t\t\t\t\ttree[attr] = metaData[attr];\n\t\t\t\t\t\t\tdelete metaData[attr];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// Copy extra properties to tree.data.foo\n\t\t\t\t\t$.extend(tree.data, metaData);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$.error(\"Invalid data-type: \" + type);\n\t\t\t}\n\t\t}else if(typeof source === \"string\"){\n\t\t\t// TODO: source is an element ID\n\t\t\t$.error(\"Not implemented\");\n\t\t}\n\n\t\t// Trigger fancytreeinit after nodes have been loaded\n\t\tdfd = this.nodeLoadChildren(rootCtx, source).done(function(){\n\t\t\ttree.render();\n\t\t\tif( ctx.options.selectMode === 3 ){\n\t\t\t\ttree.rootNode.fixSelection3FromEndNodes();\n\t\t\t}\n\t\t\tif( tree.activeNode && tree.options.activeVisible ) {\n\t\t\t\ttree.activeNode.makeVisible();\n\t\t\t}\n\t\t\ttree._triggerTreeEvent(\"init\", null, { status: true });\n\t\t}).fail(function(){\n\t\t\ttree.render();\n\t\t\ttree._triggerTreeEvent(\"init\", null, { status: false });\n\t\t});\n\t\treturn dfd;\n\t},\n\t/** Node was inserted into or removed from the tree.\n\t * @param {EventData} ctx\n\t * @param {boolean} add\n\t * @param {FancytreeNode} node\n\t */\n\ttreeRegisterNode: function(ctx, add, node) {\n\t},\n\t/** Widget got focus.\n\t * @param {EventData} ctx\n\t * @param {boolean} [flag=true]\n\t */\n\ttreeSetFocus: function(ctx, flag, callOpts) {\n\t\tvar targetNode;\n\n\t\tflag = (flag !== false);\n\n\t\t// this.debug(\"treeSetFocus(\" + flag + \"), callOpts: \", callOpts, this.hasFocus());\n\t\t// this.debug(\"    focusNode: \" + this.focusNode);\n\t\t// this.debug(\"    activeNode: \" + this.activeNode);\n\t\tif( flag !== this.hasFocus() ){\n\t\t\tthis._hasFocus = flag;\n\t\t\tif( !flag && this.focusNode ) {\n\t\t\t\t// Node also looses focus if widget blurs\n\t\t\t\tthis.focusNode.setFocus(false);\n\t\t\t} else if ( flag && (!callOpts || !callOpts.calledByNode) ) {\n\t\t\t\t$(this.$container).focus();\n\t\t\t}\n\t\t\tthis.$container.toggleClass(\"fancytree-treefocus\", flag);\n\t\t\tthis._triggerTreeEvent(flag ? \"focusTree\" : \"blurTree\");\n\t\t\tif( flag && !this.activeNode ) {\n\t\t\t\t// #712: Use last mousedowned node ('click' event fires after focusin)\n\t\t\t\ttargetNode = this._lastMousedownNode || this.getFirstChild();\n\t\t\t\ttargetNode && targetNode.setFocus();\n\t\t\t}\n\t\t}\n\t},\n\t/** Widget option was set using `$().fancytree(\"option\", \"foo\", \"bar\")`.\n\t * @param {EventData} ctx\n\t * @param {string} key option name\n\t * @param {any} value option value\n\t */\n\ttreeSetOption: function(ctx, key, value) {\n\t\tvar tree = ctx.tree,\n\t\t\tcallDefault = true,\n\t\t\tcallCreate = false,\n\t\t\tcallRender = false;\n\n\t\tswitch( key ) {\n\t\tcase \"aria\":\n\t\tcase \"checkbox\":\n\t\tcase \"icon\":\n\t\tcase \"minExpandLevel\":\n\t\tcase \"tabindex\":\n\t\t\t// tree._callHook(\"treeCreate\", tree);\n\t\t\tcallCreate = true;\n\t\t\tcallRender = true;\n\t\t\tbreak;\n\t\tcase \"escapeTitles\":\n\t\tcase \"tooltip\":\n\t\t\tcallRender = true;\n\t\t\tbreak;\n\t\tcase \"rtl\":\n\t\t\tif( value === false ) {\n\t\t\t\ttree.$container.removeAttr(\"DIR\").removeClass(\"fancytree-rtl\");\n\t\t\t}else{\n\t\t\t\ttree.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n\t\t\t}\n\t\t\tcallRender = true;\n\t\t\tbreak;\n\t\tcase \"source\":\n\t\t\tcallDefault = false;\n\t\t\ttree._callHook(\"treeLoad\", tree, value);\n\t\t\tcallRender = true;\n\t\t\tbreak;\n\t\t}\n\t\ttree.debug(\"set option \" + key + \"=\" + value + \" <\" + typeof(value) + \">\");\n\t\tif(callDefault){\n\t\t\tif( this.widget._super ) {\n\t\t\t\t// jQuery UI 1.9+\n\t\t\t\tthis.widget._super.call( this.widget, key, value );\n\t\t\t} else {\n\t\t\t\t// jQuery UI <= 1.8, we have to manually invoke the _setOption method from the base widget\n\t\t\t\t$.Widget.prototype._setOption.call(this.widget, key, value);\n\t\t\t}\n\t\t}\n\t\tif(callCreate){\n\t\t\ttree._callHook(\"treeCreate\", tree);\n\t\t}\n\t\tif(callRender){\n\t\t\ttree.render(true, false);  // force, not-deep\n\t\t}\n\t}\n});\n\n\n/* ******************************************************************************\n * jQuery UI widget boilerplate\n */\n\n/**\n * The plugin (derrived from <a href=\" http://api.jqueryui.com/jQuery.widget/\">jQuery.Widget</a>).<br>\n * This constructor is not called directly. Use `$(selector).fancytree({})`\n * to initialize the plugin instead.<br>\n * <pre class=\"sh_javascript sunlight-highlight-javascript\">// Access widget methods and members:\n * var tree = $(\"#tree\").fancytree(\"getTree\");\n * var node = $(\"#tree\").fancytree(\"getActiveNode\", \"1234\");\n * </pre>\n *\n * @mixin Fancytree_Widget\n */\n\n$.widget(\"ui.fancytree\",\n\t/** @lends Fancytree_Widget# */\n\t{\n\t/**These options will be used as defaults\n\t * @type {FancytreeOptions}\n\t */\n\toptions:\n\t{\n\t\tactiveVisible: true,\n\t\tajax: {\n\t\t\ttype: \"GET\",\n\t\t\tcache: false, // false: Append random '_' argument to the request url to prevent caching.\n//          timeout: 0, // >0: Make sure we get an ajax error if server is unreachable\n\t\t\tdataType: \"json\" // Expect json format and pass json object to callbacks.\n\t\t},  //\n\t\taria: true,\n\t\tautoActivate: true,\n\t\tautoCollapse: false,\n\t\tautoScroll: false,\n\t\tcheckbox: false,\n\t\tclickFolderMode: 4,\n\t\tdebugLevel: null, // 0..2 (null: use global setting $.ui.fancytree.debugInfo)\n\t\tdisabled: false, // TODO: required anymore?\n\t\tenableAspx: true,\n\t\tescapeTitles: false,\n\t\textensions: [],\n\t\t// fx: { height: \"toggle\", duration: 200 },\n\t\t// toggleEffect: { effect: \"drop\", options: {direction: \"left\"}, duration: 200 },\n\t\t// toggleEffect: { effect: \"slide\", options: {direction: \"up\"}, duration: 200 },\n\t\ttoggleEffect: { effect: \"blind\", options: {direction: \"vertical\", scale: \"box\"}, duration: 200 },\n\t\tgenerateIds: false,\n\t\ticon: true,\n\t\tidPrefix: \"ft_\",\n\t\tfocusOnSelect: false,\n\t\tkeyboard: true,\n\t\tkeyPathSeparator: \"/\",\n\t\tminExpandLevel: 1,\n\t\tquicksearch: false,\n\t\trtl: false,\n\t\tscrollOfs: {top: 0, bottom: 0},\n\t\tscrollParent: null,\n\t\tselectMode: 2,\n\t\tstrings: {\n\t\t\tloading: \"Loading...\",  // &#8230; would be escaped when escapeTitles is true\n\t\t\tloadError: \"Load error!\",\n\t\t\tmoreData: \"More...\",\n\t\t\tnoData: \"No data.\"\n\t\t},\n\t\ttabindex: \"0\",\n\t\ttitlesTabbable: false,\n\t\ttooltip: false,\n\t\t_classNames: {\n\t\t\tnode: \"fancytree-node\",\n\t\t\tfolder: \"fancytree-folder\",\n\t\t\tanimating: \"fancytree-animating\",\n\t\t\tcombinedExpanderPrefix: \"fancytree-exp-\",\n\t\t\tcombinedIconPrefix: \"fancytree-ico-\",\n\t\t\thasChildren: \"fancytree-has-children\",\n\t\t\tactive: \"fancytree-active\",\n\t\t\tselected: \"fancytree-selected\",\n\t\t\texpanded: \"fancytree-expanded\",\n\t\t\tlazy: \"fancytree-lazy\",\n\t\t\tfocused: \"fancytree-focused\",\n\t\t\tpartload: \"fancytree-partload\",\n\t\t\tpartsel: \"fancytree-partsel\",\n\t\t\tradio: \"fancytree-radio\",\n\t\t\t// radiogroup: \"fancytree-radiogroup\",\n\t\t\tunselectable: \"fancytree-unselectable\",\n\t\t\tlastsib: \"fancytree-lastsib\",\n\t\t\tloading: \"fancytree-loading\",\n\t\t\terror: \"fancytree-error\",\n\t\t\tstatusNodePrefix: \"fancytree-statusnode-\"\n\t\t},\n\t\t// events\n\t\tlazyLoad: null,\n\t\tpostProcess: null\n\t},\n\t/* Set up the widget, Called on first $().fancytree() */\n\t_create: function() {\n\t\tthis.tree = new Fancytree(this);\n\n\t\tthis.$source = this.source || this.element.data(\"type\") === \"json\" ? this.element\n\t\t\t: this.element.find(\">ul:first\");\n\t\t// Subclass Fancytree instance with all enabled extensions\n\t\tvar extension, extName, i,\n\t\t\topts = this.options,\n\t\t\textensions = opts.extensions,\n\t\t\tbase = this.tree;\n\n\t\tfor(i=0; i<extensions.length; i++){\n\t\t\textName = extensions[i];\n\t\t\textension = $.ui.fancytree._extensions[extName];\n\t\t\tif(!extension){\n\t\t\t\t$.error(\"Could not apply extension '\" + extName + \"' (it is not registered, did you forget to include it?)\");\n\t\t\t}\n\t\t\t// Add extension options as tree.options.EXTENSION\n//\t\t\t_assert(!this.tree.options[extName], \"Extension name must not exist as option name: \" + extName);\n\t\t\tthis.tree.options[extName] = $.extend(true, {}, extension.options, this.tree.options[extName]);\n\t\t\t// Add a namespace tree.ext.EXTENSION, to hold instance data\n\t\t\t_assert(this.tree.ext[extName] === undefined, \"Extension name must not exist as Fancytree.ext attribute: '\" + extName + \"'\");\n//\t\t\tthis.tree[extName] = extension;\n\t\t\tthis.tree.ext[extName] = {};\n\t\t\t// Subclass Fancytree methods using proxies.\n\t\t\t_subclassObject(this.tree, base, extension, extName);\n\t\t\t// current extension becomes base for the next extension\n\t\t\tbase = extension;\n\t\t}\n\t\t//\n\t\tif( opts.icons !== undefined ) {  // 2015-11-16\n\t\t\tif( opts.icon !== true ) {\n\t\t\t\t$.error(\"'icons' tree option is deprecated since v2.14.0: use 'icon' only instead\");\n\t\t\t} else {\n\t\t\t\tthis.tree.warn(\"'icons' tree option is deprecated since v2.14.0: use 'icon' instead\");\n\t\t\t\topts.icon = opts.icons;\n\t\t\t}\n\t\t}\n\t\tif( opts.iconClass !== undefined ) {  // 2015-11-16\n\t\t\tif( opts.icon ) {\n\t\t\t\t$.error(\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead\");\n\t\t\t} else {\n\t\t\t\tthis.tree.warn(\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead\");\n\t\t\t\topts.icon = opts.iconClass;\n\t\t\t}\n\t\t}\n\t\tif( opts.tabbable !== undefined ) {  // 2016-04-04\n\t\t\topts.tabindex = opts.tabbable ? \"0\" : \"-1\";\n\t\t\tthis.tree.warn(\"'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='\" + opts.tabindex + \"' instead\");\n\t\t}\n\t\t//\n\t\tthis.tree._callHook(\"treeCreate\", this.tree);\n\t\t// Note: 'fancytreecreate' event is fired by widget base class\n//        this.tree._triggerTreeEvent(\"create\");\n\t},\n\n\t/* Called on every $().fancytree() */\n\t_init: function() {\n\t\tthis.tree._callHook(\"treeInit\", this.tree);\n\t\t// TODO: currently we call bind after treeInit, because treeInit\n\t\t// might change tree.$container.\n\t\t// It would be better, to move event binding into hooks altogether\n\t\tthis._bind();\n\t},\n\n\t/* Use the _setOption method to respond to changes to options */\n\t_setOption: function(key, value) {\n\t\treturn this.tree._callHook(\"treeSetOption\", this.tree, key, value);\n\t},\n\n\t/** Use the destroy method to clean up any modifications your widget has made to the DOM */\n\tdestroy: function() {\n\t\tthis._unbind();\n\t\tthis.tree._callHook(\"treeDestroy\", this.tree);\n\t\t// In jQuery UI 1.8, you must invoke the destroy method from the base widget\n\t\t$.Widget.prototype.destroy.call(this);\n\t\t// TODO: delete tree and nodes to make garbage collect easier?\n\t\t// TODO: In jQuery UI 1.9 and above, you would define _destroy instead of destroy and not call the base method\n\t},\n\n\t// -------------------------------------------------------------------------\n\n\t/* Remove all event handlers for our namespace */\n\t_unbind: function() {\n\t\tvar ns = this.tree._ns;\n\t\tthis.element.off(ns);\n\t\tthis.tree.$container.off(ns);\n\t\t$(document).off(ns);\n\t},\n\t/* Add mouse and kyboard handlers to the container */\n\t_bind: function() {\n\t\tvar that = this,\n\t\t\topts = this.options,\n\t\t\ttree = this.tree,\n\t\t\tns = tree._ns\n\t\t\t// selstartEvent = ( $.support.selectstart ? \"selectstart\" : \"mousedown\" )\n\t\t\t;\n\n\t\t// Remove all previuous handlers for this tree\n\t\tthis._unbind();\n\n\t\t//alert(\"keydown\" + ns + \"foc=\" + tree.hasFocus() + tree.$container);\n\t\t// tree.debug(\"bind events; container: \", tree.$container);\n\t\ttree.$container.on(\"focusin\" + ns + \" focusout\" + ns, function(event){\n\t\t\tvar node = FT.getNode(event),\n\t\t\t\tflag = (event.type === \"focusin\");\n\n\t\t\t// tree.treeOnFocusInOut.call(tree, event);\n\t\t\t// tree.debug(\"Tree container got event \" + event.type, node, event, FT.getEventTarget(event));\n\t\t\tif( flag && tree._getExpiringValue(\"focusin\") ) {\n\t\t\t\t// #789: IE 11 may send duplicate focusin events\n\t\t\t\tFT.info(\"Ignored double focusin.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttree._setExpiringValue(\"focusin\", true, 50);\n\n\t\t\tif( flag && !node ) {\n\t\t\t\t// #789: IE 11 may send focusin before mousdown(?)\n\t\t\t\tnode = tree._getExpiringValue(\"mouseDownNode\");\n\t\t\t\tif( node ) { FT.info(\"Reconstruct mouse target for focusin from recent event.\"); }\n\t\t\t}\n\t\t\tif(node){\n\t\t\t\t// For example clicking into an <input> that is part of a node\n\t\t\t\ttree._callHook(\"nodeSetFocus\", tree._makeHookContext(node, event), flag);\n\t\t\t}else{\n\t\t\t\tif( tree.tbody && $(event.target).parents(\"table.fancytree-container > thead\").length ) {\n\t\t\t\t\t// #767: ignore events in the table's header\n\t\t\t\t\ttree.debug(\"Ignore focus event outside table body.\", event);\n\t\t\t\t} else {\n\t\t\t\t\ttree._callHook(\"treeSetFocus\", tree, flag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).on(\"selectstart\" + ns, \"span.fancytree-title\", function(event){\n\t\t\t// prevent mouse-drags to select text ranges\n\t\t\t// tree.debug(\"<span title> got event \" + event.type);\n\t\t\tevent.preventDefault();\n\n\t\t}).on(\"keydown\" + ns, function(event){\n\t\t\t// TODO: also bind keyup and keypress\n\t\t\t// tree.debug(\"got event \" + event.type + \", hasFocus:\" + tree.hasFocus());\n\t\t\t// if(opts.disabled || opts.keyboard === false || !tree.hasFocus() ){\n\t\t\tif(opts.disabled || opts.keyboard === false ){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar res,\n\t\t\t\tnode = tree.focusNode, // node may be null\n\t\t\t\tctx = tree._makeHookContext(node || tree, event),\n\t\t\t\tprevPhase = tree.phase;\n\n\t\t\ttry {\n\t\t\t\ttree.phase = \"userEvent\";\n\t\t\t\t// If a 'fancytreekeydown' handler returns false, skip the default\n\t\t\t\t// handling (implemented by tree.nodeKeydown()).\n\t\t\t\tif(node){\n\t\t\t\t\tres = tree._triggerNodeEvent(\"keydown\", node, event);\n\t\t\t\t}else{\n\t\t\t\t\tres = tree._triggerTreeEvent(\"keydown\", event);\n\t\t\t\t}\n\t\t\t\tif ( res === \"preventNav\" ){\n\t\t\t\t\tres = true; // prevent keyboard navigation, but don't prevent default handling of embedded input controls\n\t\t\t\t} else if ( res !== false ){\n\t\t\t\t\tres = tree._callHook(\"nodeKeydown\", ctx);\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t} finally {\n\t\t\t\ttree.phase = prevPhase;\n\t\t\t}\n\n\t\t}).on(\"mousedown\" + ns, function(event){\n\t\t\tvar et = FT.getEventTarget(event);\n\t\t\t// that.tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n\t\t\t// #712: Store the clicked node, so we can use it when we get a focusin event\n\t\t\t//       ('click' event fires after focusin)\n\t\t\t// tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n\t\t\ttree._lastMousedownNode = et ? et.node : null;\n\t\t\t// #789: Store the node also for a short period, so we can use it\n\t\t\t// in a *resulting* focusin event\n\t\t\ttree._setExpiringValue(\"mouseDownNode\", tree._lastMousedownNode);\n\n\t\t}).on(\"click\" + ns + \" dblclick\" + ns, function(event){\n\t\t\tif(opts.disabled){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar ctx,\n\t\t\t\tet = FT.getEventTarget(event),\n\t\t\t\tnode = et.node,\n\t\t\t\ttree = that.tree,\n\t\t\t\tprevPhase = tree.phase;\n\n\t\t\t// that.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\t\t\tif( !node ){\n\t\t\t\treturn true;  // Allow bubbling of other events\n\t\t\t}\n\t\t\tctx = tree._makeHookContext(node, event);\n\t\t\t// that.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\t\t\ttry {\n\t\t\t\ttree.phase = \"userEvent\";\n\t\t\t\tswitch(event.type) {\n\t\t\t\tcase \"click\":\n\t\t\t\t\tctx.targetType = et.type;\n\t\t\t\t\tif( node.isPagingNode() ) {\n\t\t\t\t\t\treturn tree._triggerNodeEvent(\"clickPaging\", ctx, event) === true;\n\t\t\t\t\t}\n\t\t\t\t\treturn ( tree._triggerNodeEvent(\"click\", ctx, event) === false ) ? false : tree._callHook(\"nodeClick\", ctx);\n\t\t\t\tcase \"dblclick\":\n\t\t\t\t\tctx.targetType = et.type;\n\t\t\t\t\treturn ( tree._triggerNodeEvent(\"dblclick\", ctx, event) === false ) ? false : tree._callHook(\"nodeDblclick\", ctx);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttree.phase = prevPhase;\n\t\t\t}\n\t\t});\n\t},\n\t/** Return the active node or null.\n\t * @returns {FancytreeNode}\n\t */\n\tgetActiveNode: function() {\n\t\treturn this.tree.activeNode;\n\t},\n\t/** Return the matching node or null.\n\t * @param {string} key\n\t * @returns {FancytreeNode}\n\t */\n\tgetNodeByKey: function(key) {\n\t\treturn this.tree.getNodeByKey(key);\n\t},\n\t/** Return the invisible system root node.\n\t * @returns {FancytreeNode}\n\t */\n\tgetRootNode: function() {\n\t\treturn this.tree.rootNode;\n\t},\n\t/** Return the current tree instance.\n\t * @returns {Fancytree}\n\t */\n\tgetTree: function() {\n\t\treturn this.tree;\n\t}\n});\n\n// $.ui.fancytree was created by the widget factory. Create a local shortcut:\nFT = $.ui.fancytree;\n\n/**\n * Static members in the `$.ui.fancytree` namespace.<br>\n * <br>\n * <pre class=\"sh_javascript sunlight-highlight-javascript\">// Access static members:\n * var node = $.ui.fancytree.getNode(element);\n * alert($.ui.fancytree.version);\n * </pre>\n *\n * @mixin Fancytree_Static\n */\n$.extend($.ui.fancytree,\n\t/** @lends Fancytree_Static# */\n\t{\n\t/** @type {string} */\n\tversion: \"2.27.0\",      // Set to semver by 'grunt release'\n\t/** @type {string} */\n\tbuildType: \"production\", // Set to 'production' by 'grunt build'\n\t/** @type {int} */\n\tdebugLevel: 1,            // Set to 1 by 'grunt build'\n\t\t\t\t\t\t\t  // Used by $.ui.fancytree.debug() and as default for tree.options.debugLevel\n\n\t_nextId: 1,\n\t_nextNodeKey: 1,\n\t_extensions: {},\n\t// focusTree: null,\n\n\t/** Expose class object as $.ui.fancytree._FancytreeClass */\n\t_FancytreeClass: Fancytree,\n\t/** Expose class object as $.ui.fancytree._FancytreeNodeClass */\n\t_FancytreeNodeClass: FancytreeNode,\n\t/* Feature checks to provide backwards compatibility */\n\tjquerySupports: {\n\t\t// http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n\t\tpositionMyOfs: isVersionAtLeast($.ui.version, 1, 9)\n\t\t},\n\t/** Throw an error if condition fails (debug method).\n\t * @param {boolean} cond\n\t * @param {string} msg\n\t */\n\tassert: function(cond, msg){\n\t\treturn _assert(cond, msg);\n\t},\n\t/** Create a new Fancytree instance on a target element.\n\t *\n\t * @param {Element | jQueryObject | string} el Target DOM element or selector\n\t * @param {FancytreeOptions} [opts] Fancytree options\n\t * @returns {Fancytree} new tree instance\n\t * @example\n\t * var tree = $.ui.fancytree.createTree(\"#tree\", {\n\t *     source: {url: \"my/webservice\"}\n\t * }); // Create tree for this matching element\n\t *\n\t * @since 2.25\n\t */\n\tcreateTree: function(el, opts){\n\t\tvar tree = $(el).fancytree(opts).fancytree(\"getTree\");\n\t\treturn tree;\n\t},\n\t/** Return a function that executes *fn* at most every *timeout* ms.\n\t * @param {integer} timeout\n\t * @param {function} fn\n\t * @param {boolean} [invokeAsap=false]\n\t * @param {any} [ctx]\n\t */\n\tdebounce: function(timeout, fn, invokeAsap, ctx) {\n\t\tvar timer;\n\t\tif(arguments.length === 3 && typeof invokeAsap !== \"boolean\") {\n\t\t\tctx = invokeAsap;\n\t\t\tinvokeAsap = false;\n\t\t}\n\t\treturn function() {\n\t\t\tvar args = arguments;\n\t\t\tctx = ctx || this;\n\t\t\tinvokeAsap && !timer && fn.apply(ctx, args);\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = setTimeout(function() {\n\t\t\t\tinvokeAsap || fn.apply(ctx, args);\n\t\t\t\ttimer = null;\n\t\t\t}, timeout);\n\t\t};\n\t},\n\t/** Write message to console if debugLevel >= 2\n\t * @param {string} msg\n\t */\n\tdebug: function(msg){\n\t\t/*jshint expr:true */\n\t\t($.ui.fancytree.debugLevel >= 2) && consoleApply(\"log\", arguments);\n\t},\n\t/** Write error message to console.\n\t * @param {string} msg\n\t */\n\terror: function(msg){\n\t\tconsoleApply(\"error\", arguments);\n\t},\n\t/** Convert &lt;, &gt;, &amp;, &quot;, &#39;, &#x2F; to the equivalent entities.\n\t *\n\t * @param {string} s\n\t * @returns {string}\n\t */\n\tescapeHtml: function(s){\n\t\treturn (\"\" + s).replace(REX_HTML, function(s) {\n\t\t\treturn ENTITY_MAP[s];\n\t\t});\n\t},\n\t/** Make jQuery.position() arguments backwards compatible, i.e. if\n\t * jQuery UI version <= 1.8, convert\n\t *   { my: \"left+3 center\", at: \"left bottom\", of: $target }\n\t * to\n\t *   { my: \"left center\", at: \"left bottom\", of: $target, offset: \"3  0\" }\n\t *\n\t * See http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n\t * and http://jsfiddle.net/mar10/6xtu9a4e/\n\t */\n\tfixPositionOptions: function(opts) {\n\t\tif( opts.offset || (\"\" + opts.my + opts.at ).indexOf(\"%\") >= 0 ) {\n\t\t   $.error(\"expected new position syntax (but '%' is not supported)\");\n\t\t}\n\t\tif( ! $.ui.fancytree.jquerySupports.positionMyOfs ) {\n\t\t\tvar // parse 'left+3 center' into ['left+3 center', 'left', '+3', 'center', undefined]\n\t\t\t\tmyParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(opts.my),\n\t\t\t\tatParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(opts.at),\n\t\t\t\t// convert to numbers\n\t\t\t\tdx = (myParts[2] ? (+myParts[2]) : 0) + (atParts[2] ? (+atParts[2]) : 0),\n\t\t\t\tdy = (myParts[4] ? (+myParts[4]) : 0) + (atParts[4] ? (+atParts[4]) : 0);\n\n\t\t\topts = $.extend({}, opts, { // make a copy and overwrite\n\t\t\t\tmy: myParts[1] + \" \" + myParts[3],\n\t\t\t\tat: atParts[1] + \" \" + atParts[3]\n\t\t\t});\n\t\t\tif( dx || dy ) {\n\t\t\t\topts.offset = \"\" + dx + \" \" + dy;\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\t/** Return a {node: FancytreeNode, type: TYPE} object for a mouse event.\n\t *\n\t * @param {Event} event Mouse event, e.g. click, ...\n\t * @returns {object} Return a {node: FancytreeNode, type: TYPE} object\n\t *     TYPE: 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n\t */\n\tgetEventTarget: function(event){\n\t\tvar tcn = event && event.target ? event.target.className : \"\",\n\t\t\tres = {node: this.getNode(event.target), type: undefined};\n\t\t// We use a fast version of $(res.node).hasClass()\n\t\t// See http://jsperf.com/test-for-classname/2\n\t\tif( /\\bfancytree-title\\b/.test(tcn) ){\n\t\t\tres.type = \"title\";\n\t\t}else if( /\\bfancytree-expander\\b/.test(tcn) ){\n\t\t\tres.type = (res.node.hasChildren() === false ? \"prefix\" : \"expander\");\n\t\t// }else if( /\\bfancytree-checkbox\\b/.test(tcn) || /\\bfancytree-radio\\b/.test(tcn) ){\n\t\t}else if( /\\bfancytree-checkbox\\b/.test(tcn) ){\n\t\t\tres.type = \"checkbox\";\n\t\t}else if( /\\bfancytree(-custom)?-icon\\b/.test(tcn) ){\n\t\t\tres.type = \"icon\";\n\t\t}else if( /\\bfancytree-node\\b/.test(tcn) ){\n\t\t\t// Somewhere near the title\n\t\t\tres.type = \"title\";\n\t\t}else if( event && $(event.target).is(\"ul[role=group]\") ) {\n\t\t\t// #nnn: Clicking right to a node may hit the surrounding UL\n\t\t\tFT.info(\"Ignoring click on outer UL.\");\n\t\t\tres.node = null;\n\t\t}else if( event && event.target && $(event.target).closest(\".fancytree-title\").length ) {\n\t\t\t// #228: clicking an embedded element inside a title\n\t\t\tres.type = \"title\";\n\t\t}\n\t\treturn res;\n\t},\n\t/** Return a string describing the affected node region for a mouse event.\n\t *\n\t * @param {Event} event Mouse event, e.g. click, mousemove, ...\n\t * @returns {string} 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n\t */\n\tgetEventTargetType: function(event){\n\t\treturn this.getEventTarget(event).type;\n\t},\n\t/** Return a FancytreeNode instance from element, event, or jQuery object.\n\t *\n\t * @param {Element | jQueryObject | Event} el\n\t * @returns {FancytreeNode} matching node or null\n\t */\n\tgetNode: function(el){\n\t\tif(el instanceof FancytreeNode){\n\t\t\treturn el; // el already was a FancytreeNode\n\t\t}else if( el instanceof $ ){\n\t\t\tel = el[0]; // el was a jQuery object: use the DOM element\n\t\t}else if(el.originalEvent !== undefined){\n\t\t\tel = el.target; // el was an Event\n\t\t}\n\t\twhile( el ) {\n\t\t\tif(el.ftnode) {\n\t\t\t\treturn el.ftnode;\n\t\t\t}\n\t\t\tel = el.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t/** Return a Fancytree instance, from element, index, event, or jQueryObject.\n\t *\n\t * @param {Element | jQueryObject | Event | integer | string} [el]\n\t * @returns {Fancytree} matching tree or null\n\t * @example\n\t * $.ui.fancytree.getTree();   // Get first Fancytree instance on page\n\t * $.ui.fancytree.getTree(1);  // Get second Fancytree instance on page\n\t * $.ui.fancytree.getTree(\"#tree\"); // Get tree for this matching element\n\t *\n\t * @since 2.13\n\t */\n\tgetTree: function(el){\n\t\tvar widget;\n\n\t\tif( el instanceof Fancytree ) {\n\t\t\treturn el; // el already was a Fancytree\n\t\t}\n\t\tif( el === undefined ) {\n\t\t\tel = 0;  // get first tree\n\t\t}\n\t\tif( typeof el === \"number\" ) {\n\t\t\tel = $(\".fancytree-container\").eq(el); // el was an integer: return nth instance\n\t\t} else if( typeof el === \"string\" ) {\n\t\t\tel = $(el).eq(0); // el was a selector: use first match\n\t\t} else if( el.selector !== undefined ) {\n\t\t\tel = el.eq(0); // el was a jQuery object: use the first DOM element\n\t\t} else if( el.originalEvent !== undefined ) {\n\t\t\tel = $(el.target); // el was an Event\n\t\t}\n\t\tel = el.closest(\":ui-fancytree\");\n\t\twidget = el.data(\"ui-fancytree\") || el.data(\"fancytree\"); // the latter is required by jQuery <= 1.8\n\t\treturn widget ? widget.tree : null;\n\t},\n\t/** Return an option value that has a default, but may be overridden by a\n\t * callback or a node instance attribute.\n\t *\n\t * Evaluation sequence:<br>\n\t *\n\t * If tree.options.<optionName> is a callback that returns something, use that.<br>\n\t * Else if node.<optionName> is defined, use that.<br>\n\t * Else if tree.options.<optionName> is a value, use that.<br>\n\t * Else use `defaultValue`.\n\t *\n\t * @param {string} optionName name of the option property (on node and tree)\n\t * @param {FancytreeNode} node passed to the callback\n\t * @param {object} nodeObject where to look for the local option property, e.g. `node` or `node.data`\n\t * @param {object} treeOption where to look for the tree option, e.g. `tree.options` or `tree.options.dnd5`\n\t * @param {any} [defaultValue]\n\t * @returns {any}\n\t *\n\t * @example\n\t * // Check for node.foo, tree,options.foo(), and tree.options.foo:\n\t * $.ui.fancytree.evalOption(\"foo\", node, node, tree.options);\n\t * // Check for node.data.bar, tree,options.qux.bar(), and tree.options.qux.bar:\n\t * $.ui.fancytree.evalOption(\"bar\", node, node.data, tree.options.qux);\n\t *\n\t * @since 2.22\n\t */\n\tevalOption: function(optionName, node, nodeObject, treeOptions, defaultValue) {\n\t\tvar ctx, res,\n\t\t\ttree = node.tree,\n\t\t\ttreeOpt = treeOptions[optionName],\n\t\t\tnodeOpt = nodeObject[optionName];\n\n\t\tif( $.isFunction(treeOpt) ) {\n\t\t\tctx = {\n\t\t\t\tnode: node, tree: tree, widget: tree.widget, options: tree.widget.options,\n\t\t\t\ttypeInfo: tree.types[node.type] || {}\n\t\t\t\t};\n\t\t\tres = treeOpt.call(tree, {type: optionName}, ctx);\n\t\t\tif( res == null ) {\n\t\t\t\tres = nodeOpt;\n\t\t\t}\n\t\t} else {\n\t\t\tres = (nodeOpt != null) ? nodeOpt : treeOpt;\n\t\t}\n\t\tif( res == null ) {\n\t\t\tres = defaultValue;  // no option set at all: return default\n\t\t}\n\t\treturn res;\n\t},\n\t/** Set expander, checkbox, or node icon, supporting string and object format.\n\t *\n\t * @param {Element | jQueryObject} span\n\t * @param {string} baseClass\n\t * @param {string | object} icon\n\t * @since 2.27\n\t */\n\tsetSpanIcon: function( span, baseClass, icon ) {\n\t\tvar $span = $( span );\n\n\t\tif( typeof icon === \"string\" ) {\n\t\t\t$span.attr( \"class\", baseClass + \" \" + icon );\n\t\t} else {  // support object syntax: { text: ligature, addClasse: classname }\n\t\t\tif( icon.text ) {\n\t\t\t\t$span.text( \"\" + icon.text );\n\t\t\t}\n\t\t\t$span.attr( \"class\", baseClass + \" \" + ( icon.addClass || \"\" ) );\n\t\t}\n\t},\n\t/** Convert a keydown or mouse event to a canonical string like 'ctrl+a',\n\t * 'ctrl+shift+f2', 'shift+leftdblclick'.\n\t *\n\t * This is especially handy for switch-statements in event handlers.\n\t *\n\t * @param {event}\n\t * @returns {string}\n\t *\n\t * @example\n\n\tswitch( $.ui.fancytree.eventToString(event) ) {\n\t\tcase \"-\":\n\t\t\ttree.nodeSetExpanded(ctx, false);\n\t\t\tbreak;\n\t\tcase \"shift+return\":\n\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\tbreak;\n\t\tcase \"down\":\n\t\t\tres = node.navigate(event.which, activate, true);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\thandled = false;\n\t}\n\tif( handled ){\n\t\tevent.preventDefault();\n\t}\n\t */\n\teventToString: function(event) {\n\t\t// Poor-man's hotkeys. See here for a complete implementation:\n\t\t//   https://github.com/jeresig/jquery.hotkeys\n\t\tvar which = event.which,\n\t\t\tet = event.type,\n\t\t\ts = [];\n\n\t\tif( event.altKey ) { s.push(\"alt\"); }\n\t\tif( event.ctrlKey ) { s.push(\"ctrl\"); }\n\t\tif( event.metaKey ) { s.push(\"meta\"); }\n\t\tif( event.shiftKey ) { s.push(\"shift\"); }\n\n\t\tif( et === \"click\" || et === \"dblclick\" ) {\n\t\t\ts.push(MOUSE_BUTTONS[event.button] + et);\n\t\t} else {\n\t\t\tif( !IGNORE_KEYCODES[which] ) {\n\t\t\t\ts.push( SPECIAL_KEYCODES[which] || String.fromCharCode(which).toLowerCase() );\n\t\t\t}\n\t\t}\n\t\treturn s.join(\"+\");\n\t},\n\t/** Write message to console if debugLevel >= 1\n\t * @param {string} msg\n\t */\n\tinfo: function(msg){\n\t\t/*jshint expr:true */\n\t\t($.ui.fancytree.debugLevel >= 1) && consoleApply(\"info\", arguments);\n\t},\n\t/* @deprecated: use eventToString(event) instead.\n\t */\n\tkeyEventToString: function(event) {\n\t\tthis.warn(\"keyEventToString() is deprecated: use eventToString()\");\n\t\treturn this.eventToString(event);\n\t},\n\t/** Return a wrapped handler method, that provides `this.super`.\n\t *\n\t * @example\n\t\t// Implement `opts.createNode` event to add the 'draggable' attribute\n\t\t$.ui.fancytree.overrideMethod(ctx.options, \"createNode\", function(event, data) {\n\t\t\t// Default processing if any\n\t\t\tthis._super.apply(this, arguments);\n\t\t\t// Add 'draggable' attribute\n\t\t\tdata.node.span.draggable = true;\n\t\t});\n\t *\n\t * @param {object} instance\n\t * @param {string} methodName\n\t * @param {function} handler\n\t */\n\toverrideMethod: function(instance, methodName, handler){\n\t\tvar prevSuper,\n\t\t\t_super = instance[methodName] || $.noop;\n\n\t\t// context = context || this;\n\n\t\tinstance[methodName] = function() {\n\t\t\ttry {\n\t\t\t\tprevSuper = this._super;\n\t\t\t\tthis._super = _super;\n\t\t\t\treturn handler.apply(this, arguments);\n\t\t\t} finally {\n\t\t\t\tthis._super = prevSuper;\n\t\t\t}\n\t\t};\n\t},\n\t/**\n\t * Parse tree data from HTML <ul> markup\n\t *\n\t * @param {jQueryObject} $ul\n\t * @returns {NodeData[]}\n\t */\n\tparseHtml: function($ul) {\n\t\t// TODO: understand this:\n\t\t/*jshint validthis:true */\n\t\tvar classes, className, extraClasses, i, iPos, l, tmp, tmp2,\n\t\t\t$children = $ul.find(\">li\"),\n\t\t\tchildren = [];\n\n\t\t$children.each(function() {\n\t\t\tvar allData, lowerCaseAttr,\n\t\t\t\t$li = $(this),\n\t\t\t\t$liSpan = $li.find(\">span:first\", this),\n\t\t\t\t$liA = $liSpan.length ? null : $li.find(\">a:first\"),\n\t\t\t\td = { tooltip: null, data: {} };\n\n\t\t\tif( $liSpan.length ) {\n\t\t\t\td.title = $liSpan.html();\n\n\t\t\t} else if( $liA && $liA.length ) {\n\t\t\t\t// If a <li><a> tag is specified, use it literally and extract href/target.\n\t\t\t\td.title = $liA.html();\n\t\t\t\td.data.href = $liA.attr(\"href\");\n\t\t\t\td.data.target = $liA.attr(\"target\");\n\t\t\t\td.tooltip = $liA.attr(\"title\");\n\n\t\t\t} else {\n\t\t\t\t// If only a <li> tag is specified, use the trimmed string up to\n\t\t\t\t// the next child <ul> tag.\n\t\t\t\td.title = $li.html();\n\t\t\t\tiPos = d.title.search(/<ul/i);\n\t\t\t\tif( iPos >= 0 ){\n\t\t\t\t\td.title = d.title.substring(0, iPos);\n\t\t\t\t}\n\t\t\t}\n\t\t\td.title = $.trim(d.title);\n\n\t\t\t// Make sure all fields exist\n\t\t\tfor(i=0, l=CLASS_ATTRS.length; i<l; i++){\n\t\t\t\td[CLASS_ATTRS[i]] = undefined;\n\t\t\t}\n\t\t\t// Initialize to `true`, if class is set and collect extraClasses\n\t\t\tclasses = this.className.split(\" \");\n\t\t\textraClasses = [];\n\t\t\tfor(i=0, l=classes.length; i<l; i++){\n\t\t\t\tclassName = classes[i];\n\t\t\t\tif(CLASS_ATTR_MAP[className]){\n\t\t\t\t\td[className] = true;\n\t\t\t\t}else{\n\t\t\t\t\textraClasses.push(className);\n\t\t\t\t}\n\t\t\t}\n\t\t\td.extraClasses = extraClasses.join(\" \");\n\n\t\t\t// Parse node options from ID, title and class attributes\n\t\t\ttmp = $li.attr(\"title\");\n\t\t\tif( tmp ){\n\t\t\t\td.tooltip = tmp; // overrides <a title='...'>\n\t\t\t}\n\t\t\ttmp = $li.attr(\"id\");\n\t\t\tif( tmp ){\n\t\t\t\td.key = tmp;\n\t\t\t}\n\t\t\t// Translate hideCheckbox -> checkbox:false\n\t\t\tif( $li.attr(\"hideCheckbox\") ){\n\t\t\t\td.checkbox = false;\n\t\t\t}\n\t\t\t// Add <li data-NAME='...'> as node.data.NAME\n\t\t\tallData = _getElementDataAsDict($li);\n\t\t\tif( allData && !$.isEmptyObject(allData) ) {\n\t\t\t\t// #507: convert data-hidecheckbox (lower case) to hideCheckbox\n\t\t\t\tfor( lowerCaseAttr in NODE_ATTR_LOWERCASE_MAP ) {\n\t\t\t\t\tif( allData.hasOwnProperty(lowerCaseAttr) ) {\n\t\t\t\t\t\tallData[NODE_ATTR_LOWERCASE_MAP[lowerCaseAttr]] = allData[lowerCaseAttr];\n\t\t\t\t\t\tdelete allData[lowerCaseAttr];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// #56: Allow to set special node.attributes from data-...\n\t\t\t\tfor(i=0, l=NODE_ATTRS.length; i<l; i++){\n\t\t\t\t\ttmp = NODE_ATTRS[i];\n\t\t\t\t\ttmp2 = allData[tmp];\n\t\t\t\t\tif( tmp2 != null ) {\n\t\t\t\t\t\tdelete allData[tmp];\n\t\t\t\t\t\td[tmp] = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// All other data-... goes to node.data...\n\t\t\t\t$.extend(d.data, allData);\n\t\t\t}\n\t\t\t// Recursive reading of child nodes, if LI tag contains an UL tag\n\t\t\t$ul = $li.find(\">ul:first\");\n\t\t\tif( $ul.length ) {\n\t\t\t\td.children = $.ui.fancytree.parseHtml($ul);\n\t\t\t}else{\n\t\t\t\td.children = d.lazy ? undefined : null;\n\t\t\t}\n\t\t\tchildren.push(d);\n//            FT.debug(\"parse \", d, children);\n\t\t});\n\t\treturn children;\n\t},\n\t/** Add Fancytree extension definition to the list of globally available extensions.\n\t *\n\t * @param {object} definition\n\t */\n\tregisterExtension: function(definition){\n\t\t_assert(definition.name != null, \"extensions must have a `name` property.\");\n\t\t_assert(definition.version != null, \"extensions must have a `version` property.\");\n\t\t$.ui.fancytree._extensions[definition.name] = definition;\n\t},\n\t/** Inverse of escapeHtml().\n\t *\n\t * @param {string} s\n\t * @returns {string}\n\t */\n\tunescapeHtml: function(s){\n\t\tvar e = document.createElement(\"div\");\n\t\te.innerHTML = s;\n\t\treturn e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n\t},\n\t/** Write warning message to console.\n\t * @param {string} msg\n\t */\n\twarn: function(msg){\n\t\tconsoleApply(\"warn\", arguments);\n\t}\n});\n\n// Value returned by `require('jquery.fancytree')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n// Extending Fancytree\n// ===================\n//\n// See also the [live demo](http://wwwendt.de/tech/fancytree/demo/sample-ext-childcounter.html) of this code.\n//\n// Every extension should have a comment header containing some information\n// about the author, copyright and licensing. Also a pointer to the latest\n// source code.\n// Prefix with `/*!` so the comment is not removed by the minifier.\n\n/*!\n * jquery.fancytree.childcounter.js\n *\n * Add a child counter bubble to tree nodes.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n// To keep the global namespace clean, we wrap everything in a closure.\n// The UMD wrapper pattern defines the dependencies on jQuery and the\n// Fancytree core module, and makes sure that we can use the `require()`\n// syntax with package loaders.\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n// Consider to use [strict mode](http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/)\n\"use strict\";\n\n// The [coding guidelines](http://contribute.jquery.org/style-guide/js/)\n// require jshint compliance.\n// But for this sample, we want to allow unused variables for demonstration purpose.\n\n/*jshint unused:false */\n\n\n// Adding methods\n// --------------\n\n// New member functions can be added to the `Fancytree` class.\n// This function will be available for every tree instance:\n//\n//     var tree = $(\"#tree\").fancytree(\"getTree\");\n//     tree.countSelected(false);\n\n$.ui.fancytree._FancytreeClass.prototype.countSelected = function(topOnly){\n\tvar tree = this,\n\t\ttreeOptions = tree.options;\n\n\treturn tree.getSelectedNodes(topOnly).length;\n};\n\n\n// The `FancytreeNode` class can also be easily extended. This would be called\n// like\n//     node.updateCounters();\n//\n// It is also good practice to add a docstring comment.\n/**\n * [ext-childcounter] Update counter badges for `node` and its parents.\n * May be called in the `loadChildren` event, to update parents of lazy loaded\n * nodes.\n * @alias FancytreeNode#updateCounters\n * @requires jquery.fancytree.childcounters.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.updateCounters = function(){\n\tvar node = this,\n\t\t$badge = $(\"span.fancytree-childcounter\", node.span),\n\t\textOpts = node.tree.options.childcounter,\n\t\tcount = node.countChildren(extOpts.deep);\n\n\tnode.data.childCounter = count;\n\tif( (count || !extOpts.hideZeros) && (!node.isExpanded() || !extOpts.hideExpanded) ) {\n\t\tif( !$badge.length ) {\n\t\t\t$badge = $(\"<span class='fancytree-childcounter'/>\").appendTo($(\"span.fancytree-icon\", node.span));\n\t\t}\n\t\t$badge.text(count);\n\t} else {\n\t\t$badge.remove();\n\t}\n\tif( extOpts.deep && !node.isTopLevel() && !node.isRoot() ) {\n\t\tnode.parent.updateCounters();\n\t}\n};\n\n\n// Finally, we can extend the widget API and create functions that are called\n// like so:\n//\n//     $(\"#tree\").fancytree(\"widgetMethod1\", \"abc\");\n\n$.ui.fancytree.prototype.widgetMethod1 = function(arg1){\n\tvar tree = this.tree;\n\treturn arg1;\n};\n\n\n// Register a Fancytree extension\n// ------------------------------\n// A full blown extension, extension is available for all trees and can be\n// enabled like so (see also the [live demo](http://wwwendt.de/tech/fancytree/demo/sample-ext-childcounter.html)):\n//\n//    <script src=\"../src/jquery.fancytree.js\"></script>\n//    <script src=\"../src/jquery.fancytree.childcounter.js\"></script>\n//    ...\n//\n//     $(\"#tree\").fancytree({\n//         extensions: [\"childcounter\"],\n//         childcounter: {\n//             hideExpanded: true\n//         },\n//         ...\n//     });\n//\n\n\n/* 'childcounter' extension */\n$.ui.fancytree.registerExtension({\n// Every extension must be registered by a unique name.\n\tname: \"childcounter\",\n// Version information should be compliant with [semver](http://semver.org)\n\tversion: \"2.27.0\",\n\n// Extension specific options and their defaults.\n// This options will be available as `tree.options.childcounter.hideExpanded`\n\n\toptions: {\n\t\tdeep: true,\n\t\thideZeros: true,\n\t\thideExpanded: false\n\t},\n\n// Attributes other than `options` (or functions) can be defined here, and\n// will be added to the tree.ext.EXTNAME namespace, in this case `tree.ext.childcounter.foo`.\n// They can also be accessed as `this._local.foo` from within the extension\n// methods.\n\tfoo: 42,\n\n// Local functions are prefixed with an underscore '_'.\n// Callable as `this._local._appendCounter()`.\n\n\t_appendCounter: function(bar){\n\t\tvar tree = this;\n\t},\n\n// **Override virtual methods for this extension.**\n//\n// Fancytree implements a number of 'hook methods', prefixed by 'node...' or 'tree...'.\n// with a `ctx` argument (see [EventData](http://www.wwwendt.de/tech/fancytree/doc/jsdoc/global.html#EventData)\n// for details) and an extended calling context:<br>\n// `this`       : the Fancytree instance<br>\n// `this._local`: the namespace that contains extension attributes and private methods (same as this.ext.EXTNAME)<br>\n// `this._super`: the virtual function that was overridden (member of previous extension or Fancytree)\n//\n// See also the [complete list of available hook functions](http://www.wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Hooks.html).\n\n\t/* Init */\n// `treeInit` is triggered when a tree is initalized. We can set up classes or\n// bind event handlers here...\n\ttreeInit: function(ctx){\n\t\tvar tree = this, // same as ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\textOpts = ctx.options.childcounter;\n// Optionally check for dependencies with other extensions\n\t\t/* this._requireExtension(\"glyph\", false, false); */\n// Call the base implementation\n\t\tthis._superApply(arguments);\n// Add a class to the tree container\n\t\tthis.$container.addClass(\"fancytree-ext-childcounter\");\n\t},\n\n// Destroy this tree instance (we only call the default implementation, so\n// this method could as well be omitted).\n\n\ttreeDestroy: function(ctx){\n\t\tthis._superApply(arguments);\n\t},\n\n// Overload the `renderTitle` hook, to append a counter badge\n\tnodeRenderTitle: function(ctx, title) {\n\t\tvar node = ctx.node,\n\t\t\textOpts = ctx.options.childcounter,\n\t\t\tcount = (node.data.childCounter == null) ? node.countChildren(extOpts.deep) : +node.data.childCounter;\n// Let the base implementation render the title\n// We use `_super()` instead of `_superApply()` here, since it is a little bit\n// more performant when called often\n\t\tthis._super(ctx, title);\n// Append a counter badge\n\t\tif( (count || ! extOpts.hideZeros) && (!node.isExpanded() || !extOpts.hideExpanded) ){\n\t\t\t$(\"span.fancytree-icon\", node.span).append($(\"<span class='fancytree-childcounter'/>\").text(count));\n\t\t}\n\t},\n// Overload the `setExpanded` hook, so the counters are updated\n\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\tvar tree = ctx.tree,\n\t\t\tnode = ctx.node;\n// Let the base implementation expand/collapse the node, then redraw the title\n// after the animation has finished\n\t\treturn this._superApply(arguments).always(function(){\n\t\t\ttree.nodeRenderTitle(ctx);\n\t\t});\n\t}\n\n// End of extension definition\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n *\n * jquery.fancytree.clones.js\n * Support faster lookup of nodes by key and shared ref-ids.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/*******************************************************************************\n * Private functions and variables\n */\nfunction _assert(cond, msg){\n\t// TODO: see qunit.js extractStacktrace()\n\tif(!cond){\n\t\tmsg = msg ? \": \" + msg : \"\";\n\t\t$.error(\"Assertion failed\" + msg);\n\t}\n}\n\n\n/* Return first occurrence of member from array. */\nfunction _removeArrayMember(arr, elem) {\n\t// TODO: use Array.indexOf for IE >= 9\n\tvar i;\n\tfor (i = arr.length - 1; i >= 0; i--) {\n\t\tif (arr[i] === elem) {\n\t\t\tarr.splice(i, 1);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// /**\n//  * Calculate a 32 bit FNV-1a hash\n//  * Found here: https://gist.github.com/vaiorabbit/5657561\n//  * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n//  *\n//  * @param {string} str the input value\n//  * @param {boolean} [asString=false] set to true to return the hash value as\n//  *     8-digit hex string instead of an integer\n//  * @param {integer} [seed] optionally pass the hash of the previous chunk\n//  * @returns {integer | string}\n//  */\n// function hashFnv32a(str, asString, seed) {\n// \t/*jshint bitwise:false */\n// \tvar i, l,\n// \t\thval = (seed === undefined) ? 0x811c9dc5 : seed;\n\n// \tfor (i = 0, l = str.length; i < l; i++) {\n// \t\thval ^= str.charCodeAt(i);\n// \t\thval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\n// \t}\n// \tif( asString ){\n// \t\t// Convert to 8 digit hex string\n// \t\treturn (\"0000000\" + (hval >>> 0).toString(16)).substr(-8);\n// \t}\n// \treturn hval >>> 0;\n// }\n\n\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} key ASCII only\n * @param {boolean} [asString=false]\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\nfunction hashMurmur3(key, asString, seed) {\n\t/*jshint bitwise:false */\n\tvar h1b, k1,\n\t\tremainder = key.length & 3,\n\t\tbytes = key.length - remainder,\n\t\th1 = seed,\n\t\tc1 = 0xcc9e2d51,\n\t\tc2 = 0x1b873593,\n\t\ti = 0;\n\n\twhile (i < bytes) {\n\t\tk1 =\n\t\t\t((key.charCodeAt(i) & 0xff)) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 8) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 16) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n\t\th1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\n\tk1 = 0;\n\n\tswitch (remainder) {\n\t\t/*jshint -W086:true */\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\tif( asString ){\n\t\t// Convert to 8 digit hex string\n\t\treturn (\"0000000\" + (h1 >>> 0).toString(16)).substr(-8);\n\t}\n\treturn h1 >>> 0;\n}\n\n// console.info(hashMurmur3(\"costarring\"));\n// console.info(hashMurmur3(\"costarring\", true));\n// console.info(hashMurmur3(\"liquid\"));\n// console.info(hashMurmur3(\"liquid\", true));\n\n\n/*\n * Return a unique key for node by calculationg the hash of the parents refKey-list\n */\nfunction calcUniqueKey(node) {\n\tvar key,\n\t\tpath = $.map(node.getParentList(false, true), function(e){ return e.refKey || e.key; });\n\tpath = path.join(\"/\");\n\tkey = \"id_\" + hashMurmur3(path, true);\n\t// node.debug(path + \" -> \" + key);\n\treturn key;\n}\n\n\n/**\n * [ext-clones] Return a list of clone-nodes or null.\n * @param {boolean} [includeSelf=false]\n * @returns {FancytreeNode[] | null}\n *\n * @alias FancytreeNode#getCloneList\n * @requires jquery.fancytree.clones.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.getCloneList = function(includeSelf){\n\tvar key,\n\t\ttree = this.tree,\n\t\trefList = tree.refMap[this.refKey] || null,\n\t\tkeyMap = tree.keyMap;\n\n\tif( refList ) {\n\t\tkey = this.key;\n\t\t// Convert key list to node list\n\t\tif( includeSelf ) {\n\t\t\trefList = $.map(refList, function(val){ return keyMap[val]; });\n\t\t} else {\n\t\t\trefList = $.map(refList, function(val){ return val === key ? null : keyMap[val]; });\n\t\t\tif( refList.length < 1 ) {\n\t\t\t\trefList = null;\n\t\t\t}\n\t\t}\n\t}\n\treturn refList;\n};\n\n\n/**\n * [ext-clones] Return true if this node has at least another clone with same refKey.\n * @returns {boolean}\n *\n * @alias FancytreeNode#isClone\n * @requires jquery.fancytree.clones.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.isClone = function(){\n\tvar refKey = this.refKey || null,\n\t\trefList = refKey && this.tree.refMap[refKey] || null;\n\treturn !!(refList && refList.length > 1);\n};\n\n\n/**\n * [ext-clones] Update key and/or refKey for an existing node.\n * @param {string} key\n * @param {string} refKey\n * @returns {boolean}\n *\n * @alias FancytreeNode#reRegister\n * @requires jquery.fancytree.clones.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.reRegister = function(key, refKey){\n\tkey = (key == null) ? null :  \"\" + key;\n\trefKey = (refKey == null) ? null :  \"\" + refKey;\n\t// this.debug(\"reRegister\", key, refKey);\n\n\tvar tree = this.tree,\n\t\tprevKey = this.key,\n\t\tprevRefKey = this.refKey,\n\t\tkeyMap = tree.keyMap,\n\t\trefMap = tree.refMap,\n\t\trefList = refMap[prevRefKey] || null,\n//\t\tcurCloneKeys = refList ? node.getCloneList(true),\n\t\tmodified = false;\n\n\t// Key has changed: update all references\n\tif( key != null && key !== this.key ) {\n\t\tif( keyMap[key] ) {\n\t\t\t$.error(\"[ext-clones] reRegister(\" + key + \"): already exists: \" + this);\n\t\t}\n\t\t// Update keyMap\n\t\tdelete keyMap[prevKey];\n\t\tkeyMap[key] = this;\n\t\t// Update refMap\n\t\tif( refList ) {\n\t\t\trefMap[prevRefKey] = $.map(refList, function(e){\n\t\t\t\treturn e === prevKey ? key : e;\n\t\t\t});\n\t\t}\n\t\tthis.key = key;\n\t\tmodified = true;\n\t}\n\n\t// refKey has changed\n\tif( refKey != null && refKey !== this.refKey ) {\n\t\t// Remove previous refKeys\n\t\tif( refList ){\n\t\t\tif( refList.length === 1 ){\n\t\t\t\tdelete refMap[prevRefKey];\n\t\t\t}else{\n\t\t\t\trefMap[prevRefKey] = $.map(refList, function(e){\n\t\t\t\t\treturn e === prevKey ? null : e;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Add refKey\n\t\tif( refMap[refKey] ) {\n\t\t\trefMap[refKey].append(key);\n\t\t}else{\n\t\t\trefMap[refKey] = [ this.key ];\n\t\t}\n\t\tthis.refKey = refKey;\n\t\tmodified = true;\n\t}\n\treturn modified;\n};\n\n\n/**\n * [ext-clones] Define a refKey for an existing node.\n * @param {string} refKey\n * @returns {boolean}\n *\n * @alias FancytreeNode#setRefKey\n * @requires jquery.fancytree.clones.js\n * @since 2.16\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.setRefKey = function(refKey){\n\treturn this.reRegister(null, refKey);\n};\n\n\n/**\n * [ext-clones] Return all nodes with a given refKey (null if not found).\n * @param {string} refKey\n * @param {FancytreeNode} [rootNode] optionally restrict results to descendants of this node\n * @returns {FancytreeNode[] | null}\n * @alias Fancytree#getNodesByRef\n * @requires jquery.fancytree.clones.js\n */\n$.ui.fancytree._FancytreeClass.prototype.getNodesByRef = function(refKey, rootNode){\n\tvar keyMap = this.keyMap,\n\t\trefList = this.refMap[refKey] || null;\n\n\tif( refList ) {\n\t\t// Convert key list to node list\n\t\tif( rootNode ) {\n\t\t\trefList = $.map(refList, function(val){\n\t\t\t\tvar node = keyMap[val];\n\t\t\t\treturn node.isDescendantOf(rootNode) ? node : null;\n\t\t\t});\n\t\t}else{\n\t\t\trefList = $.map(refList, function(val){ return keyMap[val]; });\n\t\t}\n\t\tif( refList.length < 1 ) {\n\t\t\trefList = null;\n\t\t}\n\t}\n\treturn refList;\n};\n\n\n/**\n * [ext-clones] Replace a refKey with a new one.\n * @param {string} oldRefKey\n * @param {string} newRefKey\n * @alias Fancytree#changeRefKey\n * @requires jquery.fancytree.clones.js\n */\n$.ui.fancytree._FancytreeClass.prototype.changeRefKey = function(oldRefKey, newRefKey) {\n\tvar i, node,\n\t\tkeyMap = this.keyMap,\n\t\trefList = this.refMap[oldRefKey] || null;\n\n\tif (refList) {\n\t\tfor (i = 0; i < refList.length; i++) {\n\t\t\tnode = keyMap[refList[i]];\n\t\t\tnode.refKey = newRefKey;\n\t\t}\n\t\tdelete this.refMap[oldRefKey];\n\t\tthis.refMap[newRefKey] = refList;\n\t}\n};\n\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"clones\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\thighlightActiveClones: true, // set 'fancytree-active-clone' on active clones and all peers\n\t\thighlightClones: false       // set 'fancytree-clone' class on any node that has at least one clone\n\t},\n\n\ttreeCreate: function(ctx){\n\t\tthis._superApply(arguments);\n\t\tctx.tree.refMap = {};\n\t\tctx.tree.keyMap = {};\n\t},\n\ttreeInit: function(ctx){\n\t\tthis.$container.addClass(\"fancytree-ext-clones\");\n\t\t_assert(ctx.options.defaultKey == null);\n\t\t// Generate unique / reproducible default keys\n\t\tctx.options.defaultKey = function(node){\n\t\t\treturn calcUniqueKey(node);\n\t\t};\n\t\t// The default implementation loads initial data\n\t\tthis._superApply(arguments);\n\t},\n\ttreeClear: function(ctx){\n\t\tctx.tree.refMap = {};\n\t\tctx.tree.keyMap = {};\n\t\treturn this._superApply(arguments);\n\t},\n\ttreeRegisterNode: function(ctx, add, node) {\n\t\tvar refList, len,\n\t\t\ttree = ctx.tree,\n\t\t\tkeyMap = tree.keyMap,\n\t\t\trefMap = tree.refMap,\n\t\t\tkey = node.key,\n\t\t\trefKey = (node && node.refKey != null) ? \"\" + node.refKey : null;\n\n//\t\tctx.tree.debug(\"clones.treeRegisterNode\", add, node);\n\n\t\tif( node.isStatusNode() ){\n\t\t\treturn this._super(ctx, add, node);\n\t\t}\n\n\t\tif( add ) {\n\t\t\tif( keyMap[node.key] != null ) {\n\t\t\t\t$.error(\"clones.treeRegisterNode: node.key already exists: \" + node);\n\t\t\t}\n\t\t\tkeyMap[key] = node;\n\t\t\tif( refKey ) {\n\t\t\t\trefList = refMap[refKey];\n\t\t\t\tif( refList ) {\n\t\t\t\t\trefList.push(key);\n\t\t\t\t\tif( refList.length === 2 && ctx.options.clones.highlightClones ) {\n\t\t\t\t\t\t// Mark peer node, if it just became a clone (no need to\n\t\t\t\t\t\t// mark current node, since it will be rendered later anyway)\n\t\t\t\t\t\tkeyMap[refList[0]].renderStatus();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trefMap[refKey] = [key];\n\t\t\t\t}\n\t\t\t\t// node.debug(\"clones.treeRegisterNode: add clone =>\", refMap[refKey]);\n\t\t\t}\n\t\t}else {\n\t\t\tif( keyMap[key] == null ) {\n\t\t\t\t$.error(\"clones.treeRegisterNode: node.key not registered: \" + node.key);\n\t\t\t}\n\t\t\tdelete keyMap[key];\n\t\t\tif( refKey ) {\n\t\t\t\trefList = refMap[refKey];\n\t\t\t\t// node.debug(\"clones.treeRegisterNode: remove clone BEFORE =>\", refMap[refKey]);\n\t\t\t\tif( refList ) {\n\t\t\t\t\tlen = refList.length;\n\t\t\t\t\tif( len <= 1 ){\n\t\t\t\t\t\t_assert(len === 1);\n\t\t\t\t\t\t_assert(refList[0] === key);\n\t\t\t\t\t\tdelete refMap[refKey];\n\t\t\t\t\t}else{\n\t\t\t\t\t\t_removeArrayMember(refList, key);\n\t\t\t\t\t\t// Unmark peer node, if this was the only clone\n\t\t\t\t\t\tif( len === 2 && ctx.options.clones.highlightClones ) {\n//\t\t\t\t\t\t\tnode.debug(\"clones.treeRegisterNode: last =>\", node.getCloneList());\n\t\t\t\t\t\t\tkeyMap[refList[0]].renderStatus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// node.debug(\"clones.treeRegisterNode: remove clone =>\", refMap[refKey]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._super(ctx, add, node);\n\t},\n\tnodeRenderStatus: function(ctx) {\n\t\tvar $span, res,\n\t\t\tnode = ctx.node;\n\n\t\tres = this._super(ctx);\n\n\t\tif( ctx.options.clones.highlightClones ) {\n\t\t\t$span = $(node[ctx.tree.statusClassPropName]);\n\t\t\t// Only if span already exists\n\t\t\tif( $span.length && node.isClone() ){\n//\t\t\t\tnode.debug(\"clones.nodeRenderStatus: \", ctx.options.clones.highlightClones);\n\t\t\t\t$span.addClass(\"fancytree-clone\");\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\tnodeSetActive: function(ctx, flag, callOpts) {\n\t\tvar res,\n\t\t\tscpn = ctx.tree.statusClassPropName,\n\t\t\tnode = ctx.node;\n\n\t\tres = this._superApply(arguments);\n\n\t\tif( ctx.options.clones.highlightActiveClones && node.isClone() ) {\n\t\t\t$.each(node.getCloneList(true), function(idx, n){\n\t\t\t\t// n.debug(\"clones.nodeSetActive: \", flag !== false);\n\t\t\t\t$(n[scpn]).toggleClass(\"fancytree-active-clone\", flag !== false);\n\t\t\t});\n\t\t}\n\t\treturn res;\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.dnd.js\n *\n * Drag-and-drop support (jQuery UI draggable/droppable).\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"jquery-ui/ui/widgets/draggable\",\n\t\t\t\"jquery-ui/ui/widgets/droppable\",\n\t\t\t\"./jquery.fancytree\"\n\t\t], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/* *****************************************************************************\n * Private functions and variables\n */\nvar didRegisterDnd = false,\n\tclassDropAccept = \"fancytree-drop-accept\",\n\tclassDropAfter = \"fancytree-drop-after\",\n\tclassDropBefore = \"fancytree-drop-before\",\n\tclassDropOver = \"fancytree-drop-over\",\n\tclassDropReject = \"fancytree-drop-reject\",\n\tclassDropTarget = \"fancytree-drop-target\";\n\n/* Convert number to string and prepend +/-; return empty string for 0.*/\nfunction offsetString(n){\n\treturn n === 0 ? \"\" : (( n > 0 ) ? (\"+\" + n) : (\"\" + n));\n}\n\n//--- Extend ui.draggable event handling --------------------------------------\n\nfunction _registerDnd() {\n\tif(didRegisterDnd){\n\t\treturn;\n\t}\n\n\t// Register proxy-functions for draggable.start/drag/stop\n\n\t$.ui.plugin.add(\"draggable\", \"connectToFancytree\", {\n\t\tstart: function(event, ui) {\n\t\t\t// 'draggable' was renamed to 'ui-draggable' since jQueryUI 1.10\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\n\t\t\t\tsourceNode = ui.helper.data(\"ftSourceNode\") || null;\n\n\t\t\tif(sourceNode) {\n\t\t\t\t// Adjust helper offset, so cursor is slightly outside top/left corner\n\t\t\t\tdraggable.offset.click.top = -2;\n\t\t\t\tdraggable.offset.click.left = + 16;\n\t\t\t\t// Trigger dragStart event\n\t\t\t\t// TODO: when called as connectTo..., the return value is ignored(?)\n\t\t\t\treturn sourceNode.tree.ext.dnd._onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\n\t\t\t}\n\t\t},\n\t\tdrag: function(event, ui) {\n\t\t\tvar ctx, isHelper, logObject,\n\t\t\t\t// 'draggable' was renamed to 'ui-draggable' since jQueryUI 1.10\n\t\t\t\tdraggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\n\t\t\t\tsourceNode = ui.helper.data(\"ftSourceNode\") || null,\n\t\t\t\tprevTargetNode = ui.helper.data(\"ftTargetNode\") || null,\n\t\t\t\ttargetNode = $.ui.fancytree.getNode(event.target),\n\t\t\t\tdndOpts = sourceNode && sourceNode.tree.options.dnd;\n\n\t\t\t// logObject = sourceNode || prevTargetNode || $.ui.fancytree;\n\t\t\t// logObject.debug(\"Drag event:\", event, event.shiftKey);\n\t\t\tif(event.target && !targetNode){\n\t\t\t\t// We got a drag event, but the targetNode could not be found\n\t\t\t\t// at the event location. This may happen,\n\t\t\t\t// 1. if the mouse jumped over the drag helper,\n\t\t\t\t// 2. or if a non-fancytree element is dragged\n\t\t\t\t// We ignore it:\n\t\t\t\tisHelper = $(event.target).closest(\"div.fancytree-drag-helper,#fancytree-drop-marker\").length > 0;\n\t\t\t\tif(isHelper){\n\t\t\t\t\tlogObject = sourceNode || prevTargetNode || $.ui.fancytree;\n\t\t\t\t\tlogObject.debug(\"Drag event over helper: ignored.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tui.helper.data(\"ftTargetNode\", targetNode);\n\n\t\t\tif( dndOpts && dndOpts.updateHelper ) {\n\t\t\t\tctx = sourceNode.tree._makeHookContext(sourceNode, event, {\n\t\t\t\t\totherNode: targetNode,\n\t\t\t\t\tui: ui,\n\t\t\t\t\tdraggable: draggable,\n\t\t\t\t\tdropMarker: $(\"#fancytree-drop-marker\")\n\t\t\t\t});\n\t\t\t\tdndOpts.updateHelper.call(sourceNode.tree, sourceNode, ctx);\n\t\t\t}\n\n\t\t\t// Leaving a tree node\n\t\t\tif(prevTargetNode && prevTargetNode !== targetNode ) {\n\t\t\t\tprevTargetNode.tree.ext.dnd._onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\n\t\t\t}\n\t\t\tif(targetNode){\n\t\t\t\tif(!targetNode.tree.options.dnd.dragDrop) {\n\t\t\t\t\t// not enabled as drop target\n\t\t\t\t} else if(targetNode === prevTargetNode) {\n\t\t\t\t\t// Moving over same node\n\t\t\t\t\ttargetNode.tree.ext.dnd._onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\n\t\t\t\t}else{\n\t\t\t\t\t// Entering this node first time\n\t\t\t\t\ttargetNode.tree.ext.dnd._onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\n\t\t\t\t\ttargetNode.tree.ext.dnd._onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// else go ahead with standard event handling\n\t\t},\n\t\tstop: function(event, ui) {\n\t\t\tvar logObject,\n\t\t\t\t// 'draggable' was renamed to 'ui-draggable' since jQueryUI 1.10:\n\t\t\t\tdraggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\n\t\t\t\tsourceNode = ui.helper.data(\"ftSourceNode\") || null,\n\t\t\t\ttargetNode = ui.helper.data(\"ftTargetNode\") || null,\n\t\t\t\tdropped = (event.type === \"mouseup\" && event.which === 1);\n\n\t\t\tif(!dropped){\n\t\t\t\tlogObject = sourceNode || targetNode || $.ui.fancytree;\n\t\t\t\tlogObject.debug(\"Drag was cancelled\");\n\t\t\t}\n\t\t\tif(targetNode) {\n\t\t\t\tif(dropped){\n\t\t\t\t\ttargetNode.tree.ext.dnd._onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\n\t\t\t\t}\n\t\t\t\ttargetNode.tree.ext.dnd._onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\n\t\t\t}\n\t\t\tif(sourceNode){\n\t\t\t\tsourceNode.tree.ext.dnd._onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\n\t\t\t}\n\t\t}\n\t});\n\n\tdidRegisterDnd = true;\n}\n\n\n/* *****************************************************************************\n * Drag and drop support\n */\nfunction _initDragAndDrop(tree) {\n\tvar dnd = tree.options.dnd || null,\n\t\tglyph = tree.options.glyph || null;\n\n\t// Register 'connectToFancytree' option with ui.draggable\n\tif( dnd ) {\n\t\t_registerDnd();\n\t}\n\t// Attach ui.draggable to this Fancytree instance\n\tif(dnd && dnd.dragStart ) {\n\t\ttree.widget.element.draggable($.extend({\n\t\t\taddClasses: false,\n\t\t\t// DT issue 244: helper should be child of scrollParent:\n\t\t\tappendTo: tree.$container,\n//\t\t\tappendTo: \"body\",\n\t\t\tcontainment: false,\n//\t\t\tcontainment: \"parent\",\n\t\t\tdelay: 0,\n\t\t\tdistance: 4,\n\t\t\trevert: false,\n\t\t\tscroll: true, // to disable, also set css 'position: inherit' on ul.fancytree-container\n\t\t\tscrollSpeed: 7,\n\t\t\tscrollSensitivity: 10,\n\t\t\t// Delegate draggable.start, drag, and stop events to our handler\n\t\t\tconnectToFancytree: true,\n\t\t\t// Let source tree create the helper element\n\t\t\thelper: function(event) {\n\t\t\t\tvar $helper, $nodeTag, opts,\n\t\t\t\t\tsourceNode = $.ui.fancytree.getNode(event.target);\n\n\t\t\t\tif(!sourceNode){\n\t\t\t\t\t// #405, DT issue 211: might happen, if dragging a table *header*\n\t\t\t\t\treturn \"<div>ERROR?: helper requested but sourceNode not found</div>\";\n\t\t\t\t}\n\t\t\t\topts = sourceNode.tree.options.dnd;\n\t\t\t\t$nodeTag = $(sourceNode.span);\n\t\t\t\t// Only event and node argument is available\n\t\t\t\t$helper = $(\"<div class='fancytree-drag-helper'><span class='fancytree-drag-helper-img' /></div>\")\n\t\t\t\t\t.css({zIndex: 3, position: \"relative\"}) // so it appears above ext-wide selection bar\n\t\t\t\t\t.append($nodeTag.find(\"span.fancytree-title\").clone());\n\n\t\t\t\t// Attach node reference to helper object\n\t\t\t\t$helper.data(\"ftSourceNode\", sourceNode);\n\n\t\t\t\t// Support glyph symbols instead of icons\n\t\t\t\tif( glyph ) {\n\t\t\t\t\t$helper.find(\".fancytree-drag-helper-img\")\n\t\t\t\t\t\t.addClass(glyph.map._addClass + \" \" + glyph.map.dragHelper);\n\t\t\t\t}\n\t\t\t\t// Allow to modify the helper, e.g. to add multi-node-drag feedback\n\t\t\t\tif( opts.initHelper ) {\n\t\t\t\t\topts.initHelper.call(sourceNode.tree, sourceNode, {\n\t\t\t\t\t\tnode: sourceNode,\n\t\t\t\t\t\ttree: sourceNode.tree,\n\t\t\t\t\t\toriginalEvent: event,\n\t\t\t\t\t\tui: { helper: $helper }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// We return an unconnected element, so `draggable` will add this\n\t\t\t\t// to the parent specified as `appendTo` option\n\t\t\t\treturn $helper;\n\t\t\t},\n\t\t\tstart: function(event, ui) {\n\t\t\t\tvar sourceNode = ui.helper.data(\"ftSourceNode\");\n\t\t\t\treturn !!sourceNode; // Abort dragging if no node could be found\n\t\t\t}\n\t\t}, tree.options.dnd.draggable));\n\t}\n\t// Attach ui.droppable to this Fancytree instance\n\tif(dnd && dnd.dragDrop) {\n\t\ttree.widget.element.droppable($.extend({\n\t\t\taddClasses: false,\n\t\t\ttolerance: \"intersect\",\n\t\t\tgreedy: false\n/*\n\t\t\tactivate: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - activate\", event, ui, this);\n\t\t\t},\n\t\t\tcreate: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - create\", event, ui);\n\t\t\t},\n\t\t\tdeactivate: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - deactivate\", event, ui);\n\t\t\t},\n\t\t\tdrop: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - drop\", event, ui);\n\t\t\t},\n\t\t\tout: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - out\", event, ui);\n\t\t\t},\n\t\t\tover: function(event, ui) {\n\t\t\t\ttree.debug(\"droppable - over\", event, ui);\n\t\t\t}\n*/\n\t\t}, tree.options.dnd.droppable));\n\t}\n}\n\n\n/* *****************************************************************************\n *\n */\n\n$.ui.fancytree.registerExtension({\n\tname: \"dnd\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\t// Make tree nodes accept draggables\n\t\tautoExpandMS: 1000,  // Expand nodes after n milliseconds of hovering.\n\t\tdraggable: null,     // Additional options passed to jQuery draggable\n\t\tdroppable: null,     // Additional options passed to jQuery droppable\n\t\tfocusOnClick: false, // Focus, although draggable cancels mousedown event (#270)\n\t\tpreventVoidMoves: true, \t// Prevent dropping nodes 'before self', etc.\n\t\tpreventRecursiveMoves: true,// Prevent dropping nodes on own descendants\n\t\tsmartRevert: true,   // set draggable.revert = true if drop was rejected\n\t\tdropMarkerOffsetX: -24,\t\t\t// absolute position offset for .fancytree-drop-marker relatively to ..fancytree-title (icon/img near a node accepting drop)\n\t\tdropMarkerInsertOffsetX: -16,\t// additional offset for drop-marker with hitMode = \"before\"/\"after\"\n\t\t// Events (drag support)\n\t\tdragStart: null,     // Callback(sourceNode, data), return true, to enable dnd\n\t\tdragStop: null,      // Callback(sourceNode, data)\n\t\tinitHelper: null,    // Callback(sourceNode, data)\n\t\tupdateHelper: null,  // Callback(sourceNode, data)\n\t\t// Events (drop support)\n\t\tdragEnter: null,     // Callback(targetNode, data)\n\t\tdragOver: null,      // Callback(targetNode, data)\n\t\tdragExpand: null,    // Callback(targetNode, data), return false to prevent autoExpand\n\t\tdragDrop: null,      // Callback(targetNode, data)\n\t\tdragLeave: null      // Callback(targetNode, data)\n\t},\n\n\ttreeInit: function(ctx){\n\t\tvar tree = ctx.tree;\n\t\tthis._superApply(arguments);\n\t\t// issue #270: draggable eats mousedown events\n\t\tif( tree.options.dnd.dragStart ){\n\t\t\ttree.$container.on(\"mousedown\", function(event){\n//\t\t\t\tif( !tree.hasFocus() && ctx.options.dnd.focusOnClick ) {\n\t\t\t\tif( ctx.options.dnd.focusOnClick ) {  // #270\n\t\t\t\t\tvar node = $.ui.fancytree.getNode(event);\n\t\t\t\t\tif (node){\n\t\t\t\t\t\tnode.debug(\"Re-enable focus that was prevented by jQuery UI draggable.\");\n\t\t\t\t\t\t// node.setFocus();\n\t\t\t\t\t\t// $(node.span).closest(\":tabbable\").focus();\n\t\t\t\t\t\t// $(event.target).trigger(\"focus\");\n\t\t\t\t\t\t// $(event.target).closest(\":tabbable\").trigger(\"focus\");\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(function() { // #300\n\t\t\t\t\t\t$(event.target).closest(\":tabbable\").focus();\n\t\t\t\t\t}, 10);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t_initDragAndDrop(tree);\n\t},\n\t/* Display drop marker according to hitMode ('after', 'before', 'over'). */\n\t_setDndStatus: function(sourceNode, targetNode, helper, hitMode, accept) {\n\t\tvar markerOffsetX,\n\t\t\tmarkerAt = \"center\",\n\t\t\tinstData = this._local,\n\t\t\tdndOpt = this.options.dnd ,\n\t\t\tglyphOpt = this.options.glyph,\n\t\t\t$source = sourceNode ? $(sourceNode.span) : null,\n\t\t\t$target = $(targetNode.span),\n\t\t\t$targetTitle = $target.find(\"span.fancytree-title\");\n\n\t\tif( !instData.$dropMarker ) {\n\t\t\tinstData.$dropMarker = $(\"<div id='fancytree-drop-marker'></div>\")\n\t\t\t\t.hide()\n\t\t\t\t.css({\"z-index\": 1000})\n\t\t\t\t.prependTo($(this.$div).parent());\n//                .prependTo(\"body\");\n\n\t\t\tif( glyphOpt ) {\n\t\t\t\tinstData.$dropMarker\n\t\t\t\t\t.addClass(glyphOpt.map._addClass + \" \" + glyphOpt.map.dropMarker);\n\t\t\t}\n\t\t}\n\t\tif( hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\" ){\n\t\t\tmarkerOffsetX = dndOpt.dropMarkerOffsetX || 0;\n\t\t\tswitch(hitMode){\n\t\t\tcase \"before\":\n\t\t\t\tmarkerAt = \"top\";\n\t\t\t\tmarkerOffsetX += (dndOpt.dropMarkerInsertOffsetX || 0);\n\t\t\t\tbreak;\n\t\t\tcase \"after\":\n\t\t\t\tmarkerAt = \"bottom\";\n\t\t\t\tmarkerOffsetX += (dndOpt.dropMarkerInsertOffsetX || 0);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tinstData.$dropMarker\n\t\t\t\t.toggleClass(classDropAfter, hitMode === \"after\")\n\t\t\t\t.toggleClass(classDropOver, hitMode === \"over\")\n\t\t\t\t.toggleClass(classDropBefore, hitMode === \"before\")\n\t\t\t\t.show()\n\t\t\t\t.position($.ui.fancytree.fixPositionOptions({\n\t\t\t\t\tmy: \"left\" + offsetString(markerOffsetX) + \" center\",\n\t\t\t\t\tat: \"left \" + markerAt,\n\t\t\t\t\tof: $targetTitle\n\t\t\t\t\t}));\n\t\t} else {\n\t\t\tinstData.$dropMarker.hide();\n\t\t}\n\t\tif( $source ){\n\t\t\t$source\n\t\t\t\t.toggleClass(classDropAccept, accept === true)\n\t\t\t\t.toggleClass(classDropReject, accept === false);\n\t\t}\n\t\t$target\n\t\t\t.toggleClass(classDropTarget, hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\")\n\t\t\t.toggleClass(classDropAfter, hitMode === \"after\")\n\t\t\t.toggleClass(classDropBefore, hitMode === \"before\")\n\t\t\t.toggleClass(classDropAccept, accept === true)\n\t\t\t.toggleClass(classDropReject, accept === false);\n\n\t\thelper\n\t\t\t.toggleClass(classDropAccept, accept === true)\n\t\t\t.toggleClass(classDropReject, accept === false);\n\t},\n\n\t/*\n\t * Handles drag'n'drop functionality.\n\t *\n\t * A standard jQuery drag-and-drop process may generate these calls:\n\t *\n\t * start:\n\t *     _onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\n\t * drag:\n\t *     _onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\n\t *     _onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\n\t *     _onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\n\t * stop:\n\t *     _onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\n\t *     _onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\n\t *     _onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\n\t */\n\t_onDragEvent: function(eventName, node, otherNode, event, ui, draggable) {\n\t\t// if(eventName !== \"over\"){\n\t\t// \tthis.debug(\"tree.ext.dnd._onDragEvent(%s, %o, %o) - %o\", eventName, node, otherNode, this);\n\t\t// }\n\t\tvar accept, nodeOfs, parentRect, rect, relPos, relPos2,\n\t\t\tenterResponse, hitMode, r,\n\t\t\topts = this.options,\n\t\t\tdnd = opts.dnd,\n\t\t\tctx = this._makeHookContext(node, event, {otherNode: otherNode, ui: ui, draggable: draggable}),\n\t\t\tres = null,\n\t\t\tthat = this,\n\t\t\t$nodeTag = $(node.span);\n\n\t\tif( dnd.smartRevert ) {\n\t\t\tdraggable.options.revert = \"invalid\";\n\t\t}\n\n\t\tswitch (eventName) {\n\n\t\tcase \"start\":\n\t\t\tif( node.isStatusNode() ) {\n\t\t\t\tres = false;\n\t\t\t} else if(dnd.dragStart) {\n\t\t\t\tres = dnd.dragStart(node, ctx);\n\t\t\t}\n\t\t\tif(res === false) {\n\t\t\t\tthis.debug(\"tree.dragStart() cancelled\");\n\t\t\t\t//draggable._clear();\n\t\t\t\t// NOTE: the return value seems to be ignored (drag is not cancelled, when false is returned)\n\t\t\t\t// TODO: call this._cancelDrag()?\n\t\t\t\tui.helper.trigger(\"mouseup\")\n\t\t\t\t\t.hide();\n\t\t\t} else {\n\t\t\t\tif( dnd.smartRevert ) {\n\t\t\t\t\t// #567, #593: fix revert position\n\t\t\t\t\t// rect = node.li.getBoundingClientRect();\n\t\t\t\t\trect = node[ctx.tree.nodeContainerAttrName].getBoundingClientRect();\n\t\t\t\t\tparentRect = $(draggable.options.appendTo)[0].getBoundingClientRect();\n\t\t\t\t\tdraggable.originalPosition.left = Math.max(0, rect.left - parentRect.left);\n\t\t\t\t\tdraggable.originalPosition.top = Math.max(0, rect.top - parentRect.top);\n\t\t\t\t}\n\t\t\t\t$nodeTag.addClass(\"fancytree-drag-source\");\n\t\t\t\t// Register global handlers to allow cancel\n\t\t\t\t$(document)\n\t\t\t\t\t.on(\"keydown.fancytree-dnd,mousedown.fancytree-dnd\", function(event){\n\t\t\t\t\t\t// node.tree.debug(\"dnd global event\", event.type, event.which);\n\t\t\t\t\t\tif( event.type === \"keydown\" && event.which === $.ui.keyCode.ESCAPE ) {\n\t\t\t\t\t\t\tthat.ext.dnd._cancelDrag();\n\t\t\t\t\t\t} else if( event.type === \"mousedown\" ) {\n\t\t\t\t\t\t\tthat.ext.dnd._cancelDrag();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"enter\":\n\t\t\tif(dnd.preventRecursiveMoves && node.isDescendantOf(otherNode)){\n\t\t\t\tr = false;\n\t\t\t}else{\n\t\t\t\tr = dnd.dragEnter ? dnd.dragEnter(node, ctx) : null;\n\t\t\t}\n\t\t\tif(!r){\n\t\t\t\t// convert null, undefined, false to false\n\t\t\t\tres = false;\n\t\t\t}else if ( $.isArray(r) ) {\n\t\t\t\t// TODO: also accept passing an object of this format directly\n\t\t\t\tres = {\n\t\t\t\t\tover: ($.inArray(\"over\", r) >= 0),\n\t\t\t\t\tbefore: ($.inArray(\"before\", r) >= 0),\n\t\t\t\t\tafter: ($.inArray(\"after\", r) >= 0)\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tres = {\n\t\t\t\t\tover: ((r === true) || (r === \"over\")),\n\t\t\t\t\tbefore: ((r === true) || (r === \"before\")),\n\t\t\t\t\tafter: ((r === true) || (r === \"after\"))\n\t\t\t\t};\n\t\t\t}\n\t\t\tui.helper.data(\"enterResponse\", res);\n\t\t\t// this.debug(\"helper.enterResponse: %o\", res);\n\t\t\tbreak;\n\n\t\tcase \"over\":\n\t\t\tenterResponse = ui.helper.data(\"enterResponse\");\n\t\t\thitMode = null;\n\t\t\tif(enterResponse === false){\n\t\t\t\t// Don't call dragOver if onEnter returned false.\n//                break;\n\t\t\t} else if(typeof enterResponse === \"string\") {\n\t\t\t\t// Use hitMode from onEnter if provided.\n\t\t\t\thitMode = enterResponse;\n\t\t\t} else {\n\t\t\t\t// Calculate hitMode from relative cursor position.\n\t\t\t\tnodeOfs = $nodeTag.offset();\n\t\t\t\trelPos = { x: event.pageX - nodeOfs.left,\n\t\t\t\t\t\t   y: event.pageY - nodeOfs.top };\n\t\t\t\trelPos2 = { x: relPos.x / $nodeTag.width(),\n\t\t\t\t\t\t\ty: relPos.y / $nodeTag.height() };\n\n\t\t\t\tif( enterResponse.after && relPos2.y > 0.75 ){\n\t\t\t\t\thitMode = \"after\";\n\t\t\t\t} else if(!enterResponse.over && enterResponse.after && relPos2.y > 0.5 ){\n\t\t\t\t\thitMode = \"after\";\n\t\t\t\t} else if(enterResponse.before && relPos2.y <= 0.25) {\n\t\t\t\t\thitMode = \"before\";\n\t\t\t\t} else if(!enterResponse.over && enterResponse.before && relPos2.y <= 0.5) {\n\t\t\t\t\thitMode = \"before\";\n\t\t\t\t} else if(enterResponse.over) {\n\t\t\t\t\thitMode = \"over\";\n\t\t\t\t}\n\t\t\t\t// Prevent no-ops like 'before source node'\n\t\t\t\t// TODO: these are no-ops when moving nodes, but not in copy mode\n\t\t\t\tif( dnd.preventVoidMoves ){\n\t\t\t\t\tif(node === otherNode){\n\t\t\t\t\t\tthis.debug(\"    drop over source node prevented\");\n\t\t\t\t\t\thitMode = null;\n\t\t\t\t\t}else if(hitMode === \"before\" && otherNode && node === otherNode.getNextSibling()){\n\t\t\t\t\t\tthis.debug(\"    drop after source node prevented\");\n\t\t\t\t\t\thitMode = null;\n\t\t\t\t\t}else if(hitMode === \"after\" && otherNode && node === otherNode.getPrevSibling()){\n\t\t\t\t\t\tthis.debug(\"    drop before source node prevented\");\n\t\t\t\t\t\thitMode = null;\n\t\t\t\t\t}else if(hitMode === \"over\" && otherNode && otherNode.parent === node && otherNode.isLastSibling() ){\n\t\t\t\t\t\tthis.debug(\"    drop last child over own parent prevented\");\n\t\t\t\t\t\thitMode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n//                this.debug(\"hitMode: %s - %s - %s\", hitMode, (node.parent === otherNode), node.isLastSibling());\n\t\t\t\tui.helper.data(\"hitMode\", hitMode);\n\t\t\t}\n\t\t\t// Auto-expand node (only when 'over' the node, not 'before', or 'after')\n\t\t\tif(hitMode !== \"before\" && hitMode !== \"after\" && dnd.autoExpandMS &&\n\t\t\t\tnode.hasChildren() !== false && !node.expanded &&\n\t\t\t\t(!dnd.dragExpand || dnd.dragExpand(node, ctx) !== false)\n\t\t\t\t) {\n\t\t\t\tnode.scheduleAction(\"expand\", dnd.autoExpandMS);\n\t\t\t}\n\t\t\tif(hitMode && dnd.dragOver){\n\t\t\t\t// TODO: http://code.google.com/p/dynatree/source/detail?r=625\n\t\t\t\tctx.hitMode = hitMode;\n\t\t\t\tres = dnd.dragOver(node, ctx);\n\t\t\t}\n\t\t\taccept = (res !== false && hitMode !== null);\n\t\t\tif( dnd.smartRevert ) {\n\t\t\t\tdraggable.options.revert = !accept;\n\t\t\t}\n\t\t\tthis._local._setDndStatus(otherNode, node, ui.helper, hitMode, accept);\n\t\t\tbreak;\n\n\t\tcase \"drop\":\n\t\t\thitMode = ui.helper.data(\"hitMode\");\n\t\t\tif(hitMode && dnd.dragDrop){\n\t\t\t\tctx.hitMode = hitMode;\n\t\t\t\tdnd.dragDrop(node, ctx);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"leave\":\n\t\t\t// Cancel pending expand request\n\t\t\tnode.scheduleAction(\"cancel\");\n\t\t\tui.helper.data(\"enterResponse\", null);\n\t\t\tui.helper.data(\"hitMode\", null);\n\t\t\tthis._local._setDndStatus(otherNode, node, ui.helper, \"out\", undefined);\n\t\t\tif(dnd.dragLeave){\n\t\t\t\tdnd.dragLeave(node, ctx);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"stop\":\n\t\t\t$nodeTag.removeClass(\"fancytree-drag-source\");\n\t\t\t$(document).off(\".fancytree-dnd\");\n\t\t\tif(dnd.dragStop){\n\t\t\t\tdnd.dragStop(node, ctx);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$.error(\"Unsupported drag event: \" + eventName);\n\t\t}\n\t\treturn res;\n\t},\n\n\t_cancelDrag: function() {\n\t\t var dd = $.ui.ddmanager.current;\n\t\t if(dd){\n\t\t\t dd.cancel();\n\t\t }\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.dnd5.js\n *\n * Drag-and-drop support (native HTML5).\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n\n /*\n #TODO\n\tCompatiblity when dragging between *separate* windows:\n\n\t\t   Drag from Chrome   Edge    FF    IE11    Safari\n\t  To Chrome      ok       ok      ok    NO      ?\n\t\t Edge        ok       ok      ok    NO      ?\n\t\t FF          ok       ok      ok    NO      ?\n\t\t IE 11       ok       ok      ok    ok      ?\n\t\t Safari      ?        ?       ?     ?       ok\n\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/* *****************************************************************************\n * Private functions and variables\n */\nvar FT = $.ui.fancytree,\n\tclassDragSource = \"fancytree-drag-source\",\n\tclassDragRemove = \"fancytree-drag-remove\",\n\tclassDropAccept = \"fancytree-drop-accept\",\n\tclassDropAfter = \"fancytree-drop-after\",\n\tclassDropBefore = \"fancytree-drop-before\",\n\tclassDropOver = \"fancytree-drop-over\",\n\tclassDropReject = \"fancytree-drop-reject\",\n\tclassDropTarget = \"fancytree-drop-target\",\n\tnodeMimeType = \"application/x-fancytree-node\",\n\t$dropMarker = null,\n\tSOURCE_NODE = null,\n\tDRAG_ENTER_RESPONSE = null,\n\tLAST_HIT_MODE = null;\n\n/* Convert number to string and prepend +/-; return empty string for 0.*/\nfunction offsetString(n){\n\treturn n === 0 ? \"\" : (( n > 0 ) ? (\"+\" + n) : (\"\" + n));\n}\n\n/* Convert a dragEnter() or dragOver() response to a canonical form.\n * Return false or plain object\n * @param {string|object|boolean} r\n * @return {object|false}\n */\nfunction normalizeDragEnterResponse(r) {\n\tvar res;\n\n\tif( !r ){\n\t\treturn false;\n\t}\n\tif ( $.isPlainObject(r) ) {\n\t\tres = {\n\t\t\tover: !!r.over,\n\t\t\tbefore: !!r.before,\n\t\t\tafter: !!r.after\n\t\t};\n\t}else if ( $.isArray(r) ) {\n\t\tres = {\n\t\t\tover: ($.inArray(\"over\", r) >= 0),\n\t\t\tbefore: ($.inArray(\"before\", r) >= 0),\n\t\t\tafter: ($.inArray(\"after\", r) >= 0)\n\t\t};\n\t}else{\n\t\tres = {\n\t\t\tover: ((r === true) || (r === \"over\")),\n\t\t\tbefore: ((r === true) || (r === \"before\")),\n\t\t\tafter: ((r === true) || (r === \"after\"))\n\t\t};\n\t}\n\tif( Object.keys(res).length === 0 ) {\n\t\treturn false;\n\t}\n\t// if( Object.keys(res).length === 1 ) {\n\t// \tres.unique = res[0];\n\t// }\n\treturn res;\n}\n\n/* Implement auto scrolling when drag cursor is in top/bottom area of scroll parent. */\nfunction autoScroll(tree, event) {\n\tvar spOfs, scrollTop, delta,\n\t\tdndOpts = tree.options.dnd5,\n\t\tsp = tree.$scrollParent[0],\n\t\tsensitivity = dndOpts.scrollSensitivity,\n\t\tspeed = dndOpts.scrollSpeed,\n\t\tscrolled = 0;\n\n\tif ( sp !== document && sp.tagName !== \"HTML\" ) {\n\t\tspOfs = tree.$scrollParent.offset();\n\t\tscrollTop = sp.scrollTop;\n\t\tif ( spOfs.top + sp.offsetHeight - event.pageY < sensitivity ) {\n\t\t\tdelta = (sp.scrollHeight - tree.$scrollParent.innerHeight() - scrollTop);\n\t\t\t// console.log (\"sp.offsetHeight: \" + sp.offsetHeight\n\t\t\t// \t+ \", spOfs.top: \" + spOfs.top\n\t\t\t// \t+ \", scrollTop: \" + scrollTop\n\t\t\t// \t+ \", innerHeight: \" + tree.$scrollParent.innerHeight()\n\t\t\t// \t+ \", scrollHeight: \" + sp.scrollHeight\n\t\t\t// \t+ \", delta: \" + delta\n\t\t\t// \t);\n\t\t\tif( delta > 0 ) {\n\t\t\t\tsp.scrollTop = scrolled = scrollTop + speed;\n\t\t\t}\n\t\t} else if ( scrollTop > 0 && event.pageY - spOfs.top < sensitivity ) {\n\t\t\tsp.scrollTop = scrolled = scrollTop - speed;\n\t\t}\n\t} else {\n\t\tscrollTop = $(document).scrollTop();\n\t\tif (scrollTop > 0 && event.pageY - scrollTop < sensitivity) {\n\t\t\tscrolled = scrollTop - speed;\n\t\t\t$(document).scrollTop(scrolled);\n\t\t} else if ($(window).height() - (event.pageY - scrollTop) < sensitivity) {\n\t\t\tscrolled = scrollTop + speed;\n\t\t\t$(document).scrollTop(scrolled);\n\t\t}\n\t}\n\tif( scrolled ) {\n\t\ttree.debug(\"autoScroll: \" + scrolled + \"px\");\n\t}\n\treturn scrolled;\n}\n\n/* Handle dragover event (fired every x ms) and return hitMode. */\nfunction handleDragOver(event, data) {\n\t// Implement auto-scrolling\n\tif ( data.options.dnd5.scroll ) {\n\t\tautoScroll(data.tree, event);\n\t}\n\t// Bail out with previous response if we get an invalid dragover\n\tif( !data.node ) {\n\t\tdata.tree.warn(\"Ignore dragover for non-node\");  //, event, data);\n\t\treturn LAST_HIT_MODE;\n\t}\n\n\tvar markerOffsetX, nodeOfs, relPosY, //res,\n\t\t// eventHash = getEventHash(event),\n\t\thitMode = null,\n\t\ttree = data.tree,\n\t\toptions = tree.options,\n\t\tdndOpts = options.dnd5,\n\t\ttargetNode = data.node,\n\t\tsourceNode = data.otherNode,\n\t\tmarkerAt = \"center\",\n\t\t// $source = sourceNode ? $(sourceNode.span) : null,\n\t\t$target = $(targetNode.span),\n\t\t$targetTitle = $target.find(\"span.fancytree-title\");\n\n\tif(DRAG_ENTER_RESPONSE === false){\n\t\ttree.info(\"Ignore dragover, since dragenter returned false\");  //, event, data);\n\t\t// $.error(\"assert failed: dragenter returned false\");\n\t\treturn false;\n\t} else if(typeof DRAG_ENTER_RESPONSE === \"string\") {\n\t\t$.error(\"assert failed: dragenter returned string\");\n\t\t// Use hitMode from onEnter if provided.\n\t\t// hitMode = DRAG_ENTER_RESPONSE;\n\t} else {\n\t\t// Calculate hitMode from relative cursor position.\n\t\tnodeOfs = $target.offset();\n\t\trelPosY = (event.pageY - nodeOfs.top) / $target.height();\n\n\t\tif( DRAG_ENTER_RESPONSE.after && relPosY > 0.75 ){\n\t\t\thitMode = \"after\";\n\t\t} else if(!DRAG_ENTER_RESPONSE.over && DRAG_ENTER_RESPONSE.after && relPosY > 0.5 ){\n\t\t\thitMode = \"after\";\n\t\t} else if(DRAG_ENTER_RESPONSE.before && relPosY <= 0.25) {\n\t\t\thitMode = \"before\";\n\t\t} else if(!DRAG_ENTER_RESPONSE.over && DRAG_ENTER_RESPONSE.before && relPosY <= 0.5) {\n\t\t\thitMode = \"before\";\n\t\t} else if(DRAG_ENTER_RESPONSE.over) {\n\t\t\thitMode = \"over\";\n\t\t}\n\t\t// Prevent no-ops like 'before source node'\n\t\t// TODO: these are no-ops when moving nodes, but not in copy mode\n\t\tif( dndOpts.preventVoidMoves ){\n\t\t\tif(targetNode === sourceNode){\n\t\t\t\ttargetNode.debug(\"drop over source node prevented\");\n\t\t\t\thitMode = null;\n\t\t\t}else if(hitMode === \"before\" && sourceNode && targetNode === sourceNode.getNextSibling()){\n\t\t\t\ttargetNode.debug(\"drop after source node prevented\");\n\t\t\t\thitMode = null;\n\t\t\t}else if(hitMode === \"after\" && sourceNode && targetNode === sourceNode.getPrevSibling()){\n\t\t\t\ttargetNode.debug(\"drop before source node prevented\");\n\t\t\t\thitMode = null;\n\t\t\t}else if(hitMode === \"over\" && sourceNode && sourceNode.parent === targetNode && sourceNode.isLastSibling() ){\n\t\t\t\ttargetNode.debug(\"drop last child over own parent prevented\");\n\t\t\t\thitMode = null;\n\t\t\t}\n\t\t}\n\t}\n\t// Let callback modify the calculated hitMode\n\tdata.hitMode = hitMode;\n\tif(hitMode && dndOpts.dragOver){\n\t\t// TODO: http://code.google.com/p/dynatree/source/detail?r=625\n\t\tdndOpts.dragOver(targetNode, data);\n\t\thitMode = data.hitMode;\n\t}\n\t// LAST_DROP_EFFECT = data.dataTransfer.dropEffect;\n\t// LAST_EFFECT_ALLOWED = data.dataTransfer.effectAllowed;\n\tLAST_HIT_MODE = hitMode;\n\t//\n\tif( hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\" ){\n\t\tmarkerOffsetX = dndOpts.dropMarkerOffsetX || 0;\n\t\tswitch(hitMode){\n\t\tcase \"before\":\n\t\t\tmarkerAt = \"top\";\n\t\t\tmarkerOffsetX += (dndOpts.dropMarkerInsertOffsetX || 0);\n\t\t\tbreak;\n\t\tcase \"after\":\n\t\t\tmarkerAt = \"bottom\";\n\t\t\tmarkerOffsetX += (dndOpts.dropMarkerInsertOffsetX || 0);\n\t\t\tbreak;\n\t\t}\n\n\t\t$dropMarker\n\t\t\t.toggleClass(classDropAfter, hitMode === \"after\")\n\t\t\t.toggleClass(classDropOver, hitMode === \"over\")\n\t\t\t.toggleClass(classDropBefore, hitMode === \"before\")\n\t\t\t.show()\n\t\t\t.position(FT.fixPositionOptions({\n\t\t\t\tmy: \"left\" + offsetString(markerOffsetX) + \" center\",\n\t\t\t\tat: \"left \" + markerAt,\n\t\t\t\tof: $targetTitle\n\t\t\t\t}));\n\t} else {\n\t\t$dropMarker.hide();\n\t\t// console.log(\"hide dropmarker\")\n\t}\n\t// if( $source ){\n\t// \t$source.toggleClass(classDragRemove, isMove);\n\t// }\n\t$(targetNode.span)\n\t\t.toggleClass(classDropTarget, hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\")\n\t\t.toggleClass(classDropAfter, hitMode === \"after\")\n\t\t.toggleClass(classDropBefore, hitMode === \"before\")\n\t\t.toggleClass(classDropAccept, hitMode === \"over\")\n\t\t.toggleClass(classDropReject, hitMode === false);\n\n\treturn hitMode;\n}\n\n/* *****************************************************************************\n *\n */\n\n$.ui.fancytree.registerExtension({\n\tname: \"dnd5\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tautoExpandMS: 1500,          // Expand nodes after n milliseconds of hovering\n\t\tsetTextTypeJson: false,      // Allow dragging of nodes to different IE windows\n\t\tpreventForeignNodes: false,  // Prevent dropping nodes from different Fancytrees\n\t\tpreventNonNodes: false,      // Prevent dropping items other than Fancytree nodes\n\t\tpreventRecursiveMoves: true, // Prevent dropping nodes on own descendants\n\t\tpreventVoidMoves: true,      // Prevent dropping nodes 'before self', etc.\n\t\tscroll: true,                // Enable auto-scrolling while dragging\n\t\tscrollSensitivity: 20,       // Active top/bottom margin in pixel\n\t\tscrollSpeed: 5,              // Pixel per event\n\t\tdropMarkerOffsetX: -24,\t\t // absolute position offset for .fancytree-drop-marker relatively to ..fancytree-title (icon/img near a node accepting drop)\n\t\tdropMarkerInsertOffsetX: -16,// additional offset for drop-marker with hitMode = \"before\"/\"after\"\n\t\t// Events (drag support)\n\t\tdragStart: null,       // Callback(sourceNode, data), return true, to enable dnd drag\n\t\tdragDrag: $.noop,      // Callback(sourceNode, data)\n\t\tdragEnd: $.noop,       // Callback(sourceNode, data)\n\t\t// Events (drop support)\n\t\tdragEnter: null,       // Callback(targetNode, data), return true, to enable dnd drop\n\t\tdragOver: $.noop,      // Callback(targetNode, data)\n\t\tdragExpand: $.noop,    // Callback(targetNode, data), return false to prevent autoExpand\n\t\tdragDrop: $.noop,      // Callback(targetNode, data)\n\t\tdragLeave: $.noop      // Callback(targetNode, data)\n\t},\n\n\ttreeInit: function(ctx){\n\t\tvar $temp,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\tglyph = opts.glyph || null,\n\t\t\tdndOpts = opts.dnd5,\n\t\t\tgetNode = FT.getNode;\n\n\t\tif( $.inArray(\"dnd\", opts.extensions) >= 0 ) {\n\t\t\t$.error(\"Extensions 'dnd' and 'dnd5' are mutually exclusive.\");\n\t\t}\n\t\tif( dndOpts.dragStop ) {\n\t\t\t$.error(\"dragStop is not used by ext-dnd5. Use dragEnd instead.\");\n\t\t}\n\n\t\t// Implement `opts.createNode` event to add the 'draggable' attribute\n\t\t// #680: this must happen before calling super.treeInit()\n\t\tif( dndOpts.dragStart ) {\n\t\t\tFT.overrideMethod(ctx.options, \"createNode\", function(event, data) {\n\t\t\t\t// Default processing if any\n\t\t\t\tthis._super.apply(this, arguments);\n\n\t\t\t\tdata.node.span.draggable = true;\n\t\t\t});\n\t\t}\n\t\tthis._superApply(arguments);\n\n\t\tthis.$container.addClass(\"fancytree-ext-dnd5\");\n\n\t\t// Store the current scroll parent, which may be the tree\n\t\t// container, any enclosing div, or the document.\n\t\t// #761: scrollParent() always needs a container child\n\t\t$temp = $(\"<span>\").appendTo(this.$container);\n\t\tthis.$scrollParent = $temp.scrollParent();\n\t\t$temp.remove();\n\n\t\t$dropMarker = $(\"#fancytree-drop-marker\");\n\t\tif( !$dropMarker.length ) {\n\t\t\t$dropMarker = $(\"<div id='fancytree-drop-marker'></div>\")\n\t\t\t\t.hide()\n\t\t\t\t.css({\n\t\t\t\t\t\"z-index\": 1000,\n\t\t\t\t\t// Drop marker should not steal dragenter/dragover events:\n\t\t\t\t\t\"pointer-events\": \"none\"\n\t\t\t\t}).prependTo(\"body\");\n\t\t\tif( glyph ) {\n\t\t\t\tFT.setSpanIcon($dropMarker[0], glyph.map._addClass, glyph.map.dropMarker);\n\t\t\t\t// $dropMarker.addClass(glyph.map._addClass + \" \" + glyph.map.dropMarker);\n\t\t\t}\n\t\t}\n\t\t// Enable drag support if dragStart() is specified:\n\t\tif( dndOpts.dragStart ) {\n\t\t\t// Bind drag event handlers\n\t\t\ttree.$container.on(\"dragstart drag dragend\", function(event){\n\t\t\t\tvar json,\n\t\t\t\t\tnode = getNode(event),\n\t\t\t\t\tdataTransfer = event.dataTransfer || event.originalEvent.dataTransfer,\n\t\t\t\t\tisMove = dataTransfer.dropEffect === \"move\",\n\t\t\t\t\t$source = node ? $(node.span) : null,\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\ttree: tree,\n\t\t\t\t\t\toptions: tree.options,\n\t\t\t\t\t\toriginalEvent: event,\n\t\t\t\t\t\tdataTransfer: dataTransfer,\n//\t\t\t\t\t\tdropEffect: undefined,  // set by dragend\n\t\t\t\t\t\tisCancelled: undefined  // set by dragend\n\t\t\t\t\t};\n\n\t\t\t\tswitch( event.type ) {\n\n\t\t\t\tcase \"dragstart\":\n\t\t\t\t\t$(node.span).addClass(classDragSource);\n\n\t\t\t\t\t// Store current source node in different formats\n\t\t\t\t\tSOURCE_NODE = node;\n\n\t\t\t\t\t// Set payload\n\t\t\t\t\t// Note:\n\t\t\t\t\t// Transfer data is only accessible on dragstart and drop!\n\t\t\t\t\t// For all other events the formats and kinds in the drag\n\t\t\t\t\t// data store list of items representing dragged data can be\n\t\t\t\t\t// enumerated, but the data itself is unavailable and no new\n\t\t\t\t\t// data can be added.\n\t\t\t\t\tjson = JSON.stringify(node.toDict());\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdataTransfer.setData(nodeMimeType, json);\n\t\t\t\t\t\tdataTransfer.setData(\"text/html\", $(node.span).html());\n\t\t\t\t\t\tdataTransfer.setData(\"text/plain\", node.title);\n\t\t\t\t\t} catch(ex) {\n\t\t\t\t\t\t// IE only accepts 'text' type\n\t\t\t\t\t\ttree.warn(\"Could not set data (IE only accepts 'text') - \" + ex);\n\t\t\t\t\t}\n\t\t\t\t\t// We always need to set the 'text' type if we want to drag\n\t\t\t\t\t// Because IE 11 only accepts this single type.\n\t\t\t\t\t// If we pass JSON here, IE can can access all node properties,\n\t\t\t\t\t// even when the source lives in another window. (D'n'd inside\n\t\t\t\t\t// the same window will always work.)\n\t\t\t\t\t// The drawback is, that in this case ALL browsers will see\n\t\t\t\t\t// the JSON representation as 'text', so dragging\n\t\t\t\t\t// to a text field will insert the JSON string instead of\n\t\t\t\t\t// the node title.\n\t\t\t\t\tif( dndOpts.setTextTypeJson ) {\n\t\t\t\t\t\tdataTransfer.setData(\"text\", json);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataTransfer.setData(\"text\", node.title);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the allowed and current drag mode (move, copy, or link)\n\t\t\t\t\tdataTransfer.effectAllowed = \"all\";  // \"copyMove\"\n\t\t\t\t\t// dataTransfer.dropEffect = \"move\";\n\n\t\t\t\t\t// Set the title as drag image (otherwise it would contain the expander)\n\t\t\t\t\tif( dataTransfer.setDragImage ) {\n\t\t\t\t\t\t// IE 11 does not support this\n\t\t\t\t\t\tdataTransfer.setDragImage($(node.span).find(\".fancytree-title\")[0], -10, -10);\n\t\t\t\t\t\t// dataTransfer.setDragImage($(node.span)[0], -10, -10);\n\t\t\t\t\t}\n\t\t\t\t\t// Let user modify above settings\n\t\t\t\t\treturn dndOpts.dragStart(node, data) !== false;\n\n\t\t\t\tcase \"drag\":\n\t\t\t\t\t// Called every few miliseconds\n\t\t\t\t\t$source.toggleClass(classDragRemove, isMove);\n\t\t\t\t\tdndOpts.dragDrag(node, data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dragend\":\n\t\t\t\t\t$(node.span).removeClass(classDragSource + \" \" + classDragRemove);\n\t\t\t\t\tSOURCE_NODE = null;\n\t\t\t\t\tDRAG_ENTER_RESPONSE = null;\n//\t\t\t\t\tdata.dropEffect = dataTransfer.dropEffect;\n\t\t\t\t\tdata.isCancelled = (dataTransfer.dropEffect === \"none\");\n\t\t\t\t\t$dropMarker.hide();\n\t\t\t\t\tdndOpts.dragEnd(node, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Enable drop support if dragEnter() is specified:\n\t\tif( dndOpts.dragEnter ) {\n\t\t\t// Bind drop event handlers\n\t\t\ttree.$container.on(\"dragenter dragover dragleave drop\", function(event){\n\t\t\t\tvar json, nodeData, r, res,\n\t\t\t\t\tallowDrop = null,\n\t\t\t\t\tnode = getNode(event),\n\t\t\t\t\tdataTransfer = event.dataTransfer || event.originalEvent.dataTransfer,\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\ttree: tree,\n\t\t\t\t\t\toptions: tree.options,\n\t\t\t\t\t\thitMode: DRAG_ENTER_RESPONSE,\n\t\t\t\t\t\toriginalEvent: event,\n\t\t\t\t\t\tdataTransfer: dataTransfer,\n\t\t\t\t\t\totherNode: SOURCE_NODE || null,\n\t\t\t\t\t\totherNodeData: null,    // set by drop event\n\t\t\t\t\t\tdropEffect: undefined,  // set by drop event\n\t\t\t\t\t\tisCancelled: undefined  // set by drop event\n\t\t\t\t\t};\n\n\t\t\t\tswitch( event.type ) {\n\n\t\t\t\tcase \"dragenter\":\n\t\t\t\t\t// The dragenter event is fired when a dragged element or\n\t\t\t\t\t// text selection enters a valid drop target.\n\n\t\t\t\t\tif( !node ) {\n\t\t\t\t\t\t// Sometimes we get dragenter for the container element\n\t\t\t\t\t\ttree.debug(\"Ignore non-node \" + event.type + \": \" + event.target.tagName + \".\" + event.target.className);\n\t\t\t\t\t\tDRAG_ENTER_RESPONSE = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(node.span)\n\t\t\t\t\t\t.addClass(classDropOver)\n\t\t\t\t\t\t.removeClass(classDropAccept + \" \" + classDropReject);\n\n\t\t\t\t\tif( dndOpts.preventNonNodes && !nodeData ) {\n\t\t\t\t\t\tnode.debug(\"Reject dropping a non-node\");\n\t\t\t\t\t\tDRAG_ENTER_RESPONSE = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if( dndOpts.preventForeignNodes && (!SOURCE_NODE || SOURCE_NODE.tree !== node.tree ) ) {\n\t\t\t\t\t\tnode.debug(\"Reject dropping a foreign node\");\n\t\t\t\t\t\tDRAG_ENTER_RESPONSE = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// NOTE: dragenter is fired BEFORE the dragleave event\n\t\t\t\t\t// of the previous element!\n\t\t\t\t\t// https://www.w3.org/Bugs/Public/show_bug.cgi?id=19041\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t// node.info(\"DELAYED \" + event.type, event.target, DRAG_ENTER_RESPONSE);\n\t\t\t\t\t\t// Auto-expand node (only when 'over' the node, not 'before', or 'after')\n\t\t\t\t\t\tif( dndOpts.autoExpandMS &&\n\t\t\t\t\t\t\tnode.hasChildren() !== false && !node.expanded &&\n\t\t\t\t\t\t\t(!dndOpts.dragExpand || dndOpts.dragExpand(node, data) !== false)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnode.scheduleAction(\"expand\", dndOpts.autoExpandMS);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\n\t\t\t\t\t$dropMarker.show();\n\n\t\t\t\t\t// Call dragEnter() to figure out if (and where) dropping is allowed\n\t\t\t\t\tif( dndOpts.preventRecursiveMoves && node.isDescendantOf(data.otherNode) ){\n\t\t\t\t\t\tres = false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tr = dndOpts.dragEnter(node, data);\n\t\t\t\t\t\tres = normalizeDragEnterResponse(r);\n\t\t\t\t\t}\n\t\t\t\t\tDRAG_ENTER_RESPONSE = res;\n\n\t\t\t\t\tallowDrop = res && ( res.over || res.before || res.after );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dragover\":\n\t\t\t\t\t// The dragover event is fired when an element or text\n\t\t\t\t\t// selection is being dragged over a valid drop target\n\t\t\t\t\t// (every few hundred milliseconds).\n\t\t\t\t\tLAST_HIT_MODE = handleDragOver(event, data);\n\t\t\t\t\tallowDrop = !!LAST_HIT_MODE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dragleave\":\n\t\t\t\t\t// NOTE: dragleave is fired AFTER the dragenter event of the\n\t\t\t\t\t// FOLLOWING element.\n\t\t\t\t\tif( !node ) {\n\t\t\t\t\t\ttree.debug(\"Ignore non-node \" + event.type + \": \" + event.target.tagName + \".\" + event.target.className);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif( !$(node.span).hasClass(classDropOver) ) {\n\t\t\t\t\t\tnode.debug(\"Ignore dragleave (multi)\"); //, event.currentTarget);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t$(node.span).removeClass(classDropOver + \" \" + classDropAccept + \" \" + classDropReject);\n\t\t\t\t\tnode.scheduleAction(\"cancel\");\n\t\t\t\t\tdndOpts.dragLeave(node, data);\n\t\t\t\t\t$dropMarker.hide();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"drop\":\n\t\t\t\t\t// Data is only readable in the (dragenter and) drop event:\n\n\t\t\t\t\tif( $.inArray(nodeMimeType, dataTransfer.types) >= 0 ) {\n\t\t\t\t\t\tnodeData = dataTransfer.getData(nodeMimeType);\n\t\t\t\t\t\ttree.info(event.type + \": getData('application/x-fancytree-node'): '\" + nodeData + \"'\");\n\t\t\t\t\t}\n\t\t\t\t\tif( !nodeData ) {\n\t\t\t\t\t\t// 1. Source is not a Fancytree node, or\n\t\t\t\t\t\t// 2. If the FT mime type was set, but returns '', this\n\t\t\t\t\t\t//    is probably IE 11 (which only supports 'text')\n\t\t\t\t\t\tnodeData = dataTransfer.getData(\"text\");\n\t\t\t\t\t\ttree.info(event.type + \": getData('text'): '\" + nodeData + \"'\");\n\t\t\t\t\t}\n\t\t\t\t\tif( nodeData ) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// 'text' type may contain JSON if IE is involved\n\t\t\t\t\t\t\t// and setTextTypeJson option was set\n\t\t\t\t\t\t\tjson = JSON.parse(nodeData);\n\t\t\t\t\t\t\tif( json.title !== undefined ) {\n\t\t\t\t\t\t\t\tdata.otherNodeData = json;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(ex) {\n\t\t\t\t\t\t\t// assume 'text' type contains plain text, so `otherNodeData`\n\t\t\t\t\t\t\t// should not be set\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttree.debug(event.type + \": nodeData: '\" + nodeData + \"', otherNodeData: \", data.otherNodeData);\n\n\t\t\t\t\t$(node.span).removeClass(classDropOver + \" \" + classDropAccept + \" \" + classDropReject);\n\t\t\t\t\t$dropMarker.hide();\n\n\t\t\t\t\tdata.hitMode = LAST_HIT_MODE;\n\t\t\t\t\tdata.dropEffect = dataTransfer.dropEffect;\n\t\t\t\t\tdata.isCancelled = data.dropEffect === \"none\";\n\n\t\t\t\t\t// Let user implement the actual drop operation\n\t\t\t\t\tdndOpts.dragDrop(node, data);\n\n\t\t\t\t\t// Prevent browser's default drop handling\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Dnd API madness: we must PREVENT default handling to enable dropping\n\t\t\t\tif( allowDrop ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.edit.js\n *\n * Make node titles editable.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n\n/*******************************************************************************\n * Private functions and variables\n */\n\nvar isMac = /Mac/.test(navigator.platform),\n\tescapeHtml = $.ui.fancytree.escapeHtml,\n\tunescapeHtml = $.ui.fancytree.unescapeHtml;\n\n/**\n * [ext-edit] Start inline editing of current node title.\n *\n * @alias FancytreeNode#editStart\n * @requires Fancytree\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.editStart = function(){\n\tvar $input,\n\t\tnode = this,\n\t\ttree = this.tree,\n\t\tlocal = tree.ext.edit,\n\t\tinstOpts = tree.options.edit,\n\t\t$title = $(\".fancytree-title\", node.span),\n\t\teventData = {\n\t\t\tnode: node,\n\t\t\ttree: tree,\n\t\t\toptions: tree.options,\n\t\t\tisNew: $(node[tree.statusClassPropName]).hasClass(\"fancytree-edit-new\"),\n\t\t\torgTitle: node.title,\n\t\t\tinput: null,\n\t\t\tdirty: false\n\t\t\t};\n\n\t// beforeEdit may want to modify the title before editing\n\tif( instOpts.beforeEdit.call(node, {type: \"beforeEdit\"}, eventData) === false ) {\n\t\treturn false;\n\t}\n\t$.ui.fancytree.assert(!local.currentNode, \"recursive edit\");\n\tlocal.currentNode = this;\n\tlocal.eventData = eventData;\n\n\t// Disable standard Fancytree mouse- and key handling\n\ttree.widget._unbind();\n\t// #116: ext-dnd prevents the blur event, so we have to catch outer clicks\n\t$(document).on(\"mousedown.fancytree-edit\", function(event){\n\t\tif( ! $(event.target).hasClass(\"fancytree-edit-input\") ){\n\t\t\tnode.editEnd(true, event);\n\t\t}\n\t});\n\n\t// Replace node with <input>\n\t$input = $(\"<input />\", {\n\t\t\"class\": \"fancytree-edit-input\",\n\t\ttype: \"text\",\n\t\tvalue: tree.options.escapeTitles ? eventData.orgTitle : unescapeHtml(eventData.orgTitle)\n\t});\n\tlocal.eventData.input = $input;\n\tif ( instOpts.adjustWidthOfs != null ) {\n\t\t$input.width($title.width() + instOpts.adjustWidthOfs);\n\t}\n\tif ( instOpts.inputCss != null ) {\n\t\t$input.css(instOpts.inputCss);\n\t}\n\n\t$title.html($input);\n\n\t// Focus <input> and bind keyboard handler\n\t$input\n\t\t.focus()\n\t\t.change(function(event){\n\t\t\t$input.addClass(\"fancytree-edit-dirty\");\n\t\t}).keydown(function(event){\n\t\t\tswitch( event.which ) {\n\t\t\tcase $.ui.keyCode.ESCAPE:\n\t\t\t\tnode.editEnd(false, event);\n\t\t\t\tbreak;\n\t\t\tcase $.ui.keyCode.ENTER:\n\t\t\t\tnode.editEnd(true, event);\n\t\t\t\treturn false; // so we don't start editmode on Mac\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t}).blur(function(event){\n\t\t\treturn node.editEnd(true, event);\n\t\t});\n\n\tinstOpts.edit.call(node, {type: \"edit\"}, eventData);\n};\n\n\n/**\n * [ext-edit] Stop inline editing.\n * @param {Boolean} [applyChanges=false] false: cancel edit, true: save (if modified)\n * @alias FancytreeNode#editEnd\n * @requires jquery.fancytree.edit.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function(applyChanges, _event){\n\tvar newVal,\n\t\tnode = this,\n\t\ttree = this.tree,\n\t\tlocal = tree.ext.edit,\n\t\teventData = local.eventData,\n\t\tinstOpts = tree.options.edit,\n\t\t$title = $(\".fancytree-title\", node.span),\n\t\t$input = $title.find(\"input.fancytree-edit-input\");\n\n\tif( instOpts.trim ) {\n\t\t$input.val($.trim($input.val()));\n\t}\n\tnewVal = $input.val();\n\n\teventData.dirty = ( newVal !== node.title );\n\teventData.originalEvent = _event;\n\n\t// Find out, if saving is required\n\tif( applyChanges === false ) {\n\t\t// If true/false was passed, honor this (except in rename mode, if unchanged)\n\t\teventData.save = false;\n\t} else if( eventData.isNew ) {\n\t\t// In create mode, we save everything, except for empty text\n\t\teventData.save = (newVal !== \"\");\n\t} else {\n\t\t// In rename mode, we save everyting, except for empty or unchanged text\n\t\teventData.save = eventData.dirty && (newVal !== \"\");\n\t}\n\t// Allow to break (keep editor open), modify input, or re-define data.save\n\tif( instOpts.beforeClose.call(node, {type: \"beforeClose\"}, eventData) === false){\n\t\treturn false;\n\t}\n\tif( eventData.save && instOpts.save.call(node, {type: \"save\"}, eventData) === false){\n\t\treturn false;\n\t}\n\t$input\n\t\t.removeClass(\"fancytree-edit-dirty\")\n\t\t.off();\n\t// Unbind outer-click handler\n\t$(document).off(\".fancytree-edit\");\n\n\tif( eventData.save ) {\n\t\t// # 171: escape user input (not required if global escaping is on)\n\t\tnode.setTitle( tree.options.escapeTitles ? newVal : escapeHtml(newVal) );\n\t\tnode.setFocus();\n\t}else{\n\t\tif( eventData.isNew ) {\n\t\t\tnode.remove();\n\t\t\tnode = eventData.node = null;\n\t\t\tlocal.relatedNode.setFocus();\n\t\t} else {\n\t\t\tnode.renderTitle();\n\t\t\tnode.setFocus();\n\t\t}\n\t}\n\tlocal.eventData = null;\n\tlocal.currentNode = null;\n\tlocal.relatedNode = null;\n\t// Re-enable mouse and keyboard handling\n\ttree.widget._bind();\n\t// Set keyboard focus, even if setFocus() claims 'nothing to do'\n\t$(tree.$container).focus();\n\teventData.input = null;\n\tinstOpts.close.call(node, {type: \"close\"}, eventData);\n\treturn true;\n};\n\n\n/**\n* [ext-edit] Create a new child or sibling node and start edit mode.\n*\n* @param {String} [mode='child'] 'before', 'after', or 'child'\n* @param {Object} [init] NodeData (or simple title string)\n* @alias FancytreeNode#editCreateNode\n* @requires jquery.fancytree.edit.js\n* @since 2.4\n*/\n$.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function(mode, init){\n\tvar newNode,\n\t\ttree = this.tree,\n\t\tself = this;\n\n\tmode = mode || \"child\";\n\tif( init == null ) {\n\t\tinit = { title: \"\" };\n\t} else if( typeof init === \"string\" ) {\n\t\tinit = { title: init };\n\t} else {\n\t\t$.ui.fancytree.assert($.isPlainObject(init));\n\t}\n\t// Make sure node is expanded (and loaded) in 'child' mode\n\tif( mode === \"child\" && !this.isExpanded() && this.hasChildren() !== false ) {\n\t\tthis.setExpanded().done(function(){\n\t\t\tself.editCreateNode(mode, init);\n\t\t});\n\t\treturn;\n\t}\n\tnewNode = this.addNode(init, mode);\n\n\t// #644: Don't filter new nodes.\n\tnewNode.match = true;\n\t$(newNode[tree.statusClassPropName])\n\t\t.removeClass(\"fancytree-hide\")\n\t\t.addClass(\"fancytree-match\");\n\n\tnewNode.makeVisible(/*{noAnimation: true}*/).done(function(){\n\t\t$(newNode[tree.statusClassPropName]).addClass(\"fancytree-edit-new\");\n\t\tself.tree.ext.edit.relatedNode = self;\n\t\tnewNode.editStart();\n\t});\n};\n\n\n/**\n * [ext-edit] Check if any node in this tree  in edit mode.\n *\n * @returns {FancytreeNode | null}\n * @alias Fancytree#isEditing\n * @requires jquery.fancytree.edit.js\n */\n$.ui.fancytree._FancytreeClass.prototype.isEditing = function(){\n\treturn this.ext.edit ? this.ext.edit.currentNode : null;\n};\n\n\n/**\n * [ext-edit] Check if this node is in edit mode.\n * @returns {Boolean} true if node is currently beeing edited\n * @alias FancytreeNode#isEditing\n * @requires jquery.fancytree.edit.js\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function(){\n\treturn this.tree.ext.edit ? this.tree.ext.edit.currentNode === this : false;\n};\n\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"edit\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tadjustWidthOfs: 4,   // null: don't adjust input size to content\n\t\tallowEmpty: false,   // Prevent empty input\n\t\tinputCss: {minWidth: \"3em\"},\n\t\t// triggerCancel: [\"esc\", \"tab\", \"click\"],\n\t\ttriggerStart: [\"f2\", \"mac+enter\", \"shift+click\"],\n\t\ttrim: true,          // Trim whitespace before save\n\t\t// Events:\n\t\tbeforeClose: $.noop, // Return false to prevent cancel/save (data.input is available)\n\t\tbeforeEdit: $.noop,  // Return false to prevent edit mode\n\t\tclose: $.noop,       // Editor was removed\n\t\tedit: $.noop,        // Editor was opened (available as data.input)\n//\t\tkeypress: $.noop,    // Not yet implemented\n\t\tsave: $.noop         // Save data.input.val() or return false to keep editor open\n\t},\n\t// Local attributes\n\tcurrentNode: null,\n\n\ttreeInit: function(ctx){\n\t\tthis._superApply(arguments);\n\t\tthis.$container.addClass(\"fancytree-ext-edit\");\n\t},\n\tnodeClick: function(ctx) {\n\t\tif( $.inArray(\"shift+click\", ctx.options.edit.triggerStart) >= 0 ){\n\t\t\tif( ctx.originalEvent.shiftKey ){\n\t\t\t\tctx.node.editStart();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif( $.inArray(\"clickActive\", ctx.options.edit.triggerStart) >= 0 ){\n\t\t\t// Only when click was inside title text (not aynwhere else in the row)\n\t\t\tif( ctx.node.isActive() && !ctx.node.isEditing() &&\n\t\t\t\t$(ctx.originalEvent.target).hasClass(\"fancytree-title\")\n\t\t\t){\n\t\t\t\tctx.node.editStart();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn this._superApply(arguments);\n\t},\n\tnodeDblclick: function(ctx) {\n\t\tif( $.inArray(\"dblclick\", ctx.options.edit.triggerStart) >= 0 ){\n\t\t\tctx.node.editStart();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._superApply(arguments);\n\t},\n\tnodeKeydown: function(ctx) {\n\t\tswitch( ctx.originalEvent.which ) {\n\t\tcase 113: // [F2]\n\t\t\tif( $.inArray(\"f2\", ctx.options.edit.triggerStart) >= 0 ){\n\t\t\t\tctx.node.editStart();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.ENTER:\n\t\t\tif( $.inArray(\"mac+enter\", ctx.options.edit.triggerStart) >= 0 && isMac ){\n\t\t\t\tctx.node.editStart();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn this._superApply(arguments);\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.filter.js\n *\n * Remove or highlight tree nodes, based on a filter.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n\n/*******************************************************************************\n * Private functions and variables\n */\n\nvar KeyNoData = \"__not_found__\",\n\tescapeHtml = $.ui.fancytree.escapeHtml;\n\nfunction _escapeRegex(str){\n\t/*jshint regexdash:true */\n\treturn (str + \"\").replace(/([.?*+\\^\\$\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n}\n\nfunction extractHtmlText(s){\n\tif( s.indexOf(\">\") >= 0 ) {\n\t\treturn $(\"<div/>\").html(s).text();\n\t}\n\treturn s;\n}\n\n$.ui.fancytree._FancytreeClass.prototype._applyFilterImpl = function(filter, branchMode, _opts){\n\tvar match, statusNode, re, reHighlight, temp,\n\t\tcount = 0,\n\t\ttreeOpts = this.options,\n\t\tescapeTitles = treeOpts.escapeTitles,\n\t\tprevAutoCollapse = treeOpts.autoCollapse,\n\t\topts = $.extend({}, treeOpts.filter, _opts),\n\t\thideMode = opts.mode === \"hide\",\n\t\tleavesOnly = !!opts.leavesOnly && !branchMode;\n\n\t// Default to 'match title substring (not case sensitive)'\n\tif(typeof filter === \"string\"){\n\t\tif( filter === \"\" ) {\n\t\t\tthis.warn(\"Fancytree passing an empty string as a filter is handled as clearFilter().\");\n\t\t\tthis.clearFilter();\n\t\t\treturn;\n\t\t}\n\t\tif( opts.fuzzy ) {\n\t\t\t// See https://codereview.stackexchange.com/questions/23899/faster-javascript-fuzzy-string-matching-function/23905#23905\n\t\t\t// and http://www.quora.com/How-is-the-fuzzy-search-algorithm-in-Sublime-Text-designed\n\t\t\t// and http://www.dustindiaz.com/autocomplete-fuzzy-matching\n\t\t\tmatch = filter.split(\"\").reduce(function(a, b) {\n\t\t\t\treturn a + \"[^\" + b + \"]*\" + b;\n\t\t\t});\n\t\t} else {\n\t\t\tmatch = _escapeRegex(filter); // make sure a '.' is treated literally\n\t\t}\n\t\tre = new RegExp(\".*\" + match + \".*\", \"i\");\n\t\treHighlight = new RegExp(_escapeRegex(filter), \"gi\");\n\t\tfilter = function(node){\n\t\t\tvar text = escapeTitles ? node.title : extractHtmlText(node.title),\n\t\t\t\tres = !!re.test(text);\n\n\t\t\tif( res && opts.highlight ) {\n\t\t\t\tif( escapeTitles ) {\n\t\t\t\t\t// #740: we must not apply the marks to escaped entity names, e.g. `&quot;`\n\t\t\t\t\t// Use some exotic characters to mark matches:\n\t\t\t\t\ttemp = text.replace(reHighlight, function(s){\n\t\t\t\t\t\treturn \"\\uFFF7\" + s + \"\\uFFF8\";\n\t\t\t\t\t});\n\t\t\t\t\t// now we can escape the title...\n\t\t\t\t\tnode.titleWithHighlight = escapeHtml(temp)\n\t\t\t\t\t\t// ... and finally insert the desired `<mark>` tags\n\t\t\t\t\t\t.replace(/\\uFFF7/g, \"<mark>\")\n\t\t\t\t\t\t.replace(/\\uFFF8/g, \"</mark>\");\n\t\t\t\t} else {\n\t\t\t\t\tnode.titleWithHighlight = text.replace(reHighlight, function(s){\n\t\t\t\t\t\treturn \"<mark>\" + s + \"</mark>\";\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// node.debug(\"filter\", escapeTitles, text, node.titleWithHighlight);\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t}\n\n\tthis.enableFilter = true;\n\tthis.lastFilterArgs = arguments;\n\n\tthis.$div.addClass(\"fancytree-ext-filter\");\n\tif( hideMode ){\n\t\tthis.$div.addClass(\"fancytree-ext-filter-hide\");\n\t} else {\n\t\tthis.$div.addClass(\"fancytree-ext-filter-dimm\");\n\t}\n\tthis.$div.toggleClass(\"fancytree-ext-filter-hide-expanders\", !!opts.hideExpanders);\n\t// Reset current filter\n\tthis.visit(function(node){\n\t\tdelete node.match;\n\t\tdelete node.titleWithHighlight;\n\t\tnode.subMatchCount = 0;\n\t});\n\tstatusNode = this.getRootNode()._findDirectChild(KeyNoData);\n\tif( statusNode ) {\n\t\tstatusNode.remove();\n\t}\n\n\t// Adjust node.hide, .match, and .subMatchCount properties\n\ttreeOpts.autoCollapse = false;  // #528\n\n\tthis.visit(function(node){\n\t\tif ( leavesOnly && node.children != null ) {\n\t\t\treturn;\n\t\t}\n\t\tvar res = filter(node),\n\t\t\tmatchedByBranch = false;\n\n\t\tif( res === \"skip\" ) {\n\t\t\tnode.visit(function(c){\n\t\t\t\tc.match = false;\n\t\t\t}, true);\n\t\t\treturn \"skip\";\n\t\t}\n\t\tif( !res && (branchMode || res === \"branch\") && node.parent.match ) {\n\t\t\tres = true;\n\t\t\tmatchedByBranch = true;\n\t\t}\n\t\tif( res ) {\n\t\t\tcount++;\n\t\t\tnode.match = true;\n\t\t\tnode.visitParents(function(p){\n\t\t\t\tp.subMatchCount += 1;\n\t\t\t\t// Expand match (unless this is no real match, but only a node in a matched branch)\n\t\t\t\tif( opts.autoExpand && !matchedByBranch && !p.expanded ) {\n\t\t\t\t\tp.setExpanded(true, {noAnimation: true, noEvents: true, scrollIntoView: false});\n\t\t\t\t\tp._filterAutoExpanded = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\ttreeOpts.autoCollapse = prevAutoCollapse;\n\n\tif( count === 0 && opts.nodata && hideMode ) {\n\t\tstatusNode = opts.nodata;\n\t\tif( $.isFunction(statusNode) ) {\n\t\t\tstatusNode = statusNode();\n\t\t}\n\t\tif( statusNode === true ) {\n\t\t\tstatusNode = {};\n\t\t} else if( typeof statusNode === \"string\" ) {\n\t\t\tstatusNode = { title: statusNode };\n\t\t}\n\t\tstatusNode = $.extend({\n\t\t\tstatusNodeType: \"nodata\",\n\t\t\tkey: KeyNoData,\n\t\t\ttitle: this.options.strings.noData\n\t\t}, statusNode);\n\n\t\tthis.getRootNode().addNode(statusNode).match = true;\n\t}\n\t// Redraw whole tree\n\tthis.render();\n\treturn count;\n};\n\n/**\n * [ext-filter] Dimm or hide nodes.\n *\n * @param {function | string} filter\n * @param {boolean} [opts={autoExpand: false, leavesOnly: false}]\n * @returns {integer} count\n * @alias Fancytree#filterNodes\n * @requires jquery.fancytree.filter.js\n */\n$.ui.fancytree._FancytreeClass.prototype.filterNodes = function(filter, opts) {\n\tif( typeof opts === \"boolean\" ) {\n\t\topts = { leavesOnly: opts };\n\t\tthis.warn(\"Fancytree.filterNodes() leavesOnly option is deprecated since 2.9.0 / 2015-04-19. Use opts.leavesOnly instead.\");\n\t}\n\treturn this._applyFilterImpl(filter, false, opts);\n};\n\n/**\n * @deprecated\n */\n$.ui.fancytree._FancytreeClass.prototype.applyFilter = function(filter){\n\tthis.warn(\"Fancytree.applyFilter() is deprecated since 2.1.0 / 2014-05-29. Use .filterNodes() instead.\");\n\treturn this.filterNodes.apply(this, arguments);\n};\n\n/**\n * [ext-filter] Dimm or hide whole branches.\n *\n * @param {function | string} filter\n * @param {boolean} [opts={autoExpand: false}]\n * @returns {integer} count\n * @alias Fancytree#filterBranches\n * @requires jquery.fancytree.filter.js\n */\n$.ui.fancytree._FancytreeClass.prototype.filterBranches = function(filter, opts){\n\treturn this._applyFilterImpl(filter, true, opts);\n};\n\n\n/**\n * [ext-filter] Reset the filter.\n *\n * @alias Fancytree#clearFilter\n * @requires jquery.fancytree.filter.js\n */\n$.ui.fancytree._FancytreeClass.prototype.clearFilter = function(){\n\tvar $title,\n\t\tstatusNode = this.getRootNode()._findDirectChild(KeyNoData),\n\t\tescapeTitles = this.options.escapeTitles,\n\t\tenhanceTitle = this.options.enhanceTitle;\n\n\tif( statusNode ) {\n\t\tstatusNode.remove();\n\t}\n\tthis.visit(function(node){\n\t\tif( node.match && node.span ) {  // #491, #601\n\t\t\t$title = $(node.span).find(\">span.fancytree-title\");\n\t\t\tif( escapeTitles ) {\n\t\t\t\t$title.text(node.title);\n\t\t\t} else {\n\t\t\t\t$title.html(node.title);\n\t\t\t}\n\t\t\tif( enhanceTitle ) {\n\t\t\t\tenhanceTitle({type: \"enhanceTitle\"}, {node: node, $title: $title});\n\t\t\t}\n\t\t}\n\t\tdelete node.match;\n\t\tdelete node.subMatchCount;\n\t\tdelete node.titleWithHighlight;\n\t\tif ( node.$subMatchBadge ) {\n\t\t\tnode.$subMatchBadge.remove();\n\t\t\tdelete node.$subMatchBadge;\n\t\t}\n\t\tif( node._filterAutoExpanded && node.expanded ) {\n\t\t\tnode.setExpanded(false, {noAnimation: true, noEvents: true, scrollIntoView: false});\n\t\t}\n\t\tdelete node._filterAutoExpanded;\n\t});\n\tthis.enableFilter = false;\n\tthis.lastFilterArgs = null;\n\tthis.$div.removeClass(\"fancytree-ext-filter fancytree-ext-filter-dimm fancytree-ext-filter-hide\");\n\tthis.render();\n};\n\n\n/**\n * [ext-filter] Return true if a filter is currently applied.\n *\n * @returns {Boolean}\n * @alias Fancytree#isFilterActive\n * @requires jquery.fancytree.filter.js\n * @since 2.13\n */\n$.ui.fancytree._FancytreeClass.prototype.isFilterActive = function(){\n\treturn !!this.enableFilter;\n};\n\n\n/**\n * [ext-filter] Return true if this node is matched by current filter (or no filter is active).\n *\n * @returns {Boolean}\n * @alias FancytreeNode#isMatched\n * @requires jquery.fancytree.filter.js\n * @since 2.13\n */\n$.ui.fancytree._FancytreeNodeClass.prototype.isMatched = function(){\n\treturn !(this.tree.enableFilter && !this.match);\n};\n\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"filter\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tautoApply: true,   // Re-apply last filter if lazy data is loaded\n\t\tautoExpand: false, // Expand all branches that contain matches while filtered\n\t\tcounter: true,     // Show a badge with number of matching child nodes near parent icons\n\t\tfuzzy: false,      // Match single characters in order, e.g. 'fb' will match 'FooBar'\n\t\thideExpandedCounter: true,  // Hide counter badge if parent is expanded\n\t\thideExpanders: false,       // Hide expanders if all child nodes are hidden by filter\n\t\thighlight: true,   // Highlight matches by wrapping inside <mark> tags\n\t\tleavesOnly: false, // Match end nodes only\n\t\tnodata: true,      // Display a 'no data' status node if result is empty\n\t\tmode: \"dimm\"       // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\n\t},\n\tnodeLoadChildren: function(ctx, source) {\n\t\treturn this._superApply(arguments).done(function() {\n\t\t\tif( ctx.tree.enableFilter && ctx.tree.lastFilterArgs && ctx.options.filter.autoApply ) {\n\t\t\t\tctx.tree._applyFilterImpl.apply(ctx.tree, ctx.tree.lastFilterArgs);\n\t\t\t}\n\t\t});\n\t},\n\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\tdelete ctx.node._filterAutoExpanded;\n\t\t// Make sure counter badge is displayed again, when node is beeing collapsed\n\t\tif( !flag && ctx.options.filter.hideExpandedCounter && ctx.node.$subMatchBadge ) {\n\t\t\tctx.node.$subMatchBadge.show();\n\t\t}\n\t\treturn this._superApply(arguments);\n\t},\n\tnodeRenderStatus: function(ctx) {\n\t\t// Set classes for current status\n\t\tvar res,\n\t\t\tnode = ctx.node,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options.filter,\n\t\t\t$title = $(node.span).find(\"span.fancytree-title\"),\n\t\t\t$span = $(node[tree.statusClassPropName]),\n\t\t\tenhanceTitle = ctx.options.enhanceTitle,\n\t\t\tescapeTitles = ctx.options.escapeTitles;\n\n\t\tres = this._super(ctx);\n\t\t// nothing to do, if node was not yet rendered\n\t\tif( !$span.length || !tree.enableFilter ) {\n\t\t\treturn res;\n\t\t}\n\t\t$span\n\t\t\t.toggleClass(\"fancytree-match\", !!node.match)\n\t\t\t.toggleClass(\"fancytree-submatch\", !!node.subMatchCount)\n\t\t\t.toggleClass(\"fancytree-hide\", !(node.match || node.subMatchCount));\n\t\t// Add/update counter badge\n\t\tif( opts.counter && node.subMatchCount && (!node.isExpanded() || !opts.hideExpandedCounter) ) {\n\t\t\tif( !node.$subMatchBadge ) {\n\t\t\t\tnode.$subMatchBadge = $(\"<span class='fancytree-childcounter'/>\");\n\t\t\t\t$(\"span.fancytree-icon, span.fancytree-custom-icon\", node.span).append(node.$subMatchBadge);\n\t\t\t}\n\t\t\tnode.$subMatchBadge.show().text(node.subMatchCount);\n\t\t} else if ( node.$subMatchBadge ) {\n\t\t\tnode.$subMatchBadge.hide();\n\t\t}\n\t\t// node.debug(\"nodeRenderStatus\", node.titleWithHighlight, node.title)\n\t\t// #601: also chek for $title.length, because we don't need to render\n\t\t// if node.span is null (i.e. not rendered)\n\t\tif( node.span && (!node.isEditing || !node.isEditing.call(node)) ) {\n\t\t\tif( node.titleWithHighlight ) {\n\t\t\t\t$title.html(node.titleWithHighlight);\n\t\t\t} else if ( escapeTitles ) {\n\t\t\t\t$title.text(node.title);\n\t\t\t} else {\n\t\t\t\t$title.html(node.title);\n\t\t\t}\n\t\t\tif( enhanceTitle ) {\n\t\t\t\tenhanceTitle({type: \"enhanceTitle\"}, {node: node, $title: $title});\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.glyph.js\n *\n * Use glyph fonts as instead of icon sprites.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/* *****************************************************************************\n * Private functions and variables\n */\n\nvar FT = $.ui.fancytree,\n\tPRESETS = {\n\t\t\"awesome3\": {  // Outdated!\n\t\t\t_addClass: \"\",\n\t\t\tcheckbox: \"icon-check-empty\",\n\t\t\tcheckboxSelected: \"icon-check\",\n\t\t\tcheckboxUnknown: \"icon-check icon-muted\",\n\t\t\tdragHelper: \"icon-caret-right\",\n\t\t\tdropMarker: \"icon-caret-right\",\n\t\t\terror: \"icon-exclamation-sign\",\n\t\t\texpanderClosed: \"icon-caret-right\",\n\t\t\texpanderLazy: \"icon-angle-right\",\n\t\t\texpanderOpen: \"icon-caret-down\",\n\t\t\tloading: \"icon-refresh icon-spin\",\n\t\t\tnodata: \"icon-meh\",\n\t\t\tnoExpander: \"\",\n\t\t\tradio: \"icon-circle-blank\",\n\t\t\tradioSelected: \"icon-circle\",\n\t\t\t// radioUnknown: \"icon-circle icon-muted\",\n\t\t\t// Default node icons.\n\t\t\t// (Use tree.options.icon callback to define custom icons based on node data)\n\t\t\tdoc: \"icon-file-alt\",\n\t\t\tdocOpen: \"icon-file-alt\",\n\t\t\tfolder: \"icon-folder-close-alt\",\n\t\t\tfolderOpen: \"icon-folder-open-alt\"\n\t\t\t},\n\t\t\"awesome4\": {\n\t\t\t_addClass: \"fa\",\n\t\t\tcheckbox: \"fa-square-o\",\n\t\t\tcheckboxSelected: \"fa-check-square-o\",\n\t\t\tcheckboxUnknown: \"fa-square\",\n\t\t\tdragHelper: \"fa-arrow-right\",\n\t\t\tdropMarker: \"fa-long-arrow-right\",\n\t\t\terror: \"fa-warning\",\n\t\t\texpanderClosed: \"fa-caret-right\",\n\t\t\texpanderLazy: \"fa-angle-right\",\n\t\t\texpanderOpen: \"fa-caret-down\",\n\t\t\tloading: \"fa-spinner fa-pulse\",\n\t\t\tnodata: \"fa-meh-o\",\n\t\t\tnoExpander: \"\",\n\t\t\tradio: \"fa-circle-thin\",  // \"fa-circle-o\"\n\t\t\tradioSelected: \"fa-circle\",\n\t\t\t// radioUnknown: \"fa-dot-circle-o\",\n\t\t\t// Default node icons.\n\t\t\t// (Use tree.options.icon callback to define custom icons based on node data)\n\t\t\tdoc: \"fa-file-o\",\n\t\t\tdocOpen: \"fa-file-o\",\n\t\t\tfolder: \"fa-folder-o\",\n\t\t\tfolderOpen: \"fa-folder-open-o\"\n\t\t\t},\n\t\t\"bootstrap3\": {\n\t\t\t_addClass: \"glyphicon\",\n\t\t\tcheckbox: \"glyphicon-unchecked\",\n\t\t\tcheckboxSelected: \"glyphicon-check\",\n\t\t\tcheckboxUnknown: \"glyphicon-expand\",  // \"glyphicon-share\",\n\t\t\tdragHelper: \"glyphicon-play\",\n\t\t\tdropMarker: \"glyphicon-arrow-right\",\n\t\t\terror: \"glyphicon-warning-sign\",\n\t\t\texpanderClosed: \"glyphicon-menu-right\",  // glyphicon-plus-sign\n\t\t\texpanderLazy: \"glyphicon-menu-right\",  // glyphicon-plus-sign\n\t\t\texpanderOpen: \"glyphicon-menu-down\",  // glyphicon-minus-sign\n\t\t\tloading: \"glyphicon-refresh glyphicon-spin\",\n\t\t\tnodata: \"glyphicon-info-sign\",\n\t\t\tnoExpander: \"\",\n\t\t\tradio: \"glyphicon-remove-circle\",  // \"glyphicon-unchecked\",\n\t\t\tradioSelected: \"glyphicon-ok-circle\",  // \"glyphicon-check\",\n\t\t\t// radioUnknown: \"glyphicon-ban-circle\",\n\t\t\t// Default node icons.\n\t\t\t// (Use tree.options.icon callback to define custom icons based on node data)\n\t\t\tdoc: \"glyphicon-file\",\n\t\t\tdocOpen: \"glyphicon-file\",\n\t\t\tfolder: \"glyphicon-folder-close\",\n\t\t\tfolderOpen: \"glyphicon-folder-open\"\n\t\t\t},\n\t\t\"material\": {\n\t\t\t_addClass: \"material-icons\",\n\t\t\tcheckbox: { text: \"check_box_outline_blank\" },\n\t\t\tcheckboxSelected: { text: \"check_box\" },\n\t\t\tcheckboxUnknown: { text: \"indeterminate_check_box\" },\n\t\t\tdragHelper: { text: \"play_arrow\" },\n\t\t\tdropMarker: { text: \"arrow-forward\" },\n\t\t\terror: { text: \"warning\" },\n\t\t\texpanderClosed: { text: \"chevron_right\" },\n\t\t\texpanderLazy: { text: \"last_page\" },\n\t\t\texpanderOpen: { text: \"expand_more\" },\n\t\t\tloading: { text: \"autorenew\", addClass: \"glyphicon-spin\" },\n\t\t\tnodata: { text: \"info\" },\n\t\t\tnoExpander: { text: \"\" },\n\t\t\tradio: { text: \"radio_button_unchecked\" },\n\t\t\tradioSelected: { text: \"radio_button_checked\" },\n\t\t\t// Default node icons.\n\t\t\t// (Use tree.options.icon callback to define custom icons based on node data)\n\t\t\tdoc: { text: \"insert_drive_file\" },\n\t\t\tdocOpen: { text: \"insert_drive_file\" },\n\t\t\tfolder: { text: \"folder\" },\n\t\t\tfolderOpen: { text: \"folder_open\" }\n\t\t\t}\n\t};\n\n\nfunction setIcon( span, baseClass, opts, type ) {\n\tvar map = opts.map,\n\t\ticon = map[ type ],\n\t\t$span = $( span ),\n\t\tsetClass = baseClass + \" \" + (map._addClass || \"\");\n\n\tif( typeof icon === \"string\" ) {\n\t\t$span.attr( \"class\", setClass + \" \" + icon );\n\t} else {\n\t\tif( icon.text ) {\n\t\t\t$span.text( \"\" + icon.text );\n\t\t}\n\t\t$span.attr( \"class\", setClass + \" \" + ( icon.addClass || \"\" ) );\n\t}\n}\n\n\n$.ui.fancytree.registerExtension({\n\tname: \"glyph\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tpreset: null,  // 'awesome3', 'awesome4', 'bootstrap3', 'material'\n\t\tmap: {\n\t\t}\n\t},\n\n\ttreeInit: function(ctx){\n\t\tvar tree = ctx.tree,\n\t\t\topts = ctx.options.glyph;\n\n\t\tif( opts.preset ) {\n\t\t\tFT.assert( !!PRESETS[opts.preset],\n\t\t\t\t\"Invalid value for `options.glyph.preset`: \" + opts.preset);\n\t\t\topts.map = $.extend({}, PRESETS[opts.preset], opts.map);\n\t\t} else {\n\t\t\ttree.warn(\"ext-glyph: missing `preset` option.\");\n\t\t}\n\t\tthis._superApply(arguments);\n\t\ttree.$container.addClass(\"fancytree-ext-glyph\");\n\t},\n\tnodeRenderStatus: function(ctx) {\n\t\tvar checkbox, icon, res, span,\n\t\t\tnode = ctx.node,\n\t\t\t$span = $( node.span ),\n\t\t\topts = ctx.options.glyph;\n\n\t\tres = this._super(ctx);\n\n\t\tif( node.isRoot() ){\n\t\t\treturn res;\n\t\t}\n\t\tspan = $span.children(\"span.fancytree-expander\").get(0);\n\t\tif( span ){\n\t\t\t// if( node.isLoading() ){\n\t\t\t\t// icon = \"loading\";\n\t\t\tif( node.expanded && node.hasChildren() ){\n\t\t\t\ticon = \"expanderOpen\";\n\t\t\t}else if( node.isUndefined() ){\n\t\t\t\ticon = \"expanderLazy\";\n\t\t\t}else if( node.hasChildren() ){\n\t\t\t\ticon = \"expanderClosed\";\n\t\t\t}else{\n\t\t\t\ticon = \"noExpander\";\n\t\t\t}\n\t\t\t// span.className = \"fancytree-expander \" + map[icon];\n\t\t\tsetIcon( span, \"fancytree-expander\", opts, icon );\n\t\t}\n\n\t\tif( node.tr ){\n\t\t\tspan = $(\"td\", node.tr).find(\"span.fancytree-checkbox\").get(0);\n\t\t}else{\n\t\t\tspan = $span.children(\"span.fancytree-checkbox\").get(0);\n\t\t}\n\t\tif( span ) {\n\t\t\tcheckbox = FT.evalOption(\"checkbox\", node, node, opts, false);\n\t\t\tif( (node.parent && node.parent.radiogroup ) || checkbox === \"radio\" ) {\n\t\t\t\ticon = node.selected ? \"radioSelected\" : \"radio\";\n\t\t\t\tsetIcon( span, \"fancytree-checkbox fancytree-radio\", opts, icon );\n\t\t\t} else {\n\t\t\t\ticon = node.selected ? \"checkboxSelected\" : (node.partsel ? \"checkboxUnknown\" : \"checkbox\");\n\t\t\t\t// span.className = \"fancytree-checkbox \" + map[icon];\n\t\t\t\tsetIcon( span, \"fancytree-checkbox\", opts, icon );\n\t\t\t}\n\t\t}\n\n\t\t// Standard icon (note that this does not match .fancytree-custom-icon,\n\t\t// that might be set by opts.icon callbacks)\n\t\tspan = $span.children(\"span.fancytree-icon\").get(0);\n\t\tif( span ){\n\t\t\tif( node.statusNodeType ){\n\t\t\t\ticon = node.statusNodeType; // loading, error\n\t\t\t}else if( node.folder ){\n\t\t\t\ticon = ( node.expanded && node.hasChildren() ) ? \"folderOpen\" : \"folder\";\n\t\t\t}else{\n\t\t\t\ticon = node.expanded ? \"docOpen\" : \"doc\";\n\t\t\t}\n\t\t\tsetIcon( span, \"fancytree-icon\", opts, icon );\n\t\t}\n\t\treturn res;\n\t},\n\tnodeSetStatus: function(ctx, status, message, details) {\n\t\tvar res, span,\n\t\t\topts = ctx.options.glyph,\n\t\t\tnode = ctx.node;\n\n\t\tres = this._superApply(arguments);\n\n\t\tif( status === \"error\" || status === \"loading\" || status === \"nodata\" ){\n\t\t\tif(node.parent){\n\t\t\t\tspan = $(\"span.fancytree-expander\", node.span).get(0);\n\t\t\t\tif( span ) {\n\t\t\t\t\tsetIcon( span, \"fancytree-expander\", opts, status );\n\t\t\t\t}\n\t\t\t}else{ //\n\t\t\t\tspan = $(\".fancytree-statusnode-\" + status, node[this.nodeContainerAttrName])\n\t\t\t\t\t.find(\"span.fancytree-icon\").get(0);\n\t\t\t\tif( span ) {\n\t\t\t\t\tsetIcon( span, \"fancytree-icon\", opts, status );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.gridnav.js\n *\n * Support keyboard navigation for trees with embedded input controls.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([\n\t\t\t \"jquery\",\n\t\t\t \"./jquery.fancytree\",\n\t\t\t \"./jquery.fancytree.table\"\n\t\t ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree.table\");  // core + table\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n\n/*******************************************************************************\n * Private functions and variables\n */\n\n// Allow these navigation keys even when input controls are focused\n\nvar\tKC = $.ui.keyCode,\n\t// which keys are *not* handled by embedded control, but passed to tree\n\t// navigation handler:\n\tNAV_KEYS = {\n\t\t\"text\": [KC.UP, KC.DOWN],\n\t\t\"checkbox\": [KC.UP, KC.DOWN, KC.LEFT, KC.RIGHT],\n\t\t\"link\": [KC.UP, KC.DOWN, KC.LEFT, KC.RIGHT],\n\t\t\"radiobutton\": [KC.UP, KC.DOWN, KC.LEFT, KC.RIGHT],\n\t\t\"select-one\": [KC.LEFT, KC.RIGHT],\n\t\t\"select-multiple\": [KC.LEFT, KC.RIGHT]\n\t};\n\n\n/* Calculate TD column index (considering colspans).*/\nfunction getColIdx($tr, $td) {\n\tvar colspan,\n\t\ttd = $td.get(0),\n\t\tidx = 0;\n\n\t$tr.children().each(function () {\n\t\tif( this === td ) {\n\t\t\treturn false;\n\t\t}\n\t\tcolspan = $(this).prop(\"colspan\");\n\t\tidx += colspan ? colspan : 1;\n\t});\n\treturn idx;\n}\n\n\n/* Find TD at given column index (considering colspans).*/\nfunction findTdAtColIdx($tr, colIdx) {\n\tvar colspan,\n\t\tres = null,\n\t\tidx = 0;\n\n\t$tr.children().each(function () {\n\t\tif( idx >= colIdx ) {\n\t\t\tres = $(this);\n\t\t\treturn false;\n\t\t}\n\t\tcolspan = $(this).prop(\"colspan\");\n\t\tidx += colspan ? colspan : 1;\n\t});\n\treturn res;\n}\n\n\n/* Find adjacent cell for a given direction. Skip empty cells and consider merged cells */\nfunction findNeighbourTd($target, keyCode){\n\tvar $tr, colIdx,\n\t\t$td = $target.closest(\"td\"),\n\t\t$tdNext = null;\n\n\tswitch( keyCode ){\n\t\tcase KC.LEFT:\n\t\t\t$tdNext = $td.prev();\n\t\t\tbreak;\n\t\tcase KC.RIGHT:\n\t\t\t$tdNext = $td.next();\n\t\t\tbreak;\n\t\tcase KC.UP:\n\t\tcase KC.DOWN:\n\t\t\t$tr = $td.parent();\n\t\t\tcolIdx = getColIdx($tr, $td);\n\t\t\twhile( true ) {\n\t\t\t\t$tr = (keyCode === KC.UP) ? $tr.prev() : $tr.next();\n\t\t\t\tif( !$tr.length ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Skip hidden rows\n\t\t\t\tif( $tr.is(\":hidden\") ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Find adjacent cell in the same column\n\t\t\t\t$tdNext = findTdAtColIdx($tr, colIdx);\n\t\t\t\t// Skip cells that don't conatain a focusable element\n\t\t\t\tif( $tdNext && $tdNext.find(\":input,a\").length ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn $tdNext;\n}\n\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"gridnav\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tautofocusInput:   false,  // Focus first embedded input if node gets activated\n\t\thandleCursorKeys: true   // Allow UP/DOWN in inputs to move to prev/next node\n\t},\n\n\ttreeInit: function(ctx){\n\t\t// gridnav requires the table extension to be loaded before itself\n\t\tthis._requireExtension(\"table\", true, true);\n\t\tthis._superApply(arguments);\n\n\t\tthis.$container.addClass(\"fancytree-ext-gridnav\");\n\n\t\t// Activate node if embedded input gets focus (due to a click)\n\t\tthis.$container.on(\"focusin\", function(event){\n\t\t\tvar ctx2,\n\t\t\t\tnode = $.ui.fancytree.getNode(event.target);\n\n\t\t\tif( node && !node.isActive() ){\n\t\t\t\t// Call node.setActive(), but also pass the event\n\t\t\t\tctx2 = ctx.tree._makeHookContext(node, event);\n\t\t\t\tctx.tree._callHook(\"nodeSetActive\", ctx2, true);\n\t\t\t}\n\t\t});\n\t},\n\tnodeSetActive: function(ctx, flag, callOpts) {\n\t\tvar $outer,\n\t\t\topts = ctx.options.gridnav,\n\t\t\tnode = ctx.node,\n\t\t\tevent = ctx.originalEvent || {},\n\t\t\ttriggeredByInput = $(event.target).is(\":input\");\n\n\t\tflag = (flag !== false);\n\n\t\tthis._superApply(arguments);\n\n\t\tif( flag ){\n\t\t\tif( ctx.options.titlesTabbable ){\n\t\t\t\tif( !triggeredByInput ) {\n\t\t\t\t\t$(node.span).find(\"span.fancytree-title\").focus();\n\t\t\t\t\tnode.setFocus();\n\t\t\t\t}\n\t\t\t\t// If one node is tabbable, the container no longer needs to be\n\t\t\t\tctx.tree.$container.attr(\"tabindex\", \"-1\");\n\t\t\t\t// ctx.tree.$container.removeAttr(\"tabindex\");\n\t\t\t} else if( opts.autofocusInput && !triggeredByInput ){\n\t\t\t\t// Set focus to input sub input (if node was clicked, but not\n\t\t\t\t// when TAB was pressed )\n\t\t\t\t$outer = $(node.tr || node.span);\n\t\t\t\t$outer.find(\":input:enabled:first\").focus();\n\t\t\t}\n\t\t}\n\t},\n\tnodeKeydown: function(ctx) {\n\t\tvar inputType, handleKeys, $td,\n\t\t\topts = ctx.options.gridnav,\n\t\t\tevent = ctx.originalEvent,\n\t\t\t$target = $(event.target);\n\n\t\tif( $target.is(\":input:enabled\") ) {\n\t\t\tinputType = $target.prop(\"type\");\n\t\t} else if( $target.is(\"a\") ) {\n\t\t\tinputType = \"link\";\n\t\t}\n\t\t// ctx.tree.debug(\"ext-gridnav nodeKeydown\", event, inputType);\n\n\t\tif( inputType && opts.handleCursorKeys ){\n\t\t\thandleKeys = NAV_KEYS[inputType];\n\t\t\tif( handleKeys && $.inArray(event.which, handleKeys) >= 0 ){\n\t\t\t\t$td = findNeighbourTd($target, event.which);\n\t\t\t\tif( $td && $td.length ) {\n\t\t\t\t\t// ctx.node.debug(\"ignore keydown in input\", event.which, handleKeys);\n\t\t\t\t\t$td.find(\":input:enabled,a\").focus();\n\t\t\t\t\t// Prevent Fancytree default navigation\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t// ctx.tree.debug(\"ext-gridnav NOT HANDLED\", event, inputType);\n\t\treturn this._superApply(arguments);\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.persist.js\n *\n * Persist tree status in cookiesRemove or highlight tree nodes, based on a filter.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * @depends: js-cookie or jquery-cookie\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n/* global Cookies:false */\n\n/*******************************************************************************\n * Private functions and variables\n */\nvar cookieStore = null,\n\tlocalStorageStore = window.localStorage ? {\n\t\tget: function(key){ return window.localStorage.getItem(key); },\n\t\tset: function(key, value){ window.localStorage.setItem(key, value); },\n\t\tremove: function(key){ window.localStorage.removeItem(key); }\n\t} : null,\n\tsessionStorageStore = window.sessionStorage ? {\n\t\tget: function(key){ return window.sessionStorage.getItem(key); },\n\t\tset: function(key, value){ window.sessionStorage.setItem(key, value); },\n\t\tremove: function(key){ window.sessionStorage.removeItem(key); }\n\t} : null,\n\t_assert = $.ui.fancytree.assert,\n\tACTIVE = \"active\",\n\tEXPANDED = \"expanded\",\n\tFOCUS = \"focus\",\n\tSELECTED = \"selected\";\n\nif( typeof Cookies === \"function\" ) {\n\t// Assume https://github.com/js-cookie/js-cookie\n\tcookieStore = {\n\t\tget: Cookies.get,\n\t\tset: function(key, value) {\n\t\t\tCookies.set(key, value, this.options.persist.cookie);\n\t\t},\n\t\tremove: Cookies.remove\n\t};\n} else if ( $ && typeof $.cookie === \"function\" ) {\n\t// Fall back to https://github.com/carhartl/jquery-cookie\n\tcookieStore = {\n\t\tget: $.cookie,\n\t\tset: function(key, value) {\n\t\t\t$.cookie.set(key, value, this.options.persist.cookie);\n\t\t},\n\t\tremove: $.removeCookie\n\t};\n}\n\n/* Recursively load lazy nodes\n * @param {string} mode 'load', 'expand', false\n */\nfunction _loadLazyNodes(tree, local, keyList, mode, dfd) {\n\tvar i, key, l, node,\n\t\tfoundOne = false,\n\t\texpandOpts = tree.options.persist.expandOpts,\n\t\tdeferredList = [],\n\t\tmissingKeyList = [];\n\n\tkeyList = keyList || [];\n\tdfd = dfd || $.Deferred();\n\n\tfor( i=0, l=keyList.length; i<l; i++ ) {\n\t\tkey = keyList[i];\n\t\tnode = tree.getNodeByKey(key);\n\t\tif( node ) {\n\t\t\tif( mode && node.isUndefined() ) {\n\t\t\t\tfoundOne = true;\n\t\t\t\ttree.debug(\"_loadLazyNodes: \" + node + \" is lazy: loading...\");\n\t\t\t\tif( mode === \"expand\" ) {\n\t\t\t\t\tdeferredList.push(node.setExpanded(true, expandOpts));\n\t\t\t\t} else {\n\t\t\t\t\tdeferredList.push(node.load());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttree.debug(\"_loadLazyNodes: \" + node + \" already loaded.\");\n\t\t\t\tnode.setExpanded(true, expandOpts);\n\t\t\t}\n\t\t} else {\n\t\t\tmissingKeyList.push(key);\n\t\t\ttree.debug(\"_loadLazyNodes: \" + node + \" was not yet found.\");\n\t\t}\n\t}\n\n\t$.when.apply($, deferredList).always(function(){\n\t\t// All lazy-expands have finished\n\t\tif( foundOne && missingKeyList.length > 0 ) {\n\t\t\t// If we read new nodes from server, try to resolve yet-missing keys\n\t\t\t_loadLazyNodes(tree, local, missingKeyList, mode, dfd);\n\t\t} else {\n\t\t\tif( missingKeyList.length ) {\n\t\t\t\ttree.warn(\"_loadLazyNodes: could not load those keys: \", missingKeyList);\n\t\t\t\tfor( i=0, l=missingKeyList.length; i<l; i++ ) {\n\t\t\t\t\tkey = keyList[i];\n\t\t\t\t\tlocal._appendKey(EXPANDED, keyList[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdfd.resolve();\n\t\t}\n\t});\n\treturn dfd;\n}\n\n\n/**\n * [ext-persist] Remove persistence data of the given type(s).\n * Called like\n *     $(\"#tree\").fancytree(\"getTree\").clearCookies(\"active expanded focus selected\");\n *\n * @alias Fancytree#clearData\n * @requires jquery.fancytree.persist.js\n */\n$.ui.fancytree._FancytreeClass.prototype.clearData = function(types){\n\tvar local = this.ext.persist,\n\t\tprefix = local.cookiePrefix;\n\n\ttypes = types || \"active expanded focus selected\";\n\tif(types.indexOf(ACTIVE) >= 0){\n\t\tlocal._data(prefix + ACTIVE, null);\n\t}\n\tif(types.indexOf(EXPANDED) >= 0){\n\t\tlocal._data(prefix + EXPANDED, null);\n\t}\n\tif(types.indexOf(FOCUS) >= 0){\n\t\tlocal._data(prefix + FOCUS, null);\n\t}\n\tif(types.indexOf(SELECTED) >= 0){\n\t\tlocal._data(prefix + SELECTED, null);\n\t}\n};\n\n$.ui.fancytree._FancytreeClass.prototype.clearCookies = function(types){\n\tthis.warn(\"'tree.clearCookies()' is deprecated since v2.27.0: use 'clearData()' instead.\");\n\treturn this.clearData(types);\n};\n\n/**\n * [ext-persist] Return persistence information from cookies\n *\n * Called like\n *     $(\"#tree\").fancytree(\"getTree\").getPersistData();\n *\n * @alias Fancytree#getPersistData\n * @requires jquery.fancytree.persist.js\n */\n$.ui.fancytree._FancytreeClass.prototype.getPersistData = function(){\n\tvar local = this.ext.persist,\n\t\tprefix = local.cookiePrefix,\n\t\tdelim = local.cookieDelimiter,\n\t\tres = {};\n\n\tres[ACTIVE] = local._data(prefix + ACTIVE);\n\tres[EXPANDED] = (local._data(prefix + EXPANDED) || \"\").split(delim);\n\tres[SELECTED] = (local._data(prefix + SELECTED) || \"\").split(delim);\n\tres[FOCUS] = local._data(prefix + FOCUS);\n\treturn res;\n};\n\n\n/* *****************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"persist\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tcookieDelimiter: \"~\",\n\t\tcookiePrefix: undefined, // 'fancytree-<treeId>-' by default\n\t\tcookie: {\n\t\t\traw: false,\n\t\t\texpires: \"\",\n\t\t\tpath: \"\",\n\t\t\tdomain: \"\",\n\t\t\tsecure: false\n\t\t},\n\t\texpandLazy: false,     // true: recursively expand and load lazy nodes\n\t\texpandOpts: undefined, // optional `opts` argument passed to setExpanded()\n\t\tfireActivate: true,    // false: suppress `activate` event after active node was restored\n\t\toverrideSource: true,  // true: cookie takes precedence over `source` data attributes.\n\t\tstore: \"auto\",         // 'cookie': force cookie, 'local': force localStore, 'session': force sessionStore\n\t\ttypes: \"active expanded focus selected\"\n\t},\n\n\t/* Generic read/write string data to cookie, sessionStorage or localStorage. */\n\t_data: function(key, value){\n\t\tvar store = this._local.store;\n\n\t\tif( value === undefined ) {\n\t\t\treturn store.get.call(this, key);\n\t\t} else if ( value === null ) {\n\t\t\tstore.remove.call(this, key);\n\t\t} else {\n\t\t\tstore.set.call(this, key, value);\n\t\t}\n\t},\n\n\t/* Append `key` to a cookie. */\n\t_appendKey: function(type, key, flag){\n\t\tkey = \"\" + key; // #90\n\t\tvar local = this._local,\n\t\t\tinstOpts = this.options.persist,\n\t\t\tdelim = instOpts.cookieDelimiter,\n\t\t\tcookieName = local.cookiePrefix + type,\n\t\t\tdata = local._data(cookieName),\n\t\t\tkeyList = data ? data.split(delim) : [],\n\t\t\tidx = $.inArray(key, keyList);\n\t\t// Remove, even if we add a key,  so the key is always the last entry\n\t\tif(idx >= 0){\n\t\t\tkeyList.splice(idx, 1);\n\t\t}\n\t\t// Append key to cookie\n\t\tif(flag){\n\t\t\tkeyList.push(key);\n\t\t}\n\t\tlocal._data(cookieName, keyList.join(delim));\n\t},\n\n\ttreeInit: function(ctx){\n\t\tvar tree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\tlocal = this._local,\n\t\t\tinstOpts = this.options.persist;\n\n\t\t// // For 'auto' or 'cookie' mode, the cookie plugin must be available\n\t\t// _assert((instOpts.store !== \"auto\" && instOpts.store !== \"cookie\") || cookieStore,\n\t\t// \t\"Missing required plugin for 'persist' extension: js.cookie.js or jquery.cookie.js\");\n\n\t\tlocal.cookiePrefix = instOpts.cookiePrefix || (\"fancytree-\" + tree._id + \"-\");\n\t\tlocal.storeActive = instOpts.types.indexOf(ACTIVE) >= 0;\n\t\tlocal.storeExpanded = instOpts.types.indexOf(EXPANDED) >= 0;\n\t\tlocal.storeSelected = instOpts.types.indexOf(SELECTED) >= 0;\n\t\tlocal.storeFocus = instOpts.types.indexOf(FOCUS) >= 0;\n\t\tlocal.store = null;\n\n\t\tif( instOpts.store === \"auto\" ) {\n\t\t\tinstOpts.store = localStorageStore ? \"local\" : \"cookie\";\n\t\t}\n\t\tif( $.isPlainObject(instOpts.store) ) {\n\t\t\tlocal.store = instOpts.store;\n\t\t} else if( instOpts.store === \"cookie\" ) {\n\t\t\tlocal.store = cookieStore;\n\t\t} else if( instOpts.store === \"local\" ){\n\t\t\tlocal.store = (instOpts.store === \"local\") ? localStorageStore : sessionStorageStore;\n\t\t} else if( instOpts.store === \"session\" ){\n\t\t\tlocal.store = (instOpts.store === \"local\") ? localStorageStore : sessionStorageStore;\n\t\t}\n\t\t_assert(local.store, \"Need a valid store.\");\n\n\t\t// Bind init-handler to apply cookie state\n\t\ttree.$div.on(\"fancytreeinit\", function(event){\n\t\t\tif ( tree._triggerTreeEvent(\"beforeRestore\", null, {}) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cookie, dfd, i, keyList, node,\n\t\t\t\tprevFocus = local._data(local.cookiePrefix + FOCUS), // record this before node.setActive() overrides it;\n\t\t\t\tnoEvents = instOpts.fireActivate === false;\n\n\t\t\t// tree.debug(\"document.cookie:\", document.cookie);\n\n\t\t\tcookie = local._data(local.cookiePrefix + EXPANDED);\n\t\t\tkeyList = cookie && cookie.split(instOpts.cookieDelimiter);\n\n\t\t\tif( local.storeExpanded ) {\n\t\t\t\t// Recursively load nested lazy nodes if expandLazy is 'expand' or 'load'\n\t\t\t\t// Also remove expand-cookies for unmatched nodes\n\t\t\t\tdfd = _loadLazyNodes(tree, local, keyList, instOpts.expandLazy ? \"expand\" : false , null);\n\t\t\t} else {\n\t\t\t\t// nothing to do\n\t\t\t\tdfd = new $.Deferred().resolve();\n\t\t\t}\n\n\t\t\tdfd.done(function(){\n\t\t\t\tif(local.storeSelected){\n\t\t\t\t\tcookie = local._data(local.cookiePrefix + SELECTED);\n\t\t\t\t\tif(cookie){\n\t\t\t\t\t\tkeyList = cookie.split(instOpts.cookieDelimiter);\n\t\t\t\t\t\tfor(i=0; i<keyList.length; i++){\n\t\t\t\t\t\t\tnode = tree.getNodeByKey(keyList[i]);\n\t\t\t\t\t\t\tif(node){\n\t\t\t\t\t\t\t\tif(node.selected === undefined || instOpts.overrideSource && (node.selected === false)){\n//\t\t\t\t\t\t\t\t\tnode.setSelected();\n\t\t\t\t\t\t\t\t\tnode.selected = true;\n\t\t\t\t\t\t\t\t\tnode.renderStatus();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t// node is no longer member of the tree: remove from cookie also\n\t\t\t\t\t\t\t\tlocal._appendKey(SELECTED, keyList[i], false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// In selectMode 3 we have to fix the child nodes, since we\n\t\t\t\t\t// only stored the selected *top* nodes\n\t\t\t\t\tif( tree.options.selectMode === 3 ){\n\t\t\t\t\t\ttree.visit(function(n){\n\t\t\t\t\t\t\tif( n.selected ) {\n\t\t\t\t\t\t\t\tn.fixSelection3AfterClick();\n\t\t\t\t\t\t\t\treturn \"skip\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(local.storeActive){\n\t\t\t\t\tcookie = local._data(local.cookiePrefix + ACTIVE);\n\t\t\t\t\tif(cookie && (opts.persist.overrideSource || !tree.activeNode)){\n\t\t\t\t\t\tnode = tree.getNodeByKey(cookie);\n\t\t\t\t\t\tif(node){\n\t\t\t\t\t\t\tnode.debug(\"persist: set active\", cookie);\n\t\t\t\t\t\t\t// We only want to set the focus if the container\n\t\t\t\t\t\t\t// had the keyboard focus before\n\t\t\t\t\t\t\tnode.setActive(true, {\n\t\t\t\t\t\t\t\tnoFocus: true,\n\t\t\t\t\t\t\t\tnoEvents: noEvents\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(local.storeFocus && prevFocus){\n\t\t\t\t\tnode = tree.getNodeByKey(prevFocus);\n\t\t\t\t\tif(node){\n\t\t\t\t\t\t// node.debug(\"persist: set focus\", cookie);\n\t\t\t\t\t\tif( tree.options.titlesTabbable ) {\n\t\t\t\t\t\t\t$(node.span).find(\".fancytree-title\").focus();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(tree.$container).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// node.setFocus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttree._triggerTreeEvent(\"restore\", null, {});\n\t\t\t});\n\t\t});\n\t\t// Init the tree\n\t\treturn this._superApply(arguments);\n\t},\n\tnodeSetActive: function(ctx, flag, callOpts) {\n\t\tvar res,\n\t\t\tlocal = this._local;\n\n\t\tflag = (flag !== false);\n\t\tres = this._superApply(arguments);\n\n\t\tif(local.storeActive){\n\t\t\tlocal._data(local.cookiePrefix + ACTIVE, this.activeNode ? this.activeNode.key : null);\n\t\t}\n\t\treturn res;\n\t},\n\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\tvar res,\n\t\t\tnode = ctx.node,\n\t\t\tlocal = this._local;\n\n\t\tflag = (flag !== false);\n\t\tres = this._superApply(arguments);\n\n\t\tif(local.storeExpanded){\n\t\t\tlocal._appendKey(EXPANDED, node.key, flag);\n\t\t}\n\t\treturn res;\n\t},\n\tnodeSetFocus: function(ctx, flag) {\n\t\tvar res,\n\t\t\tlocal = this._local;\n\n\t\tflag = (flag !== false);\n\t\tres = this._superApply(arguments);\n\n\t\tif( local.storeFocus ) {\n\t\t\tlocal._data(local.cookiePrefix + FOCUS, this.focusNode ? this.focusNode.key : null);\n\t\t}\n\t\treturn res;\n\t},\n\tnodeSetSelected: function(ctx, flag, callOpts) {\n\t\tvar res, selNodes,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\tlocal = this._local;\n\n\t\tflag = (flag !== false);\n\t\tres = this._superApply(arguments);\n\n\t\tif(local.storeSelected){\n\t\t\tif( tree.options.selectMode === 3 ){\n\t\t\t\t// In selectMode 3 we only store the the selected *top* nodes.\n\t\t\t\t// De-selecting a node may also de-select some parents, so we\n\t\t\t\t// calculate the current status again\n\t\t\t\tselNodes = $.map(tree.getSelectedNodes(true), function(n){\n\t\t\t\t\treturn n.key;\n\t\t\t\t});\n\t\t\t\tselNodes = selNodes.join(ctx.options.persist.cookieDelimiter);\n\t\t\t\tlocal._data(local.cookiePrefix + SELECTED, selNodes);\n\t\t\t} else {\n\t\t\t\t// beforeSelect can prevent the change - flag doesn't reflect the node.selected state\n\t\t\t\tlocal._appendKey(SELECTED, node.key, node.selected);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.table.js\n *\n * Render tree as table (aka 'tree grid', 'table tree').\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/* *****************************************************************************\n * Private functions and variables\n */\nfunction _assert(cond, msg){\n\tmsg = msg || \"\";\n\tif(!cond){\n\t\t$.error(\"Assertion failed \" + msg);\n\t}\n}\n\nfunction insertFirstChild(referenceNode, newNode) {\n\treferenceNode.insertBefore(newNode, referenceNode.firstChild);\n}\n\nfunction insertSiblingAfter(referenceNode, newNode) {\n\treferenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n\n/* Show/hide all rows that are structural descendants of `parent`. */\nfunction setChildRowVisibility(parent, flag) {\n\tparent.visit(function(node){\n\t\tvar tr = node.tr;\n\t\t// currentFlag = node.hide ? false : flag; // fix for ext-filter\n\t\tif(tr){\n\t\t\ttr.style.display = (node.hide || !flag) ? \"none\" : \"\";\n\t\t}\n\t\tif(!node.expanded){\n\t\t\treturn \"skip\";\n\t\t}\n\t});\n}\n\n/* Find node that is rendered in previous row. */\nfunction findPrevRowNode(node){\n\tvar i, last, prev,\n\t\tparent = node.parent,\n\t\tsiblings = parent ? parent.children : null;\n\n\tif(siblings && siblings.length > 1 && siblings[0] !== node){\n\t\t// use the lowest descendant of the preceeding sibling\n\t\ti = $.inArray(node, siblings);\n\t\tprev = siblings[i - 1];\n\t\t_assert(prev.tr);\n\t\t// descend to lowest child (with a <tr> tag)\n\t\twhile(prev.children && prev.children.length){\n\t\t\tlast = prev.children[prev.children.length - 1];\n\t\t\tif(!last.tr){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprev = last;\n\t\t}\n\t}else{\n\t\t// if there is no preceding sibling, use the direct parent\n\t\tprev = parent;\n\t}\n\treturn prev;\n}\n\n/* Render callback for 'wide' mode. */\n// function _renderStatusNodeWide(event, data) {\n// \tvar node = data.node,\n// \t\tnodeColumnIdx = data.options.table.nodeColumnIdx,\n// \t\t$tdList = $(node.tr).find(\">td\");\n\n// \t$tdList.eq(nodeColumnIdx).attr(\"colspan\", data.tree.columnCount);\n// \t$tdList.not(\":eq(\" + nodeColumnIdx + \")\").remove();\n// }\n\n\n$.ui.fancytree.registerExtension({\n\tname: \"table\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tcheckboxColumnIdx: null, // render the checkboxes into the this column index (default: nodeColumnIdx)\n\t\t// customStatus: false,\t // true: generate renderColumns events for status nodes\n\t\tindentation: 16,         // indent every node level by 16px\n\t\tnodeColumnIdx: 0         // render node expander, icon, and title to this column (default: #0)\n\t},\n\t// Overide virtual methods for this extension.\n\t// `this`       : is this extension object\n\t// `this._super`: the virtual function that was overriden (member of prev. extension or Fancytree)\n\ttreeInit: function(ctx){\n\t\tvar i, columnCount, n, $row, $tbody,\n\t\t\ttree = ctx.tree,\n\t\t\topts = ctx.options,\n\t\t\ttableOpts = opts.table,\n\t\t\t$table = tree.widget.element;\n\n\t\tif( tableOpts.customStatus != null ) {\n\t\t\tif( opts.renderStatusColumns != null) {\n\t\t\t\t$.error(\"The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' only instead.\");\n\t\t\t} else {\n\t\t\t\ttree.warn(\"The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' instead.\");\n\t\t\t\topts.renderStatusColumns = tableOpts.customStatus;\n\t\t\t}\n\t\t}\n\t\tif( opts.renderStatusColumns ) {\n\t\t\tif( opts.renderStatusColumns === true ) {\n\t\t\t\topts.renderStatusColumns = opts.renderColumns;\n\t\t\t// } else if( opts.renderStatusColumns === \"wide\" ) {\n\t\t\t// \topts.renderStatusColumns = _renderStatusNodeWide;\n\t\t\t}\n\t\t}\n\n\t\t$table.addClass(\"fancytree-container fancytree-ext-table\");\n\t\t$tbody = $table.find(\">tbody\");\n\t\tif( !$tbody.length ) {\n\t\t\t// TODO: not sure if we can rely on browsers to insert missing <tbody> before <tr>s:\n\t\t\tif( $table.find(\">tr\").length ) {\n\t\t\t\t$.error(\"Expected table > tbody > tr. If you see this please open an issue.\");\n\t\t\t}\n\t\t\t$tbody = $(\"<tbody>\").appendTo($table);\n\t\t}\n\n\t\ttree.tbody = $tbody[0];\n\n\t\t// Prepare row templates:\n\t\t// Determine column count from table header if any\n\t\tcolumnCount = $(\"thead >tr:last >th\", $table).length;\n\t\t// Read TR templates from tbody if any\n\t\t$row = $tbody.children(\"tr:first\");\n\t\tif( $row.length ) {\n\t\t\tn = $row.children(\"td\").length;\n\t\t\tif( columnCount && n !== columnCount ) {\n\t\t\t\ttree.warn(\"Column count mismatch between thead (\" + columnCount + \") and tbody (\" + n + \"): using tbody.\");\n\t\t\t\tcolumnCount = n;\n\t\t\t}\n\t\t\t$row = $row.clone();\n\t\t} else {\n\t\t\t// Only thead is defined: create default row markup\n\t\t\t_assert(columnCount >= 1, \"Need either <thead> or <tbody> with <td> elements to determine column count.\");\n\t\t\t$row = $(\"<tr />\");\n\t\t\tfor(i=0; i<columnCount; i++) {\n\t\t\t\t$row.append(\"<td />\");\n\t\t\t}\n\t\t}\n\t\t$row.find(\">td\").eq(tableOpts.nodeColumnIdx)\n\t\t\t.html(\"<span class='fancytree-node' />\");\n\t\tif( opts.aria ) {\n\t\t\t$row.attr(\"role\", \"row\");\n\t\t\t$row.find(\"td\").attr(\"role\", \"gridcell\");\n\t\t}\n\t\ttree.rowFragment = document.createDocumentFragment();\n\t\ttree.rowFragment.appendChild($row.get(0));\n\n\t\t// // If tbody contains a second row, use this as status node template\n\t\t// $row = $tbody.children(\"tr:eq(1)\");\n\t\t// if( $row.length === 0 ) {\n\t\t// \ttree.statusRowFragment = tree.rowFragment;\n\t\t// } else {\n\t\t// \t$row = $row.clone();\n\t\t// \ttree.statusRowFragment = document.createDocumentFragment();\n\t\t// \ttree.statusRowFragment.appendChild($row.get(0));\n\t\t// }\n\t\t//\n\t\t$tbody.empty();\n\n\t\t// Make sure that status classes are set on the node's <tr> elements\n\t\ttree.statusClassPropName = \"tr\";\n\t\ttree.ariaPropName = \"tr\";\n\t\tthis.nodeContainerAttrName = \"tr\";\n\n\t\t// #489: make sure $container is set to <table>, even if ext-dnd is listed before ext-table\n\t\ttree.$container = $table;\n\n\t\tthis._superApply(arguments);\n\n\t\t// standard Fancytree created a root UL\n\t\t$(tree.rootNode.ul).remove();\n\t\ttree.rootNode.ul = null;\n\n\t\t// Add container to the TAB chain\n\t\t// #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\t\tthis.$container.attr(\"tabindex\", opts.tabindex);\n\t\t// this.$container.attr(\"tabindex\", opts.tabbable ? \"0\" : \"-1\");\n\t\tif(opts.aria) {\n\t\t\ttree.$container\n\t\t\t\t.attr(\"role\", \"treegrid\")\n\t\t\t\t.attr(\"aria-readonly\", true);\n\t\t}\n\t},\n\tnodeRemoveChildMarkup: function(ctx) {\n\t\tvar node = ctx.node;\n//\t\tnode.debug(\"nodeRemoveChildMarkup()\");\n\t\tnode.visit(function(n){\n\t\t\tif(n.tr){\n\t\t\t\t$(n.tr).remove();\n\t\t\t\tn.tr = null;\n\t\t\t}\n\t\t});\n\t},\n\tnodeRemoveMarkup: function(ctx) {\n\t\tvar node = ctx.node;\n//\t\tnode.debug(\"nodeRemoveMarkup()\");\n\t\tif(node.tr){\n\t\t\t$(node.tr).remove();\n\t\t\tnode.tr = null;\n\t\t}\n\t\tthis.nodeRemoveChildMarkup(ctx);\n\t},\n\t/* Override standard render. */\n\tnodeRender: function(ctx, force, deep, collapsed, _recursive) {\n\t\tvar children, firstTr, i, l, newRow, prevNode, prevTr, subCtx,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\topts = ctx.options,\n\t\t\tisRootNode = !node.parent;\n\n\t\tif( tree._enableUpdate === false ) {\n\t\t\t// $.ui.fancytree.debug(\"*** nodeRender _enableUpdate: false\");\n\t\t\treturn;\n\t\t}\n\t\tif( !_recursive ){\n\t\t\tctx.hasCollapsedParents = node.parent && !node.parent.expanded;\n\t\t}\n\t\t// $.ui.fancytree.debug(\"*** nodeRender \" + node + \", isRoot=\" + isRootNode, \"tr=\" + node.tr, \"hcp=\" + ctx.hasCollapsedParents, \"parent.tr=\" + (node.parent && node.parent.tr));\n\t\tif( !isRootNode ){\n\t\t\tif( node.tr && force ) {\n\t\t\t\tthis.nodeRemoveMarkup(ctx);\n\t\t\t}\n\t\t\tif( !node.tr ) {\n\t\t\t\tif( ctx.hasCollapsedParents && !deep ) {\n\t\t\t\t\t// #166: we assume that the parent will be (recursively) rendered\n\t\t\t\t\t// later anyway.\n\t\t\t\t\t// node.debug(\"nodeRender ignored due to unrendered parent\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Create new <tr> after previous row\n\t\t\t\t// if( node.isStatusNode() ) {\n\t\t\t\t// \tnewRow = tree.statusRowFragment.firstChild.cloneNode(true);\n\t\t\t\t// } else {\n\t\t\t\tnewRow = tree.rowFragment.firstChild.cloneNode(true);\n\t\t\t\t// }\n\t\t\t\tprevNode = findPrevRowNode(node);\n\t\t\t\t// $.ui.fancytree.debug(\"*** nodeRender \" + node + \": prev: \" + prevNode.key);\n\t\t\t\t_assert(prevNode);\n\t\t\t\tif(collapsed === true && _recursive){\n\t\t\t\t\t// hide all child rows, so we can use an animation to show it later\n\t\t\t\t\tnewRow.style.display = \"none\";\n\t\t\t\t}else if(deep && ctx.hasCollapsedParents){\n\t\t\t\t\t// also hide this row if deep === true but any parent is collapsed\n\t\t\t\t\tnewRow.style.display = \"none\";\n//\t\t\t\t\tnewRow.style.color = \"red\";\n\t\t\t\t}\n\t\t\t\tif(!prevNode.tr){\n\t\t\t\t\t_assert(!prevNode.parent, \"prev. row must have a tr, or be system root\");\n\t\t\t\t\t// tree.tbody.appendChild(newRow);\n\t\t\t\t\tinsertFirstChild(tree.tbody, newRow);  // #675\n\t\t\t\t}else{\n\t\t\t\t\tinsertSiblingAfter(prevNode.tr, newRow);\n\t\t\t\t}\n\t\t\t\tnode.tr = newRow;\n\t\t\t\tif( node.key && opts.generateIds ){\n\t\t\t\t\tnode.tr.id = opts.idPrefix + node.key;\n\t\t\t\t}\n\t\t\t\tnode.tr.ftnode = node;\n\t\t\t\t// if(opts.aria){\n\t\t\t\t// \t$(node.tr).attr(\"aria-labelledby\", \"ftal_\" + opts.idPrefix + node.key);\n\t\t\t\t// }\n\t\t\t\tnode.span = $(\"span.fancytree-node\", node.tr).get(0);\n\t\t\t\t// Set icon, link, and title (normally this is only required on initial render)\n\t\t\t\tthis.nodeRenderTitle(ctx);\n\t\t\t\t// Allow tweaking, binding, after node was created for the first time\n//\t\t\t\ttree._triggerNodeEvent(\"createNode\", ctx);\n\t\t\t\tif ( opts.createNode ){\n\t\t\t\t\topts.createNode.call(tree, {type: \"createNode\"}, ctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( force ) {\n\t\t\t\t\t// Set icon, link, and title (normally this is only required on initial render)\n\t\t\t\t\tthis.nodeRenderTitle(ctx); // triggers renderColumns()\n\t\t\t\t} else {\n\t\t\t\t\t// Update element classes according to node state\n\t\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Allow tweaking after node state was rendered\n//\t\ttree._triggerNodeEvent(\"renderNode\", ctx);\n\t\tif ( opts.renderNode ){\n\t\t\topts.renderNode.call(tree, {type: \"renderNode\"}, ctx);\n\t\t}\n\t\t// Visit child nodes\n\t\t// Add child markup\n\t\tchildren = node.children;\n\t\tif(children && (isRootNode || deep || node.expanded)){\n\t\t\tfor(i=0, l=children.length; i<l; i++) {\n\t\t\t\tsubCtx = $.extend({}, ctx, {node: children[i]});\n\t\t\t\tsubCtx.hasCollapsedParents = subCtx.hasCollapsedParents || !node.expanded;\n\t\t\t\tthis.nodeRender(subCtx, force, deep, collapsed, true);\n\t\t\t}\n\t\t}\n\t\t// Make sure, that <tr> order matches node.children order.\n\t\tif(children && !_recursive){ // we only have to do it once, for the root branch\n\t\t\tprevTr = node.tr || null;\n\t\t\tfirstTr = tree.tbody.firstChild;\n\t\t\t// Iterate over all descendants\n\t\t\tnode.visit(function(n){\n\t\t\t\tif(n.tr){\n\t\t\t\t\tif(!n.parent.expanded && n.tr.style.display !== \"none\"){\n\t\t\t\t\t\t// fix after a node was dropped over a collapsed\n\t\t\t\t\t\tn.tr.style.display = \"none\";\n\t\t\t\t\t\tsetChildRowVisibility(n, false);\n\t\t\t\t\t}\n\t\t\t\t\tif(n.tr.previousSibling !== prevTr){\n\t\t\t\t\t\tnode.debug(\"_fixOrder: mismatch at node: \" + n);\n\t\t\t\t\t\tvar nextTr = prevTr ? prevTr.nextSibling : firstTr;\n\t\t\t\t\t\ttree.tbody.insertBefore(n.tr, nextTr);\n\t\t\t\t\t}\n\t\t\t\t\tprevTr = n.tr;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Update element classes according to node state\n\t\t// if(!isRootNode){\n\t\t// \tthis.nodeRenderStatus(ctx);\n\t\t// }\n\t},\n\tnodeRenderTitle: function(ctx, title) {\n\t\tvar $cb, res,\n\t\t\tnode = ctx.node,\n\t\t\topts = ctx.options,\n\t\t\tisStatusNode = node.isStatusNode();\n\n\t\tres = this._super(ctx, title);\n\n\t\tif( node.isRootNode() ) {\n\t\t\treturn res;\n\t\t}\n\t\t// Move checkbox to custom column\n\t\tif(opts.checkbox && !isStatusNode && opts.table.checkboxColumnIdx != null ){\n\t\t\t$cb = $(\"span.fancytree-checkbox\", node.span); //.detach();\n\t\t\t$(node.tr).find(\"td\").eq(+opts.table.checkboxColumnIdx).html($cb);\n\t\t}\n\t\t// Update element classes according to node state\n\t\tthis.nodeRenderStatus(ctx);\n\n\t\tif( isStatusNode ) {\n\t\t\tif( opts.renderStatusColumns ) {\n\t\t\t\t// Let user code write column content\n\t\t\t\topts.renderStatusColumns.call(ctx.tree, {type: \"renderStatusColumns\"}, ctx);\n\t\t\t} // else: default rendering for status node: leave other cells empty\n\t\t} else if ( opts.renderColumns ) {\n\t\t\topts.renderColumns.call(ctx.tree, {type: \"renderColumns\"}, ctx);\n\t\t}\n\t\treturn res;\n\t},\n\tnodeRenderStatus: function(ctx) {\n\t\tvar indent,\n\t\t\tnode = ctx.node,\n\t\t\topts = ctx.options;\n\n\t\tthis._super(ctx);\n\n\t\t$(node.tr).removeClass(\"fancytree-node\");\n\t\t// indent\n\t\tindent = (node.getLevel() - 1) * opts.table.indentation;\n\t\t$(node.span).css({paddingLeft: indent + \"px\"});  // #460\n\t\t// $(node.span).css({marginLeft: indent + \"px\"});\n\t },\n\t/* Expand node, return Deferred.promise. */\n\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\t// flag defaults to true\n\t\tflag = (flag !== false);\n\n\t\tif((ctx.node.expanded && flag) || (!ctx.node.expanded && !flag)) {\n\t\t\t// Expanded state isn't changed - just call base implementation\n\t\t\treturn this._superApply(arguments);\n\t\t}\n\n\t\tvar dfd = new $.Deferred(),\n\t\t\tsubOpts = $.extend({}, callOpts, {noEvents: true, noAnimation: true});\n\n\t\tcallOpts = callOpts || {};\n\n\t\tfunction _afterExpand(ok) {\n\t\t\tsetChildRowVisibility(ctx.node, flag);\n\t\t\tif( ok ) {\n\t\t\t\tif( flag && ctx.options.autoScroll && !callOpts.noAnimation && ctx.node.hasChildren() ) {\n\t\t\t\t\t// Scroll down to last child, but keep current node visible\n\t\t\t\t\tctx.node.getLastChild().scrollIntoView(true, {topNode: ctx.node}).always(function(){\n\t\t\t\t\t\tif( !callOpts.noEvents ) {\n\t\t\t\t\t\t\tctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdfd.resolveWith(ctx.node);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif( !callOpts.noEvents ) {\n\t\t\t\t\t\tctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n\t\t\t\t\t}\n\t\t\t\t\tdfd.resolveWith(ctx.node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !callOpts.noEvents ) {\n\t\t\t\t\tctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n\t\t\t\t}\n\t\t\t\tdfd.rejectWith(ctx.node);\n\t\t\t}\n\t\t}\n\t\t// Call base-expand with disabled events and animation\n\t\tthis._super(ctx, flag, subOpts).done(function () {\n\t\t\t_afterExpand(true);\n\t\t}).fail(function () {\n\t\t\t_afterExpand(false);\n\t\t});\n\t\treturn dfd.promise();\n\t},\n\tnodeSetStatus: function(ctx, status, message, details) {\n\t\tif(status === \"ok\"){\n\t\t\tvar node = ctx.node,\n\t\t\t\tfirstChild = ( node.children ? node.children[0] : null );\n\t\t\tif ( firstChild && firstChild.isStatusNode() ) {\n\t\t\t\t$(firstChild.tr).remove();\n\t\t\t}\n\t\t}\n\t\treturn this._superApply(arguments);\n\t},\n\ttreeClear: function(ctx) {\n\t\tthis.nodeRemoveChildMarkup(this._makeHookContext(this.rootNode));\n\t\treturn this._superApply(arguments);\n\t},\n\ttreeDestroy: function(ctx) {\n\t\tthis.$container.find(\"tbody\").empty();\n\t\tthis.$source && this.$source.removeClass(\"ui-helper-hidden\");\n\t\treturn this._superApply(arguments);\n\t}\n\t/*,\n\ttreeSetFocus: function(ctx, flag) {\n//\t        alert(\"treeSetFocus\" + ctx.tree.$container);\n\t\tctx.tree.$container.focus();\n\t\t$.ui.fancytree.focusTree = ctx.tree;\n\t}*/\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.themeroller.js\n *\n * Enable jQuery UI ThemeRoller styles.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * @see http://jqueryui.com/themeroller/\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"themeroller\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\tactiveClass: \"ui-state-active\",      // Class added to active node\n\t\t// activeClass: \"ui-state-highlight\",\n\t\taddClass: \"ui-corner-all\",           // Class added to all nodes\n\t\tfocusClass: \"ui-state-focus\",        // Class added to focused node\n\t\thoverClass: \"ui-state-hover\",        // Class added to hovered node\n\t\tselectedClass: \"ui-state-highlight\"  // Class added to selected nodes\n\t\t// selectedClass: \"ui-state-active\"\n\t},\n\n\ttreeInit: function(ctx){\n\t\tvar $el = ctx.widget.element,\n\t\t\topts = ctx.options.themeroller;\n\n\t\tthis._superApply(arguments);\n\n\t\tif($el[0].nodeName === \"TABLE\"){\n\t\t\t$el.addClass(\"ui-widget ui-corner-all\");\n\t\t\t$el.find(\">thead tr\").addClass(\"ui-widget-header\");\n\t\t\t$el.find(\">tbody\").addClass(\"ui-widget-conent\");\n\t\t}else{\n\t\t\t$el.addClass(\"ui-widget ui-widget-content ui-corner-all\");\n\t\t}\n\n\t\t$el.delegate(\".fancytree-node\", \"mouseenter mouseleave\", function(event){\n\t\t\tvar node = $.ui.fancytree.getNode(event.target),\n\t\t\t\tflag = (event.type === \"mouseenter\");\n\n\t\t\t$(node.tr ? node.tr : node.span)\n\t\t\t\t.toggleClass(opts.hoverClass + \" \" + opts.addClass, flag);\n\t\t});\n\t},\n\ttreeDestroy: function(ctx){\n\t\tthis._superApply(arguments);\n\t\tctx.widget.element.removeClass(\"ui-widget ui-widget-content ui-corner-all\");\n\t},\n\tnodeRenderStatus: function(ctx){\n\t\tvar classes = {},\n\t\t\tnode = ctx.node,\n\t\t\t$el = $(node.tr ? node.tr : node.span),\n\t\t\topts = ctx.options.themeroller;\n\n\t\tthis._super(ctx);\n/*\n\t\t.ui-state-highlight: Class to be applied to highlighted or selected elements. Applies \"highlight\" container styles to an element and its child text, links, and icons.\n\t\t.ui-state-error: Class to be applied to error messaging container elements. Applies \"error\" container styles to an element and its child text, links, and icons.\n\t\t.ui-state-error-text: An additional class that applies just the error text color without background. Can be used on form labels for instance. Also applies error icon color to child icons.\n\n\t\t.ui-state-default: Class to be applied to clickable button-like elements. Applies \"clickable default\" container styles to an element and its child text, links, and icons.\n\t\t.ui-state-hover: Class to be applied on mouseover to clickable button-like elements. Applies \"clickable hover\" container styles to an element and its child text, links, and icons.\n\t\t.ui-state-focus: Class to be applied on keyboard focus to clickable button-like elements. Applies \"clickable hover\" container styles to an element and its child text, links, and icons.\n\t\t.ui-state-active: Class to be applied on mousedown to clickable button-like elements. Applies \"clickable active\" container styles to an element and its child text, links, and icons.\n*/\n\t\t// Set ui-state-* class (handle the case that the same class is assigned\n\t\t// to different states)\n\t\tclasses[opts.activeClass] = false;\n\t\tclasses[opts.focusClass] = false;\n\t\tclasses[opts.selectedClass] = false;\n\t\tif( node.isActive() ) { classes[opts.activeClass] = true; }\n\t\tif( node.hasFocus() ) { classes[opts.focusClass]  = true; }\n\t\t// activeClass takes precedence before selectedClass:\n\t\tif( node.isSelected() && !node.isActive() ) { classes[opts.selectedClass]  = true; }\n\t\t$el.toggleClass(opts.activeClass, classes[opts.activeClass]);\n\t\t$el.toggleClass(opts.focusClass, classes[opts.focusClass]);\n\t\t$el.toggleClass(opts.selectedClass, classes[opts.selectedClass]);\n\t\t// Additional classes (e.g. 'ui-corner-all')\n\t\t$el.addClass(opts.addClass);\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n\n/*!\n * jquery.fancytree.wide.js\n * Support for 100% wide selection bars.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.27.0\n * @date 2017-12-16T09:14:27Z\n */\n\n;(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./jquery.fancytree\" ], factory );\n\t} else if ( typeof module === \"object\" && module.exports ) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n\n}( function( $ ) {\n\n\"use strict\";\n\nvar reNumUnit = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/; // split \"1.5em\" to [\"1.5\", \"em\"]\n\n/*******************************************************************************\n * Private functions and variables\n */\n// var _assert = $.ui.fancytree.assert;\n\n/* Calculate inner width without scrollbar */\n// function realInnerWidth($el) {\n// \t// http://blog.jquery.com/2012/08/16/jquery-1-8-box-sizing-width-csswidth-and-outerwidth/\n// //\tinst.contWidth = parseFloat(this.$container.css(\"width\"), 10);\n// \t// 'Client width without scrollbar' - 'padding'\n// \treturn $el[0].clientWidth - ($el.innerWidth() -  parseFloat($el.css(\"width\"), 10));\n// }\n\n/* Create a global embedded CSS style for the tree. */\nfunction defineHeadStyleElement(id, cssText) {\n\tid = \"fancytree-style-\" + id;\n\tvar $headStyle = $(\"#\" + id);\n\n\tif( !cssText ) {\n\t\t$headStyle.remove();\n\t\treturn null;\n\t}\n\tif( !$headStyle.length ) {\n\t\t$headStyle = $(\"<style />\")\n\t\t\t.attr(\"id\", id)\n\t\t\t.addClass(\"fancytree-style\")\n\t\t\t.prop(\"type\", \"text/css\")\n\t\t\t.appendTo(\"head\");\n\t}\n\ttry {\n\t\t$headStyle.html(cssText);\n\t} catch ( e ) {\n\t\t// fix for IE 6-8\n\t\t$headStyle[0].styleSheet.cssText = cssText;\n\t}\n\treturn $headStyle;\n}\n\n/* Calculate the CSS rules that indent title spans. */\nfunction renderLevelCss(containerId, depth, levelOfs, lineOfs, labelOfs, measureUnit)\n{\n\tvar i,\n\t\tprefix = \"#\" + containerId + \" span.fancytree-level-\",\n\t\trules = [];\n\n\tfor(i = 0; i < depth; i++) {\n\t\trules.push(prefix + (i + 1) + \" span.fancytree-title { padding-left: \" +\n\t\t\t(i * levelOfs + lineOfs) + measureUnit + \"; }\");\n\t}\n\t// Some UI animations wrap the UL inside a DIV and set position:relative on both.\n\t// This breaks the left:0 and padding-left:nn settings of the title\n\trules.push(\n\t\t\"#\" + containerId + \" div.ui-effects-wrapper ul li span.fancytree-title, \" +\n\t\t\"#\" + containerId + \" li.fancytree-animating span.fancytree-title \" +  // #716\n\t\t\"{ padding-left: \" + labelOfs + measureUnit + \"; position: static; width: auto; }\");\n\treturn rules.join(\"\\n\");\n}\n\n\n// /**\n//  * [ext-wide] Recalculate the width of the selection bar after the tree container\n//  * was resized.<br>\n//  * May be called explicitly on container resize, since there is no resize event\n//  * for DIV tags.\n//  *\n//  * @alias Fancytree#wideUpdate\n//  * @requires jquery.fancytree.wide.js\n//  */\n// $.ui.fancytree._FancytreeClass.prototype.wideUpdate = function(){\n// \tvar inst = this.ext.wide,\n// \t\tprevCw = inst.contWidth,\n// \t\tprevLo = inst.lineOfs;\n\n// \tinst.contWidth = realInnerWidth(this.$container);\n// \t// Each title is precceeded by 2 or 3 icons (16px + 3 margin)\n// \t//     + 1px title border and 3px title padding\n// \t// TODO: use code from treeInit() below\n// \tinst.lineOfs = (this.options.checkbox ? 3 : 2) * 19;\n// \tif( prevCw !== inst.contWidth || prevLo !== inst.lineOfs ) {\n// \t\tthis.debug(\"wideUpdate: \" + inst.contWidth);\n// \t\tthis.visit(function(node){\n// \t\t\tnode.tree._callHook(\"nodeRenderTitle\", node);\n// \t\t});\n// \t}\n// };\n\n/*******************************************************************************\n * Extension code\n */\n$.ui.fancytree.registerExtension({\n\tname: \"wide\",\n\tversion: \"2.27.0\",\n\t// Default options for this extension.\n\toptions: {\n\t\ticonWidth: null,     // Adjust this if @fancy-icon-width != \"16px\"\n\t\ticonSpacing: null,   // Adjust this if @fancy-icon-spacing != \"3px\"\n\t\tlabelSpacing: null,  // Adjust this if padding between icon and label != \"3px\"\n\t\tlevelOfs: null       // Adjust this if ul padding != \"16px\"\n\t},\n\n\ttreeCreate: function(ctx){\n\t\tthis._superApply(arguments);\n\t\tthis.$container.addClass(\"fancytree-ext-wide\");\n\n\t\tvar containerId, cssText, iconSpacingUnit, labelSpacingUnit, iconWidthUnit, levelOfsUnit,\n\t\t\tinstOpts = ctx.options.wide,\n\t\t\t// css sniffing\n\t\t\t$dummyLI = $(\"<li id='fancytreeTemp'><span class='fancytree-node'><span class='fancytree-icon' /><span class='fancytree-title' /></span><ul />\")\n\t\t\t\t.appendTo(ctx.tree.$container),\n\t\t\t$dummyIcon = $dummyLI.find(\".fancytree-icon\"),\n\t\t\t$dummyUL = $dummyLI.find(\"ul\"),\n\t\t\t// $dummyTitle = $dummyLI.find(\".fancytree-title\"),\n\t\t\ticonSpacing = instOpts.iconSpacing || $dummyIcon.css(\"margin-left\"),\n\t\t\ticonWidth = instOpts.iconWidth || $dummyIcon.css(\"width\"),\n\t\t\tlabelSpacing = instOpts.labelSpacing || \"3px\",\n\t\t\tlevelOfs = instOpts.levelOfs || $dummyUL.css(\"padding-left\");\n\n\t\t$dummyLI.remove();\n\n\t\ticonSpacingUnit = iconSpacing.match(reNumUnit)[2];\n\t\ticonSpacing = parseFloat(iconSpacing, 10);\n\t\tlabelSpacingUnit = labelSpacing.match(reNumUnit)[2];\n\t\tlabelSpacing = parseFloat(labelSpacing, 10);\n\t\ticonWidthUnit = iconWidth.match(reNumUnit)[2];\n\t\ticonWidth = parseFloat(iconWidth, 10);\n\t\tlevelOfsUnit = levelOfs.match(reNumUnit)[2];\n\t\tif( iconSpacingUnit !== iconWidthUnit || levelOfsUnit !== iconWidthUnit || labelSpacingUnit !== iconWidthUnit ) {\n\t\t\t$.error(\"iconWidth, iconSpacing, and levelOfs must have the same css measure unit\");\n\t\t}\n\t\tthis._local.measureUnit = iconWidthUnit;\n\t\tthis._local.levelOfs = parseFloat(levelOfs);\n\t\tthis._local.lineOfs = (1 + (ctx.options.checkbox ? 1 : 0) +\n\t\t\t\t(ctx.options.icon === false ? 0 : 1)) * (iconWidth + iconSpacing) +\n\t\t\t\ticonSpacing;\n\t\tthis._local.labelOfs = labelSpacing;\n\t\tthis._local.maxDepth = 10;\n\n\t\t// Get/Set a unique Id on the container (if not already exists)\n\t\tcontainerId = this.$container.uniqueId().attr(\"id\");\n\t\t// Generated css rules for some levels (extended on demand)\n\t\tcssText = renderLevelCss(containerId, this._local.maxDepth,\n\t\t\tthis._local.levelOfs, this._local.lineOfs, this._local.labelOfs,\n\t\t\tthis._local.measureUnit);\n\t\tdefineHeadStyleElement(containerId, cssText);\n\t},\n\ttreeDestroy: function(ctx){\n\t\t// Remove generated css rules\n\t\tdefineHeadStyleElement(this.$container.attr(\"id\"), null);\n\t\treturn this._superApply(arguments);\n\t},\n\tnodeRenderStatus: function(ctx) {\n\t\tvar containerId, cssText, res,\n\t\t\tnode = ctx.node,\n\t\t\tlevel = node.getLevel();\n\n\t\tres = this._super(ctx);\n\t\t// Generate some more level-n rules if required\n\t\tif( level > this._local.maxDepth ) {\n\t\t\tcontainerId = this.$container.attr(\"id\");\n\t\t\tthis._local.maxDepth *= 2;\n\t\t\tnode.debug(\"Define global ext-wide css up to level \" + this._local.maxDepth);\n\t\t\tcssText = renderLevelCss(containerId, this._local.maxDepth,\n\t\t\t\tthis._local.levelOfs, this._local.lineOfs, this._local.labelSpacing,\n\t\t\t\tthis._local.measureUnit);\n\t\t\tdefineHeadStyleElement(containerId, cssText);\n\t\t}\n\t\t// Add level-n class to apply indentation padding.\n\t\t// (Setting element style would not work, since it cannot easily be\n\t\t// overriden while animations run)\n\t\t$(node.span).addClass(\"fancytree-level-\" + level);\n\t\treturn res;\n\t}\n});\n// Value returned by `require('jquery.fancytree..')`\nreturn $.ui.fancytree;\n}));  // End of closure\n"]}