{
    "common": {
        "name": "fullcalendar",
        "version": "0.2.4",
        "news": {
            "0.2.4": {
                "en": "Translations",
                "de": "Übersetzungen",
                "ru": "Поправлен перевод"
            },
            "0.2.3": {
                "en": "Fix interval settings\nUpdate fullcalendar library",
                "de": "Intervalleinstellungen korrigiert\nUpdate fullcalendar library",
                "ru": "Исправлена ошибка с интервалом\nОбновлена библиотека fullcalendar"
            },
            "0.2.1": {
                "en": "Fixed error",
                "de": "Fehler gefixt",
                "ru": "Исправлена ошибка"
            },
            "0.2.0": {
                "en": "Support of new admin",
                "de": "Unterstützung von neuen Admin",
                "ru": "Поддержка нового admin"
            },
            "0.1.1": {
                "en": "fix double event by creation",
                "de": "Korrigiert Doppel-Event",
                "ru": "Исправлено появление 2х событий"
            },
            "0.1.0": {
                "en": "initial commit",
                "de": "initial Commit",
                "ru": "Первая версия"
            }
        },
        "title": "Calendar schedule",
        "desc": {
            "en": "This adapter allows planing with calendar",
            "de": "Adapter für geplante Aktionen in ioBroker mittels Kalender",
            "ru": "Драйвер позволяет планировать с помощью календаря"
        },
        "authors": [
            "bluefox <dogafox@gmail.com>"
        ],
        "platform": "javascript/Node.js",
        "icon": "fullcalendar.png",
        "mode": "daemon",
        "keywords": [
            "schedule",
            "calendar"
        ],
        "messagebox": true,
        "extIcon": "https://raw.githubusercontent.com/ioBroker/ioBroker.fullcalendar/master/admin/fullcalendar.png",
        "readme": "https://github.com/ioBroker/ioBroker.fullcalendar/blob/master/README.md",
        "loglevel": "info",
        "adminTab": {
            "singleton": false,
            "name": "Calendar",
            "fa-icon": "fa-calendar"
        },
        "dependencies": [
            {
                "admin": ">=2.0.0"
            }
        ],
        "enabled": true,
        "type": "date-and-time",
        "noConfig": false
    },
    "native": {
        "debounce": 1000,
        "changesRelogInterval": 0,
        "ackType": "any",
        "changesMinDelta": 0,
        "allEventsEnabled": false,
        "allEventsMax": 1000,
        "allEventsSaveOnDisk": false,
        "eventsPath": "calendar/",
        "cfgEventsEnabled": true,
        "cfgEventsMax": 1000,
        "cfgEventsSaveOnDisk": false
    },
    "instanceObjects": [
        {
            "_id": "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id": "info.lastConfiguredEvent",
            "type": "state",
            "common": {
                "role": "state",
                "name": "Last configured event",
                "type": "json",
                "read": true,
                "write": false
            },
            "native": {}
        },
        {
            "_id": "info.lastEvent",
            "type": "state",
            "common": {
                "role": "state",
                "name": "Any last event",
                "type": "json",
                "read": true,
                "write": false
            },
            "native": {}
        }
    ],
    "objects": [
        {
            "_id": "_design/schedule",
            "language": "javascript",
            "views": {
                "schedule": {
                    "map": "function(doc) { if (doc.type === 'schedule') emit(doc.common.name, doc); }"
                }
            }
        },
        {
            "_id": "_design/custom",
            "language": "javascript",
            "views": {
                "state": {
                    "map": "function (doc) { if (doc.type === 'state' && doc.common && doc.common.custom) emit(doc._id, doc.common.custom) }"
                }
            }
        }
    ]
}
